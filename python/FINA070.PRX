#INCLUDE "PROTHEUS.CH"
#INCLUDE "ACADEF.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "FWADAPTEREAI.CH"
#INCLUDE "FINA070.CH"

Static lOpenCmc7
Static aPrefixo
Static lFDataUse
Static __lF070AltV
Static __F070VDATA 
Static lFinImp		:= .T.       //Define se ha retencao de impostos PCC/IRPJ no R.A  
Static dLastPcc		:= CTOD("22/06/2015")
Static __lRatAut	:= .F.
Static lMVGlosa		:= SuperGetMv("MV_GLOSA",.F.,.F.)
Static __lF070EAI	:= NIL
Static cAliasLote	:= ""
Static lTSE5FI70E	:= ExistTemplate("SE5FI70E")
Static lGEMSE5Grv	:= HasTemplate("LOT") .and. ExistTemplate("GEMSE5Grv")
Static lSE5FI70E	:= ExistBlock("SE5FI70E")
Static lF070GerAb	:= ExistBlock("F070GerAb")
Static lF070CTC		:= ExistBlock("F070CTC")
Static lF070EST		:= ExistBlock("F070EST")
Static lF070EST2	:= ExistBlock("F070EST2")
Static lF070HisCan	:= ExistBlock("F070HisCan")
Static __aVAAuto	:= NIL
Static lPodeTVA		:= ExistFunc("FAPodeTVA")
Static lCpoSIX		:= ExistFunc("FinCposSix")
Static lF070ACRE	:= ExistBlock("F070ACRE")
Static lFA070POS	:= ExistBlock("FA070POS")
Static lF070TCTR	:= ExistBlock("F070TCTR")
Static lFA070ACR	:= ExistBlock("FA070ACR")
Static lF070ACONT	:= ExistBlock("F070ACONT")
Static lF070CTB		:= ExistBlock("F070CTB")
Static lSACI008		:= ExistBlock("SACI008")
Static __lF70TREA 	:= .F.
Static __lCancTBx   := .F.
// Motor de retenção
Static __lTemMR		:= NIL
Static __nTotImp		:= 0
Static nOldImp 		:= 0
Static __oRetMot 	as Object
Static __lMotor 	as Logical
Static __lPccMR		as Logical
Static __lInsMR		as Logical
Static __lIrfMR		as Logical
Static __lIssMR		as Logical
Static __lImpMR  	as Logical
Static __lPropPcc 	as Logical
Static __lGlosaMr 	as Logical // Substituição da usabilidade do parâmetro MV_GLOSA pela configuração FKM_PGTPAR
Static __lGlosIrf 	as Logical
Static __lGlosPis 	as Logical
Static __lGlosCof 	as Logical
Static __lGlosCsl 	as Logical
Static __lGlosIss 	as Logical
Static __lGlosIns 	as Logical
Static __lGlosOut 	as Logical

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³  FINA070  ³ Autor ³ Wagner Xavier        ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Programa de Baixa de Titulos a Receber                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FINA070()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gen‚rico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³			ATUALIZACOES SOFRIDAS										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Jose Glez   ³03/08/17³MMI-6282³Problemas de performance,Se modifica    ³±±
±±³            ³        ³        ³la busqueda para cuando exista Recibos  ³±±
±±³            ³        ³        ³y ubicarlo por la serie del recibo      ³±±
±±³LuisEnríquez³16/07/18³DMINA-  ³Se replica funcionalidad atendida en    ³±±
±±³(PER)       ³        ³3630    ³DMINA-62 de Facturación de Anticipos.   ³±±
±±³Oscar Garcia³13/08/18³DMINA-³Se realiza modificación en func. fA070Tit ³±±
±±³            ³        ³3752  ³para convertir nParciais a moneda 1. (MEX)³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FinA070( xAutoCab, nOpc, lNoMbrowse, nOpbaixa, cFiltro ,aParam ,lRatAuto ,aVAAut ,aRatEvEz )
Local nPosDtCred	:= 0
Local nPos			:= 0
Local lResp			:= .T.
Local lPanelFin		:= IsPanelFin()
Local lRet			:= .T.
Local nRecSv		:= 0

Private lF070Auto	:= (xAutoCab <> NIL)
Private aAutoCab	:= {}
Private cPortado	:= CriaVar("E1_PORTADO",.F.)
Private cBanco		:= CriaVar("E1_PORTADO",.F.)
Private cAgencia	:= CriaVar("E1_AGEDEP" ,.F.)
Private cConta		:= CriaVar("E1_CONTA"  ,.F.)
Private cNatMov     := ''
Private lValidou	:= .F.
Private lOracle		:= "ORACLE"$Upper(TCGetDB())
Private aDadosRef	:= Array(7)
Private lFini055	:= FwIsInCallStack("FINI055")
Private aRatAut		:= {}

Default nOpc		:= 3
Default lNoMBrowse	:= .F.
Default nOpBaixa	:= 1
Default cFiltro		:= NIL
Default lRatAuto	:= .F.
Default aRatEvEz 	:= {}

//Inicialização de variáveis estáticas
lFinImp		:= .T. //Define se ha retencao de impostos PCC/IRPJ no R.A
dLastPcc	:= CTOD("22/06/2015")
__lRatAut	:= .F.
lMVGlosa	:= SuperGetMv("MV_GLOSA",.F.,.F.)
__lF070EAI	:= NIL
cAliasLote	:= ""
lTSE5FI70E	:= ExistTemplate("SE5FI70E")
lGEMSE5Grv	:= HasTemplate("LOT") .and. ExistTemplate("GEMSE5Grv")
lSE5FI70E	:= ExistBlock("SE5FI70E")
lF070GerAb	:= ExistBlock("F070GerAb")
lF070CTC	:= ExistBlock("F070CTC")
lF070EST	:= ExistBlock("F070EST")
lF070EST2	:= ExistBlock("F070EST2")
lF070HisCan	:= ExistBlock("F070HisCan")
__aVAAuto	:= NIL
lPodeTVA	:= ExistFunc("FAPodeTVA")
lCpoSIX		:= ExistFunc("FinCposSix")
lF070ACRE	:= ExistBlock("F070ACRE")
lFA070POS	:= ExistBlock("FA070POS")
lF070TCTR	:= ExistBlock("F070TCTR")
lFA070ACR	:= ExistBlock("FA070ACR")
lF070ACONT	:= ExistBlock("F070ACONT")
lF070CTB	:= ExistBlock("F070CTB")
lSACI008	:= ExistBlock("SACI008")
__lF70TREA	:= .F.
__lCancTBx	:= .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restringe o uso do programa ao Financeiro e Sigaloja			  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !(AmIIn(5,6,12,11,14,41,97,33,49,59,72))		// S¢ Fat,Fin,Loja,Veiculos,Ofina, Pecas, Especiais e PLS, 49-GE, 59-GAC
	Return
Endif

If lF070Auto .and. lPodeTVA
	//Valores Acessórios - Rotina Automatica Bx CR
	If (aVAAut <> Nil )
		__aVAAuto := aClone(aVAAut)
	Else
		__aVAAuto := {}
	Endif
Endif

If lF070Auto .and. len(aRatEvEz) > 0
	aRatAut := aClone(aRatEvEz)
EndIf

//Tratamento para não redeclarar as variáveis.
//No retorno CNAB com calculo de PCC + IR esta variável já vem declarada.
If Type("nValRec")=="U"
	PRIVATE nValRec := 0
Endif
If Type("nOldValRec")=="U"
	PRIVATE nOldValRec := 0
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Vari veis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aRotina 	 := MenuDef()
PRIVATE nValTot 	 := 0
PRIVATE nJuros		 := 0
PRIVATE nVA			 := 0
PRIVATE nMulta		 := 0
PRIVATE nPIS    	 := 0
PRIVATE nCOFINS    	 := 0
PRIVATE nCSLL    	 := 0
PRIVATE nIss		 := 0
PRIVATE nInss		 := 0
PRIVATE nlImpMR 	 := 0
PRIVATE nCM			 := 0
PRIVATE nDescont	 := 0
PRIVATE nTotAGer     := 0
PRIVATE nTotADesp    := 0
PRIVATE nTotADesc    := 0
PRIVATE nTotAMul     := 0
PRIVATE nTotAJur     := 0
PRIVATE nValPadrao   := 0
PRIVATE nValEstrang  := 0
PRIVATE cMarca       := Get070Mark()
PRIVATE cLote		 := ""
PRIVATE cLoteFin     := If(Type("cLoteFin") != "C", Space(TamSX3("E1_LOTE")[1]), cLoteFin)
PRIVATE cNaturLote   := Space (10)
PRIVATE nAcresc      := 0
PRIVATE nDecresc     := 0
PRIVATE aCaixaFin    := xCxFina() // Caixa Geral do Financeiro (MV_CXFIN)
PRIVATE aCols		 := {}
PRIVATE aHeader		 := {}
PRIVATE nMoedaBco	 := 1
PRIVATE nCM1      	 := 0
PRIVATE nProRata  	 := 0
PRIVATE cCodDiario	 := ""
PRIVATE nVlRetPis	 := 0
PRIVATE nVlRetCof	 := 0
PRIVATE nVlRetCsl	 := 0
PRIVATE aDadosRet 	 := Array(7)
PRIVATE nIrrf 		 := 0
PRIVATE nOldIrrf	 := 0

//Variaveis utilizada para acrescimo e decrescimo
PRIVATE aBxAcr		:= {}
PRIVATE aBxDec		:= {}
PRIVATE nDecrVlr		:= 0		//tratar visualizacao da varivel na tela de valores
PRIVATE nOdlMoedBco	 := 1

PRIVATE nTxMoeda

LoteCont( "FIN" )

PRIVATE oFontLbl, oFontAnt
PRIVATE lInverte := .F.

//***Reestruturacao SE5***
Private nPisCalc	:= 0
Private nCofCalc	:= 0
Private nCslCalc	:= 0
Private nIrfCalc	:= 0
Private nIssCalc	:= 0
Private nPisBaseR 	:= 0
Private nCofBaseR	:= 0
Private nCslBaseR 	:= 0
Private nIrfBaseR 	:= 0
Private nIssBaseR 	:= 0
Private nPisBaseC 	:= 0
Private nCofBaseC 	:= 0
Private nCslBaseC 	:= 0
Private nIrfBaseC 	:= 0
Private nIssBaseC 	:= 0
//***Reestruturacao SE5***

Private aParamAuto	:= {}

//Valida a existência da das tabelas do Motor de retenção
If __lTemMR == NIL
	__lTemMR := If(FindFunction("FTemMotor"), FTemMotor(), .F.)
EndIf
__lRatAut := lRatAuto
__lF70TREA 	:= ExistBlock("F070TREA")

VALOR := 0

If !lPanelFin
	SetKey (VK_F12,{|a,b| AcessaPerg("FIN070",.T.)})
Else
	SetKey (VK_F12,{|a,b| PergInPanel("FIN070",.T.)})
EndIf

If FunName() <> "FINA415"
	Pergunte("FIN070",.F.)
	aParamAuto := If(aParam <> Nil,aParam,Nil)
	FI070PerAut()
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define o cabe‡alho da tela de baixas                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE cCadastro := STR0006 // "Baixa de Titulos"

If lNoMBrowse
	dbSelectArea("SE1")
	If ( nOpc <> 0 ) .And. !Deleted()
		bBlock := &( "{ |a,b,c,d,e| " + aRotina[ nOpc,2 ] + "(a,b,c,d,e) }" )
		Eval( bBlock, Alias(), (Alias())->(Recno()),nOpc)
	EndIf
Else
	If !lF070Auto
		DEFINE FONT oFontLbl NAME "Arial" SIZE 6, 15 BOLD

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ponto de entrada para pre-validar os dados a serem  ³
		//³ exibidos.                                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF ExistBlock("F070BROW")
			ExecBlock("F070BROW",.f.,.f.)
		Endif

		If GetNewPar("MV_ACATIVO",.F.)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Se o GE estiver ativo utilizar a ACmBrowse                     |
			//³ devido aos controles de filtro para restrição de visibilidade  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			ACmBrowse( 6,1,22,75,"SE1",,,,,,Fa040Legenda("SE1"),,,,,,,,cFiltro)
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Endere‡a a fun‡„o de BROWSE                                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			mBrowse( 6,1,22,75,"SE1",,,,,,Fa040Legenda("SE1"))
		EndIf

		If GetMv("MV_CMC7FIN") == "S"
			CMC7Fec(nHdlCMC7,GetMv("MV_CMC7PRT"))
		EndIf
		lOpenCmc7 := Nil

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Recupera a Integridade dos dados                             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SET KEY VK_F12 to
		RELEASE FONT oFontLbl
	Else
		dbSelectArea('SE1')
		If FwIsInCallStack("FINA550") .or. FwIsInCallStack("FINA450")
			nRecSv:= SE1->(Recno())
		Endif
		aAutoCab := SE1->(MSArrayXDB(xAutoCab,nil,4))
		If Len(aAutoCab) == 0
			Return
		EndIf
		If FwIsInCallStack("FINA550") .or. FwIsInCallStack("FINA450")
			SE1->(dbGoto(nRecSv))
		Endif

		If (nPos := aScan(aAutoCab,{|x| x[1] == 'AUTMOTBX'})) > 0 .AND. (aAutoCab[nPos][2] == 'TRF')
			If (nPos := aScan(aAutoCab,{|x| x[1] == 'AUTVALREC'})) >0
				nPosDtCred := aScan(aAutoCab,{|x| x[1] == 'AUTDTBAIXA'})
				aAutoCab[nPos][2] := xMoeda(aAutoCab[nPos][2],SE1->E1_MOEDA,1,aAutoCab[nPosDtCred][2])
			EndIf
		EndIf
		If nOpc == 3
             
			If (FindFunction("FOrigTitRM") .AND. FindFunction("ValidarBXTIN") .AND. FOrigTitRM("SE1"))
		  		lRet := ValidarBXTIN(xAutoCab)	
			EndIf

			If lRet
				lRet := fA070Tit("SE1",SE1->(Recno()),4,,.T.)			 
			EndIf
			
		ElseIf nOpc == 5	// Cancelamento
			fA070Can("SE1",Recno(),5,,nOpbaixa)
		ElseIf nOpc == 6		// Exclusão
			fA070Can("SE1",Recno(),6,,nOpbaixa)
		Endif
	EndIf
Endif

//Limpa a variável estática que indica se a tela de baixa foi cancelada (controle de processo com integração Protheus x TIN)
__lCancTBx := .F.

If lPodeTVA
	//Valores Acessórios

	If (__aVAAuto <> Nil )
		aSize(__aVAAuto,0)
		__aVAAuto := Nil
	Endif
Endif

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ fA070Tit ³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Fun‡„o utilizada para Baixa de Titulos                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fA070Tit()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA070Tit(cAlias,nReg,nOpcx,aM,lAut)
LOCAL oDlg
LOCAL oCbx
LOCAL oNumTit
LOCAL oCodCli
LOCAL aDescMotbx		:= {}
LOCAL oMulta
LOCAL oJuros
LOCAL oVA
LOCAL oPIS
LOCAL oCOFINS
LOCAL oCSLL
LOCAL oOtrga
LOCAL oDifCambio
LOCAL nDecrescF
LOCAL nOpt
LOCAL nHdlPrv			:= 0
LOCAL nTotal			:= 0
LOCAL lPadrao
LOCAL cArquivo
LOCAL lRet     			:= .T.
LOCAL nSalvRec			:= 0
LOCAL cParcela
LOCAL cNum				:= CRIAVAR ("E1_NUM",.F.)
LOCAL cPrefixo
LOCAL cMoeda
LOCAL nOrdem
LOCAL nT				:= 0
LOCAL nY				:= 0
LOCAL nErro				:= 0
LOCAL lBaixou			:= .F.
LOCAL lJuros
LOCAL aCaixaLoja
LOCAL nTolerPg			:= GetMv("MV_TOLERPG")
Local lFINA200			:= FunName() == "FINA200" .Or. FwIsInCallStack("fA200Ger")
Local lREC2TIT			:= SuperGetMv("MV_REC2TIT",,"2") == "1"
Local lFina450			:= FwIsInCallStack("Fa450cmp")
LOCAL lContabiliza		:= Iif(mv_par04==1,.T.,.F.) .and. !lFINA200 .and. !lFina450
Local lFa070Tit			:= ExistBlock("FA070TIT")
Local lTFa070Tit		:= ExistTemplate("FA070TIT")
Local lFa070MDB			:= ExistBlock("FA070MDB")
Local lMdbOk			:= .F.
LOCAL aMotBx			:= ReadMotBx()
LOCAL nEstOriginal		:= 0
Local cMoedaTx, nA		:= 0
LOCAL aModalSpb			:= {"1=TED","2=CIP","3=COMP"}
LOCAL oModSpb
LOCAL lSpbInUse			:= SpbInUse()
Local oTxMoeda
Local nUltLin
Local bSetKey			:= {||}
Local oMultNat
Local lOk				:= .F. //Controla se foi confirmada a distribuicao
Local aColsSEV			:= {}
Local NI
Local lFa070Bco			:= ExistBlock("FA070BCO")
Local lF070Bxpc			:= ExistBlock("F070BXPC")
Local aArea				:= GetArea()
Local nTotAdto			:= 0
Local lBaixaAbat		:= .F.
Local nVlrBaixa			:= 0
Local lBxCec			:= .F.
Local lBxLiq			:= .F.
Local cTipo
Local cCliente
Local cLoja
Local aBaixa			:= {}
Local x
Local nLinha			:= 0
Local aButtons			:= {}
Local lImpBxCr			:= GetNewPar( "MV_IMPBXCR", "1" ) == "2"
LOCAL oValorLiq
Local nLin2				:= 0
Local oCM1
Local oProRata
Local lGemInUse			:= .F.
Local aSeqSe5			:= {} // Para gravar a sequencia no SEF com a mesma sequencia dos movimentos bancarios gerados
Local nVlMinImp			:= GetNewPar("MV_VL10925",5000)
Local aLocal			:= {} // array utilizado pelo GE para verificar se existe local de prova
Local lPanelFin			:= IsPanelFin()
LOCAL oNaturez
LOCAL oTipo
LOCAL aDiario			:= {}
Local aGrvLctPco		:= {{"000004","09","FINA070"},;
							{"000004","10","FINA070"}}
Local aFlagCTB			:= {}
Local lUsaFlag			:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)
Local lIntDL			:= SuperGetMv("MV_INTDL",.F.,"N") == "S" //-- integracao com Distribuicao e Logistica
Local lAcessMul			:= .T.
Local lAcessJur			:= .T.
Local lAcessDesc		:= .T.
Local lAcessdBaixa		:= .T.
Local lAcessDtCredito	:= .T.
Local lAcessCSLL			:= .T.
Local lAcessCOF			:= .T.
Local lAcessPIS			:= .T.
Local lMultNat 			:= .F.

Local oDtBaixa
Local oDtCredito
Local aCposDes			:= {}
Local nTotMult			:= 0

//Controla o Pis Cofins e Csll na baixa  (1-Retem PCC na Baixa ou 2-Retem PCC na Emissão(default) )
Local lPccBxCr			:= FPccBxCr(.T.)
Local lEECFAT			:= SuperGetMv("MV_EECFAT",.F.,.F.)
Local lEECFIN			:= SuperGetMv("MV_AVG0131",.F.,.F.) //DFS - 17/02/11 - Parâmetro para verificar integração com financeiro.
Local aHdlPrv			:= {}

Local lIrPjBxCr			:= FIrPjBxCr(.T.)	 //Controla IRPJ na baixa
Local oIrrf

Local lTipBxCP			:= .F.
Local lSigaloja			:= .F.

Local cMvJurTipo		:= SuperGetMv("MV_JURTIPO",,"")  // calculo de Multa do Loja , se JURTIPO == L

Local lMulLoj			:= SuperGetMv("MV_LJINTFS", ,.F.) //Calcula multa conforme regra do loja, se integração com financial estiver habilitada
Local lF070VLAD			:= ExistBlock("F070VLAD")

Local lSubsPrv			:= FwIsInCallStack("FINA040")
Local lFA070BLQ			:= ExistBlock("FA070BLQ")
Local lLibCm			:= .F.
Local lVlTitCR			:= GetNewPar("MV_VLTITCR",.F.)
Local lTpDesc			:= cPaisLoc == "BRA" //Verifica campo TPDESC na tabela SE5 (<C>ondicional ou <I>ncondicional)
Local lNatApura			:= .F. //Natureza configurada para apurar impostos no SPED PIS/COFINS.
Local lCposSped			:= cPaisLoc == "BRA" //Campos que apuram impostos no SPED PIS/COFINS.
Local aAreaSED 			:= {}
Local lTravaSa1 		:= ExistBlock("F070TRAVA")
Local lRMBibli			:= GetNewPar('MV_RMBIBLI',.F.)
Local lRMClass			:= GetNewPar('MV_RMCLASS',.F.)
Local lBQ10925			:= .F.
Local cFilOrgTr			:= "" //Filial de origem do documento de ISS, processo de transferência
Local nTotAbISS			:= 0 //Valor do abatimento de ISS na origem, processo de transferência
Local oSize
Local oMasterPanel
Local lMoedaBco			:= SuperGetMv("MV_MOEDBCO",, .F.)
Local dDtRecbAux
Local nValOld			:= 0
//desconto da bolsa para classis
Local nDescBol			:= 0
Local cAuxMBx			:= ""
Local lSaveState		:= ALTERA
Local aAlt				:= {}
Local cChaveTit		:= ""
Local cChaveFK7		:= ""
Local aPcc       := {}
Local nBase      := 0
Local lJurMulDes := (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")
Local nPccRetPrc := 0
Local lGerPCCBD  := .F.
Local lGerChqAdt := .F.
Local cTipoOr    := ""
Local aBaixas    := {}
Local aVlOringl  := Array( 8 )//|1=Valor recebido|2=Pis|3=Cofins|4=Csll|5=Juros|6=Multa|7=Desconto|8=Base
local lCalcPCC	 := .T.
Local lRecIss	 := .F.
Local lCalcIssBx := GetNewPar("MV_MRETISS","1") == "2"  //Retencao do ISS pela emissao (1) ou baixa (2)
Local nPos       := 0
Local lSDACRVL   := SuperGetMv("MV_SDACRVL",.T.,.F.)
Local lSDDECVL	 := .F.
Local aRelTit	 := {}									//Array contendo o titulo baixado para impressao do Recibo
Local aFormPg	 := {}									//Array contendo os pagamento em cheque para impressao do Recibo
Local lLojrRec	 := FindFunction("LOJRREC")				//Relatorio de impressao de Recibo (OBSOLETO)
Local lULOJRREC	 := FindFunction("U_LOJRRecibo")		//Relatorio de impressao de Recibo (RDMAKE)
Local lImpLjRe	 := SuperGetMV( "MV_IMPLJRE",.F., .F.)
Local aAreaSe1	 := {}
Local aAreaSe5	 := {}
Local aAreaRec	 := {}
//Valores Acessorios
Local oModelVA	 := Nil
Local nLaco		 := 0
Local aFKDID	 := {}
//Validaca da Baixa para nao permitir a baixa apenas no Protheus da Integracao RM Classis X Protheus
Local cProdRM	 := GETNEWPAR('MV_RMORIG', "E|U|S")
Local lExistVA 	 := TableInDic("FKD") .and. TableInDic("FKC")
Local lFKDID     := lExistVA .And. FKD->( FieldPos("FKD_IDFKD") ) > 0 .And. ExistFunc("FN040VAID") // Proteção campo criado 12.1.25
Local cAcaoVA    := ""
Local nVaCalc    := 0
Local cAuxMoeda  := ""
Local lSigaGSP   := GetNewPar("MV_SIGAGSP") == "1"
Local lCalcCM    := GetMv("MV_CALCCM") == "S"
Local cBxDtFin   := SuperGetMv( "MV_BXDTFIN",, "1" )
Local lSaldoChq  := GetMv("MV_SLDBXCR") == "C"
Local lAntCred   := GetMv("MV_ANTCRED")
Local cPrefRM    := SuperGetMv("MV_PREFRM",,"TIN")
Local aRetInteg	 := {}
Local lAutoCab	 := Type("aAutoCab") == "A"
Local l070Auto	 := Type('lF070Auto') =='U'
Local nRecSe1    := 0
Local lJFilBco   := ExistFunc("JurVldSA6") .And. SuperGetMv("MV_JFILBCO", .F., .F.) //Indica se filtra as contas correntes vinculadas ao escritório logado - SIGAPFS
Local cEscrit    := IIF(lJFilBco, JurGetDados("NS7", 4, xFilial("NS7") + cFilant + cEmpAnt, "NS7_COD"), "")
Local cF3Bco     := IIF(lJFilBco, "SA6JUR", "SA6")
Local nDecs		 := SuperGetMv("MV_CENT",,3)
Local lMudouMulta   := .F.

// Motor de Retenção
Local aImpos 	    as Array	// Motor de retenção
Local lTemImpPad    := .F.
Local nW            := 0
Local nImp          := 0
Local cChaveAux     := ""
Local cIdTit        := ""
Local cMsg          := ""
Local nAux2			:= 0
Local nAuxImpAut	:= 0
Local nOldTxmoeda	:= 0
Local nValParc      := 0


PRIVATE lRaRtImp		:= lFinImp .And.FRaRtImp()     //Define se ha retencao de impostos PCC/IRPJ no R.A
PRIVATE nParciais		:= 0
PRIVATE aBaixaSE5		:= {}
PRIVATE cMotBx		:= ""
PRIVATE oVlEstrang	:= nil
PRIVATE oValRec		:= nil
PRIVATE oCM			:= nil
PRIVATE oAgencia:=oBanco:=oConta := nil
PRIVATE oDescont		:= nil
PRIVATE nOtrga			:= 0
PRIVATE nDifCambio		:= 0
PRIVATE aTxMoedas		:= {}
PRIVATE cModSpb			:= "1"
PRIVATE nAcrescF		:= 0
//Variaveis PRIVATE utilizadas pela funcao FA040AxAlt()
PRIVATE nIndexSE1		:= ""
PRIVATE cIndexSE1		:= ""
PRIVATE lAltera			:= .T.
PRIVATE nOldValor		:= SE1->E1_VALOR
PRIVATE nOldIss			:= SE1->E1_ISS
PRIVATE nOldInss		:= SE1->E1_INSS
PRIVATE nOldPis			:= SE1->E1_PIS
PRIVATE nOldCofins		:= SE1->E1_COFINS
PRIVATE nOldCsll		:= SE1->E1_CSLL
PRIVATE nOldVlAcres		:= SE1->E1_ACRESC
PRIVATE nOldIrrf		:= SE1->E1_IRRF
PRIVATE nOldVlDecres	:= SE1->E1_DECRESC
PRIVATE lAlterNat		:= .F.
PRIVATE nOldVencto		:= SE1->E1_VENCTO
PRIVATE nOldVenRea		:= SE1->E1_VENCREA
PRIVATE cOldNatur		:= SE1->E1_NATUREZ
PRIVATE nOldVlCruz		:= SE1->E1_VLCRUZ
PRIVATE lAlterImp		:= .F.
PRIVATE aDadosRet		:= {}
PRIVATE nSomaCheq		:= 0
Private nIrrf			:= 0
PRIVATE nOldDescont		:= 0
PRIVATE nOldMulta		:= 0
PRIVATE nOldJuros		:= 0
PRIVATE nOldVA 			:= 0
PRIVATE cOldVA 			:= ""
PRIVATE lTitLote  		:= .T.
Private cTpDesc 		:= "I"
PRIVATE lBloqSa1   		:= .T.
PRIVATE cFilAbat 		:= cFilAnt
Private lBolsa			:= .F.
PRIVATE nDescCalc 		:= 0
PRIVATE nJurosCalc 		:= 0
PRIVATE nMultaCalc 		:= 0
Private aRetMsg			:= {}
Private dOldBaixa 		:= CToD("")
Private nOldBanco  		:= ""
Private nOldAgencia		:= ""
Private nOldConta		:= ""

aImpos 	:= {}	// Motor de retenção
If lF070Auto
	PRIVATE lAutValRec := .F.
EndIf

//****************************************
// Restringe o uso do programa Financeiro
// Quando a origem do titulo for de origem
// Totvs Incorporação
//****************************************
If FindFunction("FINTP01") .AND. FINTP01(.T.)
	Return
Endif

//Tratamento para não redeclarar a variável.
//No retorno CNAB com calculo de PCC + IR esta variável já vem declarada.
If Type("dBaixa")=="U"
	PRIVATE dBaixa	:= CriaVar("E1_BAIXA")	
Endif
dOldBaixa := dBaixa

If lPccBxCr .and. dBaixa >= dLastPcc
	nVlMinImp	:= 0
EndIf

lBQ10925 := SuperGetMV("MV_BQ10925",,"2") == "1" .And. !lRaRtImp

//Variaveis utilizada para acrescimo e decrescimo
aBxAcr					:= {}
aBxDec					:= {}
nDecrVlr				:= 0		//tratar visualizacao da varivel na tela de valores
aFill( aVlOringl , 0 )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso tenha seja um titulo gerado pelo SIGAEIC ou SIGAEEC não poderá sofrer baixa através desta rotina ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If GetMV("MV_EASYFIN") == "S" .And. UPPER(Alltrim(SE1->E1_ORIGEM)) $ "SIGAEIC"
	HELP(" ",1,"FAORIEIC")
	Return
Endif

//If lEECFAT .And. UPPER(Alltrim(SE1->E1_ORIGEM)) $ "SIGAEEC" //DFS - A integração do financeiro independe da integração com o faturamento
// TDF - 26/12/11 - Acrescentado o módulo EFF para permitir liquidação
If lEECFIN .And. UPPER(Alltrim(SE1->E1_ORIGEM)) $ "SIGAEEC" .AND. !(cModulo $ "EEC/EDC/ECO/EFF") //DFS - 17/02/11 - Trava para outros módulos para títulos gerados no EEC
   HELP(" ",1,"FAORIEEC")
   Return
Endif

//Validação de mensagem de titulo RM Classis
If(AllTrim(SE1->E1_ORIGEM) $ cProdRM .And. !lF070Auto)
	HELP(" ",1,"ProtheusXClassis" ,,STR0277,2,0,,,,,, {STR0279})//"Título gerado pela Integração Protheus X Classis não Pode ser baixado pelo Protheus" ## "Efetua a baixa através do sistema RM Classis"
	return .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Caso titulos originados pelo SIGALOJA estejam nas carteiras :  ³
//³I = Carteira Caixa Loja                                        ³
//³J = Carteira Caixa Geral                                       ³
//³Nao permitir esta operacao, pois ele precisa ser transferido   ³
//³antes pelas rotinas do SIGALOJA.                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//SITCOB
If Upper(AllTrim(SE1->E1_SITUACA)) $ "I|J" .AND. !IsMoney(SE1->E1_TIPO) .AND. Upper(AllTrim(SE1->E1_ORIGEM)) $ "LOJA010|LOJA701|FATA701"
	Help(" ",1,"NOUSACLJ")
	Return
Endif

//Caso a rotina esteja cadastrada no adapter, so pode ser enviada como 'Sincrona'. Uma baixa enviada como assincrona
//sera concretizada mesmo que de erro no sistema integrado.
If !lFini055 .And. !lF070Auto
	If !(FA070Integ(.F.))
		Return .F.
	Endif
Endif

//PCREQ-3782 - Bloqueio por situação de cobrança
If !F023VerBlq("1","0003",SE1->E1_SITUACA,.T.)
	Return .F.
Endif

// Zerar variaveis para contabilizar os impostos da lei 10925.
VALOR5 := 0
VALOR6 := 0
VALOR7 := 0

cTpDesc	:= "I"
lF415Auto := IIf(Type("lF415Auto")=="U",.F.,lF415Auto)		// Sergio Fuzinaka - 05.06.02
cPortado  := IIf(Type("cPortado")=="U",CriaVar("E1_PORTADO",.F.),cPortado)
cBanco 	 := IIf(Type("cBanco")=="U",CriaVar("E1_PORTADO",.F.), cBanco)
cAgencia  := IIf(Type("cAgencia")=="U",CriaVar("E1_AGEDEP" ,.F.),cAgencia)
cConta	 := IIf(Type("cConta")=="U",CriaVar("E1_CONTA"  ,.F.),cConta)

If mv_par10 == 1 .And. FunName() == "FINA740"
	cPortado	:= cPorta740
	cBanco 		:= cBanco740
	cAgencia	:= cAgenc740
	cConta		:= cConta740
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se utiliza o modulo de Gerenciamento Academico.     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If GetNewPar("MV_ACATIVO", .F.)
	JA1->(dbSetOrder(8))

	If JA1->(MsSeek(xFilial("JA1") + SE1->E1_PREFIXO + SE1->E1_NUM))
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se existe Local associado ao Processo Seletivo. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		JA9->(dbSetOrder(1))
		JA9->(MsSeek(xFilial("JA9") + JA1->JA1_PROSEL))

		If JA9->(!Found())
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ O titulo somente podera ser baixado quando houver um local associado ao ³
			//³ Processo Seletivo.                                                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			Help(" ",1,"ACAA070_11")

			Return .F.
		EndIf

		aLocal := Aca070Lugar( JA1->JA1_CODINS,JA1->JA1_LOCAL,,,JA1->JA1_PROSEL,JA1->JA1_TPCAND,,,JA1->JA1_TIPDEF,JA1->JA1_TIPREL)

		If Empty(aLocal)
			Return .F.
		EndIf
	EndIf
EndIf

nOpc1    := 0
If cPaisLoc <> "BRA"
   aAdd(aTxMoedas,{"",1,PesqPict("SM2","M2_MOEDA1")})
   For nA	:=	2 To MoedFin()
	  cMoedaTx := Str(nA,IIf(nA <= 9,1,2))
	  cAuxMoeda := GetMv( "MV_MOEDA" + cMoedaTx )
	  If ! Empty( cAuxMoeda )
	  	If lF070Auto .And. nA==SE1->E1_MOEDA
			 aAdd( aTxMoedas, {cAuxMoeda, SE1->E1_TXMOEDA, PesqPict("SM2", "M2_MOEDA" + cMoedaTx)} )
		Else
			 aAdd( aTxMoedas, {cAuxMoeda, RecMoeda(dDataBase,nA), PesqPict("SM2", "M2_MOEDA" + cMoedaTx)} )
		Endif
	  Else
		 Exit
	  Endif
   Next
   nTotAGer     := 0
   nTotADesp    := 0
   nTotADesc    := 0
   nTotAMul     := 0
   nTotAJur     := 0
   cMarca       := Get070Mark()
   cLoteFin     := Space(TamSX3("E1_LOTE")[1])
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ PONTO DE ENTRADA 																	³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (ExistBlock( "FA070CHK" ) )
	If !(ExecBlock("FA070CHK",.F.,.F.))
		Return .F.
	EndIf
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ PONTO DE ENTRADA TEMPLATE	  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (ExistTemplate( "FA070CHK" ) )
	If !(ExecTemplate("FA070CHK",.F.,.F.))

		// Indica que houve um erro ao executar por rotina automatica, para tratamento externo
		If Type('lF070Auto') == 'L' .And. lF070Auto
			lMsErroAuto := .T.
		Endif

		Return .F.
	EndIf
Endif

IF ExistBlock("F070MNAT")
	lMultNat := ExecBlock("F070MNAT",.F.,.F.)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Monta Hist¢rico da Baixa para digita‡„o pelo usu rio                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private cHist070 := Criavar("E5_HISTOR")        //Inicilizador padrao

If Empty(cHist070)
	cHist070 := STR0007+Space(Len(cHist070)-24)  // "Valor recebido s/ T¡tulo"
Endif

cMotBx := criavar("E5_MOTBX")
IF lAut=NIL
	lAut:=.F.
EndIF

//*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//*³Salva ordem atual                                                     ³
//*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nOrdem:=IndexOrd()
dbSetOrder(1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Cria as vari veis utilizadas para receber os dados do t¡tulo          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dDtCredito  := dDataBase
dOldDtCredito	:= dDtCredito
If Alltrim(SE1->E1_ORIGEM) $ "LOJA010|LOJXTEF"

	aCaixaLoja  := xCxLoja()
	cPortado    := SE1->E1_PORTADO
	cBanco      := SE1->E1_PORTADO
	cAgencia    := SE1->E1_AGEDEP
	cConta      := SE1->E1_CONTA
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³aCaixaFin conter  os dados Bco/Age/Cta do Caixa Geral, caso o titulo  ³
	//³esteja em carteira (SITUACA == 0).                                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	// 0 = Carteira
	// F = Carteira Protesto
	// G = Carteira Acordo
	//SITCOB
	If (mv_par10 == 2 .or. Empty(cBanco)) .and. (Len(aAutoCab) == 0)
		If ! lJFilBco
			cPortado    := IIF(FN022SITCB(SE1->E1_SITUACA)[1], aCaixaFin[1] ,SE1->E1_PORTADO)
			cBanco      := IIF(FN022SITCB(SE1->E1_SITUACA)[1], aCaixaFin[1] ,SE1->E1_PORTADO)
			cAgencia    := IIF(FN022SITCB(SE1->E1_SITUACA)[1], aCaixaFin[2] ,SE1->E1_AGEDEP)
			cConta      := IIF(FN022SITCB(SE1->E1_SITUACA)[1], aCaixaFin[3] ,SE1->E1_CONTA)
		Else
			cPortado    := CriaVar("E1_PORTADO",.F.)
			cBanco      := CriaVar("E1_PORTADO",.F.)
			cAgencia    := CriaVar("E1_AGEDEP",.F.)
			cConta      := CriaVar("E1_CONTA",.F.)
		EndIf
	Else
		If (nPos := ascan(aAutoCab,{|x| x[1]='AUTBANCO'})) > 0
			 cBanco:= aAutoCab[nPos][2]
		Endif
		If (nPos := ascan(aAutoCab,{|x| x[1]='AUTAGENCIA'}) ) > 0
			 cAgencia:= aAutoCab[nPos][2]
		EndIf
		If (nPos := ascan(aAutoCab,{|x| x[1]='AUTCONTA'}) ) > 0
			 cConta:= aAutoCab[nPos][2]
		EndIf
		//Si es para Argentina, viene de la rutina FINA074 y tiene la variable aDatBnDif defina y con datos
		If Upper(AllTrim(SE1->E1_ORIGEM)) == "FINA074" .And. cPaisLoc == "ARG" .And. (Empty(cPortado) .Or. Empty(cBanco) .Or. Empty(cAgencia) .Or. Empty(cConta)) .And. (Type("aDatBnDif") != "U" .And. Len(aDatBnDif) > 0)
			cPortado := aDatBnDif[1][1]
			cBanco := aDatBnDif[1][1]
			cAgencia := aDatBnDif[1][2]
			cConta := aDatBnDif[1][3]
		EndIf
		//Caso seja rotina automatica e não sejam passados os dados bancarios para baixa
		//Verificamos se possui informações de portador do título e assume como conta corrente da baixa
		If lF070Auto
			If (Empty(cBanco) .or. Empty(cAgencia) .or. Empty(cConta)) .and. ;
				!Empty(SE1->E1_PORTADO) .AND. !Empty(SE1->E1_AGEDEP) .AND. !Empty(SE1->E1_CONTA)
				cBanco	:= SE1->E1_PORTADO
				cAgencia	:= SE1->E1_AGEDEP
				cConta	:= SE1->E1_CONTA
			Endif
		Endif
	Endif
EndIf

//Obtem a moeda do banco
nOrdSA6:=SA6->(IndexOrd())
DbSetOrder(1)
If cPaisLoc == "BRA"
	SA6->(MsSeek(xFilial("SA6")+cBanco+cAgencia+cConta))
ElseIf cPaisLoc == "ARG" .And. !(Empty(cBanco) .And. Empty(cAgencia) .And. Empty(cConta))
	SA6->(MsSeek(xFilial("SA6")+cBanco+cAgencia+cConta))
Endif
nMoedaBco:= Max(SA6->A6_MOEDA,1)
SA6->(DbSetOrder(nOrdSA6))

If lF070Auto .AND. (nT := ascan(aAutoCab,{|x| x[1]='AUTMOTBX'})) > 0 
	cMotBx	:=	aAutoCab[nT,2]
    If ( (Len(AllTrim(cMotBx)) == 3 .AND. (nY := AScan(aMotBx, {|x| SubStr(x, 01, 03) == AllTrim(cMotBx)})) == 0) ;
     .OR. (Len(cMotBx) >= 10 .AND. (nY := AScan(aMotBx, {|x| SubStr(x, 07, 10) == Subs(cMotBx,1,10)})) == 0) );
     .AND. Alltrim(cMotBx) != 'STP'
        HELP(" ", 01, "MOTBX" , , STR0089 + " " + cMotBx + " " + STR0297, 02,0,,,,,, {STR0298})//"Mot. Baixa" ## "não encontrado" ## "Selecione um motivo de baixa existente"
        Return .F. 
    EndIf	
    If Empty(cBanco)
        If Len(AllTrim(cMotBx)) == 3
            If (nY := ascan(aMotBx,{|x| SubStr(x,1,3) == AllTrim(cMotBx)})) > 0
                aAutoCab[nT,2] := SubStr(aMotBx[nY],07,10)
                cMotBx := aAutoCab[nT,2]
            EndIf
        EndIf
        If !MovBcoBx( cMotBx , .T. )
            nMoedaBco := SE1->E1_MOEDA
        EndIf
	EndIf
ElseIf lF070Auto .AND. (nT := ascan(aAutoCab,{|x| x[1]='AUTMOTBX'})) == 0
	HELP(" ", 01, "MOTBX" , , STR0089 + " " + cMotBx + " " + STR0297, 02,0,,,,,, {STR0298})//"Mot. Baixa" ## "não encontrado" ## "Selecione um motivo de baixa existente"
	Return .F.
EndIf

//
// Eh um titulo gerado pelo template GEM ?
//
If HasTemplate("LOT") .and. ExistTemplate("GEMSE1LIX")
	lGemInUse := ExecTemplate("GEMSE1LIX",.F.,.F.)
EndIf
If !SoftLock( "SE1" )
	Return
EndIf
// Verifica integracao com PMS e nao permite alteracao de titulos que tenham solicitacoes
// de transferencias em aberto.
If !( Alltrim(Upper(FunName())) == "FINA630" .or. (Type("lF630Auto")=="L" .and.  lF630Auto) ) .And. !Empty(SE1->E1_NUMSOL)
	HELP(" ",1,"FIN62003")
	Return
Endif

// Nao permitir baixar titulos de adiantamento relacionados a pedido
If cPaisLoc == "BRA" .and. AliasInDic("FIE")
	If FinAdtSld( "R", SE1->( E1_CLIENTE + E1_LOJA + E1_PREFIXO + E1_NUM + E1_PARCELA + E1_TIPO ) )
		Help(" ",1,"ADTXPED",,STR0224,1,0) //"Adiantamento relacionado a um pedido. Somente poderá ser utilizado no relacionamento com pedidos."
		Return(.F.)
	Endif
Endif

If SE1->( Deleted() )
	Help( " " , 1 , "RECNO" )
	Return .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ SIGAPFS‚ A cotação para baixa dos títulos no módulo jurídico deve ser sempre na cotação diária.  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If UPPER(Alltrim(SE1->E1_ORIGEM)) $ "JURA203"
	nTxMoeda := If(SE1->E1_MOEDA > 1, RecMoeda(dBaixa,SE1->E1_MOEDA), 0)
Else
	nTxMoeda 	:= If(SE1->E1_MOEDA > 1, If(SE1->E1_TXMOEDA > 0, SE1->E1_TXMOEDA,RecMoeda(dBaixa,SE1->E1_MOEDA)),0)
EndIf

// Se estiver utilizando CMC7, abre a porta para cadastro do cheque recebido.
If lOpenCmc7 == Nil .And. !lAut .And. GetMv("MV_CMC7FIN") == "S"
	OpenCMC7()
	lOpenCmc7 := .T.
Endif

lTemImpPad := !( __lPccMR .And. __lInsMR .And. __lIrfMR .And. __lIssMR )

If !lF070Auto .And. lImpBxCr .And. (SE1->E1_MULTNAT != "1" .or. (SE1->E1_MULTNAT == "1" .AND. F070RTMNBL())) .And. lTemImpPad
	AADD(aButtons, {"SIMULACAO", {|| FaCalcImp(.T.)}, STR0195, "Impostos" }) //"Recálculo dos Impostos"
EndIf

//Botao de Cheques no Painel Financeiro
AADD(aButtons, {"LIQCHECK", {|| CadCheqCR(cBanco,cAgencia,cConta,nValRec,dBaixa,1)}, STR0141 }) //"Cheques"

//Valores Acessorios.
If lPodeTVA .and. lExistVA
 	FAPodeTVA(SE1->E1_TIPO,SE1->E1_NATUREZ,.F.,"R")
	Aadd(aButtons, {"VALACESS", {||	If (FINA070VA() == 0,fA070Val(nVA,nTxMoeda),/**/) },STR0274})	//"Valores Acessórios"
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica os botoes de usuarios.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("FA070BTN")
	aButtons:= ExecBlock("FA070BTN",.F.,.F.,{aButtons})
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica os botoes de usuarios no Template.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If HasTemplate("LOT") .and. ExistTemplate("FA070BTN")
	aButtons := ExecTemplate("FA070BTN",.F.,.F.,{aButtons})
EndIf

//Ponto de entrada para desabilitar campos de Multa, Juros ou Descontos, data de baixa, data de credito
If ExistBlock("F070DCNB")
	aCposDes:=ExecBlock("F070DCNB",.F.,.F.)
	If Len(aCposDes) > 0
		IF (nT := ascan(aCposDes,'MULTA')) > 0
			lAcessMul := .F.
		Endif
		IF (nT := ascan(aCposDes,'DESCONTO')) > 0
			lAcessDesc := .F.
		Endif
		IF (nT := ascan(aCposDes,'JUROS')) > 0
			lAcessJur := .F.
		Endif
		IF (nT := ascan(aCposDes,'DATABAIXA')) > 0
			lAcessdBaixa := .F.
		Endif
		IF (nT := ascan(aCposDes,'DATACREDITO')) > 0
			lAcessDtCredito := .F.
		Endif
		IF (nT := ascan(aCposDes,'PIS')) > 0
			lAcessPIS := .F.
		Endif
		IF (nT := ascan(aCposDes,'COFINS')) > 0
			lAcessCOF := .F.
		Endif
		IF (nT := ascan(aCposDes,'CSLL')) > 0
			lAcessCSLL := .F.
		Endif
	Endif
Endif

//verifica se o titulo é da integração Protheus X Tin, caso afirmativo, não e permitido alterar os valores
If AllTrim(SE1->E1_ORIGEM)=="FINI055"  .And. !lF070Auto .And. SuperGetMv("MV_ITLBCPO",,.F.) == .F.
	lAcessMul := .F.
	lAcessDesc := .F.
	lAcessJur := .F.
	lAcessdBaixa := .F.
	lAcessDtCredito := .F.
Elseif AllTrim(SE1->E1_ORIGEM)=="FINI055"  .And. !lF070Auto .And. SuperGetMv("MV_ITLBCPO",,.F.) == .T.
	lAcessMul := .T.
	lAcessDesc := .T.
	lAcessJur := .T.
	lAcessdBaixa := .T.
	lAcessDtCredito := .T.
Endif

While .T.
	nOpc1		:= 0
	nJuros      := 0
	nVA			:= 0		//Valores Acessorios
	nPIS	    := 0
	nCOFINS    	:= 0
	nCSLL    	:= 0
	nVlRetPis	:= 0
	nVlRetCof	:= 0
	nVlRetCsl	:= 0
	nMulta      := 0
	nCM         := 0
	nDescont    := 0
	If !lF070Auto
		If Type("nValRec")=="U"
			nValRec     := 0
			dBaixa      := CriaVar("E1_BAIXA")
		ElseIf Type("nValRec")!="N"
			nValRec     := 0
		Endif
	Endif
	nValEstrang := 0
	nParciais   := 0
	aBaixaSE5   :={}

	nAcrescF	:= SE1->E1_SDACRES
	nDeCrescF	:= SE1->E1_SDDECRE  + nDecrVlr

	// Motor de Retenção
	__lMotor 	:= .F.
	__lPccMR	:= .F.
	__lInsMR	:= .F.
	__lIrfMR	:= .F.
	__lIssMR	:= .F.
	__lImpMR  	:= .F.
	__lGlosaMr	:= .F.
 	__lGlosIrf	:= .F.
 	__lGlosPis	:= .F.
 	__lGlosCof	:= .F.
	__lGlosCsl	:= .F.
 	__lGlosIss	:= .F.
 	__lGlosIns	:= .F.
 	__lGlosOut	:= .F.
 	__lPropPcc	:= .F.
	//***Reestruturacao SE5***
	nPisCalc	:= 0
	nCofCalc	:= 0
	nCslCalc	:= 0
	nIrfCalc	:= 0
	nIssCalc	:= 0
	nPisBaseR 	:= 0
	nCofBaseR	:= 0
	nCslBaseR 	:= 0
	nIrfBaseR 	:= 0
	nIssBaseR 	:= 0
	nPisBaseC 	:= 0
	nCofBaseC 	:= 0
	nCslBaseC 	:= 0
	nIrfBaseC 	:= 0
	nIssBaseC 	:= 0
	//***Reestruturacao SE5***

	If lF070ACRE
		ExecBlock("F070ACRE",.F.,.F.)
	EndIf

	lNatApura	:=	.F.
	aAreaSED 	:= SED->(GetArea())
	DbSelectArea("SED")
	DbSetOrder(1)
	If DbSeek(xFilial("SED")+ SE1->E1_NATUREZ) .And. lCposSped
		If (!Empty(SED->ED_APURCOF) .Or. !Empty(SED->ED_APURPIS))
			lNatApura	:=	.T. //Natureza configurada para apurar impostos no SPED PIS/COFINS.
		Endif
	Endif
	RestArea(aAreaSED)

	nAcresc     := Round(NoRound(xMoeda(nAcrescF,SE1->E1_MOEDA,nMoedaBco,dBaixa,3,nTxMoeda),3),2)
	nDecresc    := Round(NoRound(xMoeda(nDeCrescF,SE1->E1_MOEDA,nMoedaBco,dBaixa,3,nTxMoeda),3),2)
	nCM1        := 0
	nProRata    := 0

	// Motor de retenção
  	If __lTemMR
  		aImpos := F070VldImp(Iif(SE1->E1_VALOR <> SE1->E1_SALDO, 0, SE1->E1_VALOR), dBaixa, @lPccBxCr, @lIrPjBxCr, @lCalcIssBx)
  	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se o T¡tulo j  foi Baixado Totalmente                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SE1->E1_SALDO == 0 .And. !(FWHasEAI("FINI070A",.T.,,.T.) .And. FWHasEai("FINA070",.T.,,.T.) .And. (AllTrim(SE1->E1_ORIGEM) $ 'L|S|T' .Or. SE1->E1_IDLAN > 0)) .And. ;
		!( lFINA200 .And. lREC2TIT )// Tratamento do Parâmeto MV_REC2TIT - Geração de RECANT(RA) via RETORNO CNAB.
		Help(" ",1,"TITBAIXADO")
		MsUnlock()
		Exit
	EndIF

	If lVlTitCR .And. !(SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG)
		aAreaSE1:=SE1->(GetArea())
		nBusca := F070BuscCR( "SE1", SE1->E1_CLIENTE, SE1->E1_LOJA )
		If nBusca <> 0
			lAD := .T.
			cMsg := STR0241 //"O Cliente deste titulo possui "
			Do Case
				Case nBusca = 1 // Recebimento Antecipado
					cMsg += STR0242 //"Recebimento(s) Antecipado(s)."
				Case nBusca = 2 // NCC
					cMsg += STR0243 //"titulo(s) de credito."
			End Case
			cMsg += chr(13)+chr(10)
			cMsg += STR0244 //"Deseja mesmo assim baixa-lo ?"
			If isBlind()
				If lF070VLAD
					If !(ExecBlock("F070VLAD",.F.,.F.))
						Return .F.
					Endif
				Endif
			Else
				If !MsgYesNo( cMsg )
					Return .F. /*Function fA070Tit*/
				Endif
			Endif
		Endif
		RestArea(aAreaSE1)
	Endif

	faLojxRMul(dDtCredito)

	//Trato o desconto por bolsa de estudos quando há integração com o RM Classis
	If FWHasEAI("FINI070A",.T.,,.T.) .And. FWHasEai("FINA070",.T.,,.T.) .And. (AllTrim(SE1->E1_ORIGEM) $ 'L|S|T' .Or. SE1->E1_IDLAN > 0)
		nDescBol := SE1->E1_VLBOLSA
	EndIf

	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³Verifica se ‚ um registro Principal                                 ³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF SE1->E1_TIPO $ MVABATIM+"/"+MVIRABT+"/"+MVINABT+"/"+MVFUABT //adicionado MVFUABT pois a variável MVABATIM não está retornando FU-
		Help(" ",1,"NAOPRINCIP")
		MsUnlock()
		Exit
	End

	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³Verifica se ‚ um t¡tulo provis¢rio                                    ³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF SE1->E1_TIPO $ MVPROVIS .AND. !lSubsPrv .and. !lFini055
		Help(" ",1,"TITULOPROV")
		MsUnlock()
		Exit
	EndIf

	nSalvRec  := RecNO()
	cNum      := SE1->E1_NUM
	cPrefixo  := SE1->E1_PREFIXO
	cParcela  := SE1->E1_PARCELA
	cTipo     := SE1->E1_TIPO
	cCliente  := SE1->E1_CLIENTE
	cLoja     := SE1->E1_LOJA
	nTotAbat  := 0
	nTotAbImp := 0
	nTotAbLiq := 0
	nValorLiq := 0
	nValPadrao:= 0
	nTotAbat  := SumAbatRec(cPrefixo,cNum,cParcela,SE1->E1_MOEDA,"S",dBaixa,@nTotAbImp,,,,,,cFilAbat, nTxMoeda)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Busca os valores de ISS no caso de documento transferido com ISS na origem³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cFilOrgTr := FilISSTran()
	If !Empty( cFilOrgTr )
		SumAbatRec(cPrefixo,cNum,cParcela,SE1->E1_MOEDA,"S",dBaixa,nTotAbImp,,,,,,cFilOrgTr, nTxMoeda,@nTotAbISS)
		nTotAbat  += nTotAbISS
		nTotAbImp += nTotAbISS
	EndIf

	nTotAbLiq := nTotAbat - nTotAbImp
	dbGoto(nSalvRec)
	cMoeda := IIF(Empty(SE1->E1_MOEDA),"1",AllTrim(Str(SE1->E1_MOEDA,2)))

	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³Recebe os dados do t¡tulo a ser baixado                               ³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SA1->(MsSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA))
	cTitulo 	:= SE1->E1_PREFIXO + " " + SE1->E1_NUM+ " " + SE1->E1_PARCELA
	cSituacao 	:= SE1->E1_SITUACA + " " + fa070situa()
	cDescMoeda 	:= SubStr(GetMV("MV_SIMB"+cMoeda),1,3)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Para que o valor da baixa parcial nao fique negativo, verifico o saldo³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (SE1->E1_SALDO+SE1->E1_SDACRES)>0 .And. Empty(SE1->E1_TIPOLIQ)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Procura pelas baixas deste titulo ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lTipBxCP:=lRaRtImp

		aBaixa := Sel070Baixa( "VL /V2 /BA /RA /CP /LJ /" + MV_CRNEG, cPrefixo	, cNum			, cParcela	,;
								cTipo								, @nTotAdto	, @lBaixaAbat	, cCliente	,;
								cLoja								, @nVlrBaixa, Nil			, @lBxCec	,;
								@lBxLiq 							, @lSigaloja, @lTipBxCP		)
										
		For x := 1 To Len(aBaixaSE5)
			
			// Não considera a baixa de um recebimento de titulo pago em dinheiro originado pelo SIGALOJA
			If AllTrim(aBaixaSE5[x][25]) == "BA" .AND. AllTrim(aBaixaSE5[x][29]) == "LOJ" .AND. IsMoney(aBaixaSE5[x][24])
				Loop
			EndIf

			nValParc := Iif(SE1->E1_MOEDA > 1, aBaixaSE5[x][8]-aBaixaSE5[x,17]/*VlCorr*/, aBaixaSE5[x][8]/*E5_VALOR*/)

   			If lPccBxCR
   				If lRaRtImp //.And. nParciais > nVlMinImp
			   		nValParc += aBaixaSE5[x][18]+aBaixaSE5[x][19]+aBaixaSE5[x][20]+aBaixaSE5[x][30]// somar impostos PCC
			   	EndIf
			   	nPccRetPrc += aBaixaSE5[x][18]+aBaixaSE5[x][19]+aBaixaSE5[x][20]+ IIf( lIrPjBxCr , aBaixaSE5[x][30] , 0 )
			Elseif lIrPjBxCr .And. lRaRtImp
		  		nValParc += aBaixaSE5[x][30]
			Endif
			nTotMult	 += (aBaixaSE5[x][14]+aBaixaSE5[x][15])  // Soma Acrescimo mais Multa
			If lRaRtImp
		 		nValParc += aBaixaSE5[x][32]+aBaixaSE5[x][33]
		 		nTotAbat  -= aBaixaSE5[x][32]+aBaixaSE5[x][33]
			Endif

			//Verifica baixas parciais no caso de desconto.
			If ABAIXASE5[x][16] > 0 .and. lSDACRVL
				nValParc += ABAIXASE5[x][16]
            Endif

            If aBaixaSE5[x][24] # "01" .AND. aBaixaSE5[x][36] == aBaixaSE5[x][08]
            	nValParc := xMoeda(nValParc,Val(aBaixaSE5[x][24]),1,aBaixaSE5[x][7],nDecs,nTxMoeda)
			EndIf

			nParciais += nValParc
		Next
		nParciais += nTotAdto
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Soma valor de decrescimo em baixas parciais, para evitar         ³
		//³ diferencas entre valor original e valor recebido                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SE1->E1_SDDECRE <> SE1->E1_DECRESC
			If SE1->E1_SDDECRE = 0
				lSDDECVL := .T.
				If lSDACRVL
					nParciais -= SE1->E1_DECRESC
				Endif
			Else
				If lSDACRVL
					nParciais += ( SE1->E1_DECRESC - SE1->E1_SDDECRE )
				Endif
			Endif
		EndIf

	Else
		nParciais 	:= SE1->E1_VALOR-SE1->E1_SALDO
	Endif

	If "RA" $ SE1->E1_TIPO
		nParciais 	:= SE1->E1_VALOR-SE1->E1_SALDO
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Array aDescMotbx contendo apenas a descricao do motivo das Baixas. 	 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (nPos := aScan(aAutoCab,{|x| x[1] == 'AUTMOTBX'})) > 0 .AND. len(aAutoCab[nPos][2]) == 3
		If (nY := ascan(aMotBx,{|x| SubStr(x,1,3) == aAutoCab[nPos][2]})) > 0
			AADD( aDescMotbx,SubStr(aMotBx[nY],07,10))
		EndIf
	EndIf
	If Len( aDescMotbx ) == 0
		For nI := 1 to len( aMotBx )
			If SubStr(aMotBx[nI],34,01) == "A" .or. SubStr(aMotBx[nI],34,01) =="R"
				If !(substr(aMotBx[nI],01,03) $ "FAT|LOJ|LIQ|CEC|CMP|STP")
					AADD( aDescMotbx,SubStr(aMotBx[nI],07,10))
				EndIf
			EndIf
		Next nI
	EndIf

	// Carrega varivael cMotBx para sua verifcacao na funcao fa070totmes()
	cMotBx	:= aDescMotBx[1]	//Motivo das baixas

	If !(AllTrim(SE1->E1_ORIGEM) $ 'L|S|T' .Or. SE1->E1_IDLAN > 0)
		// Calcula o desconto e o juros (se houver) e valida a data
		// Idem para Valores Acessórios
		fA070Data(@nTxMoeda,.F.)
		F070Ret()
	EndIf

	nDescCalc 	:= nDescont + nDecresc
	nJurosCalc 	:= IIf(cPaisLoc<>"CHI",nJuros + nAcresc,nOtrga)
	nMultaCalc 	:= nMulta

	// adiciona o desconto da bolsa ao desconto financeiro para o Classis
	If (SE1->E1_ORIGEM $ 'L|S|T') .And. (SE1->E1_VALOR == SE1->E1_SALDO)
		nDescont := nDescbol + nDescont
		// para validação da bolsa
		lBolsa := .T.
	EndIf

	If FWHasEAI("FINI070A",.T.,,.T.) .And. FWHasEai("FINA070",.T.,,.T.) .And. (AllTrim(SE1->E1_ORIGEM) $ 'L|S|T' .Or. SE1->E1_IDLAN > 0)
		nDescont := nDescBol + SE1->E1_DESCONT + nDescont
	EndIf

	If !lF070Auto
		nOldValRec	:= nValRec
	Else
		lAutValRec := (nPos := aScan(aAutoCab,{|x| x[1] == 'AUTVALREC'})) > 0
		If TYPE("nValRec") == "N"
			If nValRec == 0
				If lAutValRec
					nValRec := aAutoCab[nPos][2]
					If lBq10925 .And. nValRec == SE1->E1_SALDO
			        	nValRec := SE1->E1_VALOR - nParciais + nTotMult
			        EndIf
				else
					nValRec := SE1->E1_VALOR
					nValRec -= nParciais - nTotMult
				EndIf
			Endif
		ElseIf TYPE("nValRec") == "U"
			If lAutValRec
				nValRec := aAutoCab[nPos][2]
			else
				nValRec := SE1->E1_VALOR
				nValRec -= nParciais - nTotMult
			EndIf
		Endif
	Endif

	If SE1->E1_MOEDA > 1
    	If !lF070Auto
            nValRec := xMoeda(SE1->E1_VALOR,SE1->E1_MOEDA,1,dDatabase,3,nTxMoeda)
		Else
            If Type("nValRec")=="N"
                If SE1->E1_MOEDA > 1
                    nValRec := nValRec
                Else
                    nValRec := xMoeda(nValRec,SE1->E1_MOEDA,1,dDatabase,3,nTxMoeda)
                EndIf
			Endif
		Endif
		nValRec:=nValRec - (IIf((!lBQ10925 .And. Alltrim(SE1->E1_ORIGEM) == "FINA280"), SE1->E1_VALLIQ, nParciais) - nTotMult)
    Else
    	If !lF070Auto
    	    If (lPccBxCR .And. !__lPccMR) .and. dBaixa < dLastPcc
        		nValRec := SE1->E1_VALOR - (IIf((!lBQ10925 .And. Alltrim(SE1->E1_ORIGEM) == "FINA280"), SE1->E1_VALLIQ, nParciais) - nTotMult) // (nTotMult = pagamento de multas nas baixas efetuadas anteriormente). Se fizermos 2 baixas parciais com multa alta, o valor SE1->E1_VALOR - nParciais será negativo
        	Else
        		If lBq10925
        			nValRec := SE1->E1_VALOR - nParciais + nTotMult
        		Else
        			nValRec := SE1->E1_SALDO
        		EndIf
        	EndIf
        	nOldValRec	:= nValRec
   		Endif
	EndIf

	If lF070Auto
		/*
			Iniciar valores do execauto aqui para calculo do imposto PCC e IR na baixa utilizarem
		*/
		If (nT := ascan(aAutoCab,{|x| x[1]='AUTJUROS'}) ) > 0
			nJuros := Round(NoRound(aAutoCab[nT,2]),2)
		EndIf

		If (nT := ascan(aAutoCab,{|x| x[1]='AUTDESCONT'}) ) > 0
			nDescont := Round(NoRound(aAutoCab[nT,2]),2)
		EndIf

		If (nT := ascan(aAutoCab,{|x| x[1]='AUTMULTA'}) ) > 0
			nMulta := Round(NoRound(aAutoCab[nT,2]),2)
		EndIf

		If (nT := ascan(aAutoCab,{|x| x[1]='AUTACRESC'}) ) > 0
			nAcresc := Round(NoRound(aAutoCab[nT,2]),2)
		EndIf

		If (nT := ascan(aAutoCab,{|x| x[1]='AUTDECRESC'}) ) > 0
			nDecresc := Round(NoRound(aAutoCab[nT,2]),2)
		EndIf
	EndIf

	If cPaisLoc == "BRA"
		If SED->ED_RECIRRF == "3" .and. SA1->A1_RECIRRF == "" // Se definir na natureza que o cliente define quem retem e o cliente não definir, não retenho
			nIrrf	:= 0
		Else
			If	lIrPjBxCr .and. SE1->E1_TIPO # MVRECANT
				If (lMVGlosa .and. !__lIrfMR) .or. __lGlosIrf
					If nParciais == 0 // Não houve baixas parciais ainda
						nIrrf := SE1->E1_IRRF
					Else
						nIrrf := 0
					Endif
				Else
					If __lTemMR .And. __lIrfMR
						nParciais += Iif(nParciais > 0, nIrrf, 0)
					Else
						nParciais += nIrrf
					EndIf
					If lAutoCab .and. ((nPos := aScan(aAutoCab,{|x| x[1] == 'AUTMOTBX'})) > 0 .AND. (aAutoCab[nPos][2] == 'TRF'))
						nIrrf := 0
					ElseIf !__lIrfMR
						nIrrf:= Iif(cPaisLoc == "BRA",FCaIrBxCR(nValRec,,(SE1->E1_VALOR <> SE1->E1_SALDO .AND. (lRaRtImp .Or. lBQ10925)),,!(nParciais == 0),dBaixa),0)
					EndIf
				EndIf
			EndIf
		EndIf
	EndIf

	If lPccBxCR
		If (lMVGlosa .And. !__lPccMR) .or. (__lGlosPis .or. __lGlosCof .or. __lGlosCsl)
			If nParciais == 0 // Não houve baixas parciais ainda
				nPis    := SE1->E1_PIS
				nCofins := SE1->E1_COFINS
				nCsll   := SE1->E1_CSLL
			Else
				nPis    := 0
				nCofins := 0
				nCsll   := 0
			Endif
			If Len(aDadosRef) < 7
				aDadosRef := Array(7)
				AFill( aDadosRef, 0 )
			Endif
			If Len(adadosRet) < 7
				aDadosRet := Array(7)
				AFill( aDadosRet, 0 )
			Endif
		Else
			If lAutoCab .and. ((nPos := aScan(aAutoCab,{|x| x[1] == 'AUTMOTBX'})) > 0 .AND. (aAutoCab[nPos][2] == 'TRF'))
				aAdd(aDadosRet, 0)
			Else
				If dBaixa < dLastPcc
					f070TotMes(dBaixa,.T.,,,,nTxMoeda)
				Else
					nBase	:= FBaseRPCC(nValRec,@lCalcPCC)
					If lJurMulDes
						If nBase-nDescont+nJuros+nVA+nMulta+nAcresc-nDecresc > 0
							nBase 	:= nBase-nDescont+nJuros+nVA+nMulta+nAcresc-nDecresc
						EndIf
					Else
						If FwIsInCallStack("FA450CMP") .AND. SE1->E1_SALDO <= (nValRec+Iif(!IsIssBx("R"), getVlIss(SE1->E1_FILIAL,SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO+E1_CLIENTE+E1_LOJA)), 0)+If(!lIrPjBxCr,SE1->E1_IRRF,0)+Iif(!lPropBx,  SE1->E1_INSS, 0)+Iif(lPccBxCR, SE1->(E1_PIS+E1_COFINS+E1_CSLL),0))
							nBase	+= Iif(!IsIssBx("R"), getVlIss(SE1->E1_FILIAL,SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO+E1_CLIENTE+E1_LOJA)), 0)
							nBase	+= If(!lIrPjBxCr,SE1->E1_IRRF,0)
							nBase 	+= Iif(!lPropBx,  SE1->E1_INSS, 0)
							If lPccBxCR .and. nBase + SE1->(E1_PIS+E1_COFINS+E1_CSLL) == SE1->E1_VALOR
								nBase	+= SE1->(E1_PIS+E1_COFINS+E1_CSLL)
							EndIf
						Endif
					EndIf
					If !Empty(SE1->E1_NUMBOR)
						lGerPCCBD := FGERPCCBOR("R", SE1->(Recno()))
					EndIf

				  	If !__lPccMR .And. SE1->E1_TIPO # MVRECANT .and. ( !lGerPCCBD .Or. lFINA200 ) .And. lCalcPCC //.And. Empty(SE1->E1_NUMBOR)
						aPcc	:= newMinPcc(dBaixa, nBase,SE1->E1_NATUREZ,"R",SA1->A1_COD+SA1->A1_LOJA,,,,,,cMotBx)
						nPis	:= aPcc[2]
						nCofins	:= aPcc[3]
						nCsll	:= aPcc[4]
						//Reestruturacao SE5 - Para gravação das tabelas FK3 e FK4
						nPisCalc	:= nPis
						nPisBaseC	:= nBase
						nPisBaseR 	:= nBase
						nCofCalc	:= nCofins
						nCofBaseC	:= nBase
						nCofBaseR 	:= nBase
						nCslCalc	:= nCsll
						nCslBaseC	:= nBase
						nCslBaseR 	:= nBase
						If lBq10925 .And. FwIsInCallStack("FA450CMP") .And. (nBase == SE1->E1_SALDO .and. nValRec <> nBase - (nPis + nCofins + nCsll))
							nValRec	:= nValRec - (nPis + nCofins + nCsll)
					  	Endif
					EndIf
				EndIf
			EndIf
		EndIf
	ElseIf !__lPccMR .and. !__lIrfMR
		If cPaisLoc == "BRA" .And. !lF070Auto
			nValRec := (xMoeda(SE1->E1_VALOR,SE1->E1_MOEDA,1,dDatabase,3,nTxMoeda) - xMoeda(nParciais,SE1->E1_MOEDA,1,dDatabase,3,nTxMoeda))
			If dBaixa >= dLastPcc
				nValRec	-= nTotAbat
			EndIf
		Else 
            If Type("lAutValRec") <> "L" .OR. !lAutValRec
                If SE1->E1_MOEDA > 1 
                    nValRec := xMoeda(SE1->E1_VALOR,SE1->E1_MOEDA,1,dDatabase,nDecs,nTxMoeda) - nParciais
                Else
                    nValRec :=  SE1->E1_VALOR - nParciais 
                EndIf
			EndIf
		Endif
	Endif

	// Motor de retenção
  	If __lTemMR .And. SE1->E1_VALOR != SE1->E1_SALDO
  		aImpos := F070VldImp(nValRec, dBaixa, @lPccBxCr, @lIrPjBxCr, @lCalcIssBx)
  	EndIf
	//Carrego a variável para validação quando origem for mensagem única
	cAuxMBx	:= IIf(lAutoCab .And. ((nPos := aScan(aAutoCab,{|x| x[1] == 'AUTMOTBX'})) > 0), aAutoCab[nPos][2],"")

	*ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	*³Pr‚-inicializa o valor recebido.                                   ³
	*ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cMotBx	:= aDescMotBx[1]	//Motivo das baixas

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³PONTO DE ENTRADA FA070POS  ³
	//³                           ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Permite a altera‡„o de vari veis apos carga de dados do t¡tulo a ser ³
	//³ baixado, antes das informa‡äes serem mostradas na Tela.              ³
	//³ Vari veis dispon¡veis para serem alteradas :                         ³
	//³                                                                      ³
	//³ cBanco , cAgencia, cConta, cCheque                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	// Dourado 31/08/2000 criacao do ponto de entrada na mesma
	// posicao que foi criado no FINA080A.PRX (FA080POS), para a
	// inclusao da taxa do dolar do momento.
	// Carlao. 23/11/2005 - Inclusao de ponto de entrada de template

	// Template GEM
	If HasTemplate("LOT") .and. ExistTemplate("FA070POS")
		ExecTemplate("FA070POS",.F.,.F.)
	Endif
	If lFA070POS
		ExecBlock("FA070POS",.F.,.F.)
	Endif

	aColsSEV := {}

    fa070val( nValrec, nTxMoeda)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Pr‚-inicializa a modalidade de SPB                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lSpbInUse
		If !Empty(SE1->E1_MODSPB)
			cModSpb := SE1->E1_MODSPB
		Else		
		   cModSpb := "1"
		Endif
	Endif

	If lFA070BLQ
	     lLibCm := ExecBlock("FA070BLQ",.F.,.F.)
    Endif


	If l070Auto .or. ! lF070Auto
		bSetKey := SetKey(VK_F4,{|| If( !SE1->E1_TIPO $ MV_CRNEG,CadCheqCR(cBanco,cAgencia,cConta,nValRec,dBaixa,1),.F.)})
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Recebe os dados do t¡tulo a ser baixado                               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( cPaisLoc=="CHI" )
			DEFINE FONT oFontLbl NAME "Arial" SIZE 6,15 BOLD
			DEFINE MSDIALOG oDlg FROM  69,33 TO 530,581 TITLE STR0103 PIXEL OF oMainWnd  //"Baixas a Receber"
		Else
			DEFINE FONT oFontLbl NAME "Arial" SIZE 6, 15 BOLD
			nLin2 := If(cPaisLoc=="BRA",700,520)
			// Template GEM, nova linha do rodape para os campos especificos do template.
			If lGemInUse
				nLin2 += 24
			EndIf

			//Valores Acessorios.	
			If lPodeTVA .and. lExistVA
				nLin2 += 24
			EndIf

		    DEFINE MSDIALOG oDlg FROM  69,33 TO nLin2,593 TITLE STR0103 PIXEL OF oMainWnd  //"Baixas a Receber"
		EndIf

		If !Empty(cMotBx) .and. !MovBcoBx(cMotBx, .T.)
			cBanco 		:= CriaVar("E1_PORTADO",.F.)
			cAgencia	:= CriaVar("E1_AGEDEP" ,.F.)
			cConta 		:= CriaVar("E1_CONTA"  ,.F.)
		Endif
		
		nOldBanco  	:= cBanco
		nOldAgencia	:= cAgencia
		nOldConta	:= cConta

		//Defino o tamanho dos componentes através do método FwDefSize(), amarrando ao objeto oDlg
		oSize := FwDefSize():New(.T.,,,oDlg)

		oSize:lLateral := .F.
		oSize:lProp := .T.

		oSize:AddObject("MASTER",100,100,.T.,.T.)

		oSize:Process()

		//Instancio um painel "master" como container dos demais paineis, mantendo a hierarquia
		oMasterPanel := TPanel():New(oSize:GetDimension("MASTER","LININI"),oSize:GetDimension("MASTER","COLINI"),;
								,oDlg,,,,,,oSize:GetDimension("MASTER","XSIZE"),oSize:GetDimension("MASTER","YSIZE"),.F.,.F.)

		oPanel1 := TPanel():New(0,0,'',oMasterPanel,, .T., .T.,, ,45,45,.f.,.f. )
		oPanel1:Align := CONTROL_ALIGN_TOP

		oPanel2 := TPanel():New(0,0,'',oMasterPanel,, .T., .T.,, ,30,30,.f.,.f. )
		oPanel2:Align := CONTROL_ALIGN_ALLCLIENT

		@ 001,002 GROUP oGrp1 TO 043, 272 LABEL STR0008 OF oPanel1 PIXEL //"Principal"
		@ 001,002 GROUP oGrp2 TO If(cPaisLoc=="BRA",227,165), 133 LABEL STR0009 OF oPanel2  PIXEL //"Dados Gerais"
		@ 001,139 GROUP oGrp3 TO If(cPaisLoc=="BRA",227,165), 272 LABEL STR0010 OF oPanel2  PIXEL //"Valores da Baixa"
		oGrp1:oFont := oFontLbl
		oGrp2:oFont := oFontLbl
		oGrp3:oFont := oFontLbl

		//////////////////////////
		//Dados do titulo
		@ 008,004 SAY STR0211				SIZE 31,07 OF oPanel1 PIXEL //"Prefixo"
		@ 008,027 MSGET SE1->E1_PREFIXO	SIZE 25,08 OF oPanel1 PIXEL When .F.
		@ 008,060 SAY STR0212 				SIZE 31,07 OF oPanel1 PIXEL //"Número"
		@ 008,085 MSGET SE1->E1_NUM		SIZE 70,08 OF oPanel1 PIXEL When .F.
		@ 008,165 SAY STR0213				SIZE 31,07 OF oPanel1 PIXEL //"Parcela"
		@ 008,188 MSGET SE1->E1_PARCELA	SIZE 25,08 OF oPanel1 PIXEL When .F.
		@ 008,220 SAY STR0214				SIZE 31,07 OF oPanel1 PIXEL //"Tipo"
		@ 008,238 MSGET oTipo VAR cTipo	F3 "SE1RDO" SIZE 30,08 OF oPanel1 PIXEL HASBUTTON
		oTipo:lReadOnly := .T.

		@ 019,004 SAY STR0014 SIZE 22, 07 OF oPanel1 PIXEL //"Cliente"
		@ 019,027 MSGET oCodCli VAR SE1->E1_CLIENTE F3 "SA1" SIZE 65,08 OF oPanel1 PIXEL HASBUTTON //READONLY
		oCodCli:lReadOnly := .T.
		@ 019,105 MSGET SA1->A1_NOME SIZE 165,08 OF oPanel1 PIXEL When .F.

		@ 030,004 SAY STR0052 				SIZE 31,07 OF oPanel1 PIXEL //"Natureza"
		@ 030,027 MSGET oNaturez VAR SE1->E1_NATUREZ	F3 "SED" SIZE 70,08 OF oPanel1 PIXEL HASBUTTON
		oNaturez:lReadOnly := .T.
		@ 030,105 SAY STR0012 				SIZE 31,07 OF oPanel1 PIXEL //"Emiss„o"
		@ 030,133 MSGET SE1->E1_EMISSAO	SIZE 48,08 OF oPanel1 PIXEL HASBUTTON When .F.
		@ 030,189 SAY STR0013 				SIZE 49,07 OF oPanel1 PIXEL //"Vencto.Atual"
		@ 030,222 MSGET SE1->E1_VENCREA	SIZE 48,08 OF oPanel1 PIXEL HASBUTTON When .F.

		//////////////////////////
		//Dados Gerais

		nUltLin := 10
		@ nUltLin,005 SAY STR0015 SIZE 39, 07 OF oPanel2 PIXEL //"Hist.Emiss„o"
		@ nUltLin,065 MSGET SE1->E1_HIST       SIZE 65, 08 OF oPanel2 PIXEL When .F.

		nUltLin += 12
		@ nUltLin,005 SAY STR0016 SIZE 35, 07 OF oPanel2 PIXEL //"Situa‡„o"
		@ nUltLin,065 MSGET cSituacao          SIZE 65, 08 OF oPanel2 PIXEL When .F.

		nUltLin += 12
		@ nUltLin,005 SAY STR0023 SIZE 32, 07 OF oPanel2 PIXEL //"Mot.Baixa"

		aVlOringl[ 1 ] := nValRec
		aVlOringl[ 2 ] := nPIS
		aVlOringl[ 3 ] := nCOFINS
		aVlOringl[ 4 ] := nCSLL
		aVlOringl[ 5 ] := nJuros
		aVlOringl[ 6 ] := nMulta
		aVlOringl[ 7 ] := nDescont
		aVlOringl[ 8 ] := nBase

		@ nUltLin,065 MSCOMBOBOX oCbx VAR cMotBx ITEMS aDescMotBx SIZE 65, 47 OF oPanel2 PIXEL ;
					ON CHANGE oBanco:lReadOnly := FN022SITCB(SE1->E1_SITUACA)[3] .or. !MovBcobx(cMotBx, .T.) ;
					VALID fa070BDev(oJuros, oMulta, oDescont, oCm, nTxMoeda, oCbx,.T.)	.and. ;
					fA070Val(nValRec,nTxMoeda,(!Empty(oCbx) .AND. oCbx:lModified),.T.) .and. ;
					IIF(lFA070MDB,lMdbOk:=ExecBlock("FA070MDB",.F.,.F.),.T.)

		nUltLin += 18
		@ nUltLin,005 SAY STR0017 SIZE 32, 07 OF oPanel2 PIXEL //"Banco"
		@ nUltLin,065 MSGET oBanco var cBanco  SIZE 65, 08 OF oPanel2 PIXEL F3 cF3Bco ;
				Valid (AtulValidou() .And. !MovBcobx(cMotBx, .T.) .and. Empty(cBanco)) .or. ;
						(IiF(lFa070Bco,ExecBlock("FA070BCO",.F.,.F.),.T.) .And.;
							  F070VldBco(cBanco,@cAgencia,@cConta,.T.,.T.) .And. ;
							  f070AltBco(@nTxMoeda, oJuros, oMulta, oDescont, oCm, oBanco, @nValRec, @oTxMoeda) .And. ;
							  Iif(lMoedaBco .And. SE1->E1_MOEDA <> SA6->A6_MOEDA, (F070CnvPcc(nTxMoeda, SE1->E1_MOEDA), oPanel2:Refresh(), .T.),.T.) .And. ;
							  IIF(lJFilBco, JurVldSA6("1", {cEscrit, cBanco, cAgencia, cConta}), .T.)) HASBUTTON
		oBanco:lReadOnly := (FN022SITCB(SE1->E1_SITUACA)[3] .OR. !MovBcobx(cMotBx, .T.))

		nUltLin += 12
		@ nUltLin,005 SAY STR0018 SIZE 32, 07 OF oPanel2 PIXEL //"Agˆncia"
		@ nUltLin,065 MSGET oAgencia var cAgencia  SIZE 65, 08 OF oPanel2 PIXEL Valid ;
							If(!lValidou,If(F070VldBco(cBanco,cAgencia,@cConta,.T.,.T.,cAgencia) .AND. ;
							f070AltBco(@nTxMoeda, oJuros, oMulta, oDescont, oCm, oBanco, @nValRec, @oTxMoeda),.T.,oBanco:SetFocus()),.T.) .And. ;
							IIF(lJFilBco, JurVldSA6("2", {cEscrit, cBanco, cAgencia, cConta}), .T.) ;
							WHEN ( !FN022SITCB(SE1->E1_SITUACA)[3] .and. MovBcoBx(cMotBx, .T.) )
		nUltLin += 12
		@ nUltLin,005 SAY STR0019 SIZE 28, 07 OF oPanel2 PIXEL //"Conta"
		@ nUltLin,065 MSGET oConta var cConta  SIZE 65, 08 OF oPanel2 PIXEL Valid ;
							If(!lValidou,If(F070VldBco(cBanco,cAgencia,cConta,.T.,.T.,cAgencia+cConta) .And. ;
							f070AltBco(nTxMoeda,oJuros, oMulta, oDescont, oCm,oBanco,nValRec, @oTxMoeda),.T.,oBanco:SetFocus()),.T.) .And. ;
							IIF(lJFilBco, JurVldSA6("3", {cEscrit, cBanco, cAgencia, cConta}), .T.) ;
							WHEN ( !FN022SITCB(SE1->E1_SITUACA)[3] .and. MovBcoBx(cMotBx, .T.) )

		nUltLin += 12
		dDtRecbAux := dBaixa
		@ nUltLin,005 SAY STR0020 SIZE 39, 07 OF oPanel2 PIXEL//"Data Receb."
		@ nUltLin,065 MSGET oDtBaixa VAR dBaixa SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON When F070DtRe() .and. lAcessdBaixa Valid Iif(dBaixa <> dDtRecbAux .or. oDtBaixa:lModified , fA070Data(@nTxMoeda,,oDtBaixa,oJuros,,,,@aImpos,lMudouMulta),.T.) ; //feito a chamada aqui, pois nao estava executando a funcao fa070data ao perder o foco no campo
							 .And. ( Iif( lSigaGSP, GSPF250(), .T.) .And. ( nOldJuros := nJuros, .T. ) .and. If (dBaixa <> dDataBase .and.;
							  SE1->E1_VALOR == nValRec+nPis+nCofins+nCsll+nIrrf,(nIrrf:=Iif(cPaisLoc == "BRA" ,FCaIrBxCR(SE1->E1_VALOR),0),Iif(dBaixa < dLastPcc,f070TotMes(dBaixa,.T.,,,dBaixa <> dDtRecbAux),.T.)), .T. ))

		nUltLin += 12
		@ nUltLin,005 SAY STR0021 SIZE 32, 07 OF oPanel2 PIXEL //"Data Cr‚dito"
		@ nUltLin,065 MSGET oDtCredito VAR dDtCredito SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Valid (dDtCredito >= dBaixa  .and. Iif(cBxDtFin == "2", DtMovFin(dDtCredito,,"2"), .T.) ) .or. lAntCred
		oDtCredito:SetEnable( lAcessDtCredito )

		nUltLin += 12
		@ nUltLin,005 SAY STR0022 SIZE 32, 07 OF oPanel2 PIXEL //"Hist.Baixa"
		@ nUltLin,065 MSGET cHist070           SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture "@!" VALID CheckSX3("E5_HISTOR") When VisualSX3("E5_HISTOR")

		If cPaisLoc == "BRA" .And. SE1->E1_MOEDA > 1
			nUltLin += 12
			@ nUltLin,005 SAY STR0142 	SIZE 53, 07 OF oPanel2 PIXEL //"Taxa contratada"
			@ nUltLin,065 MSGET oTxMoeda VAR nTxMoeda  SIZE 65, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict( "SM2","M2_MOEDA"+AllTrim(Str(SE1->E1_MOEDA))) ;
						 			Valid ( ValTxMoeda( nTxMoeda , @nOldTxmoeda , nMulta , nOldMulta , nJuros , nOldJuros ) , oPanel2:Refresh() )

		Endif

		nOldTxmoeda := nTxMoeda

		If lSpbInUse
			nUltLin += 12
			@ nUltLin,005 SAY STR0140 SIZE 32, 07 OF oPanel2 PIXEL  //"Modalidade SPB"
			@ nUltLin,065 COMBOBOX oModSPB VAR cModSpb ITEMS aModalSpb SIZE 65, 47 OF oPanel2 PIXEL ;
								  When MovBcoBx(cMotBx,.T.)
		Endif

		nUltLin += 12
		@ nUltLin,005 SAY STR0173 SIZE 100, 07 OF oPanel2 PIXEL	//"Rateio Mult.Naturezas"
		@ nUltLin,065 CHECKBOX oMultNat VAR lMultNat PROMPT "" SIZE 12,12 OF oPanel2 PIXEL

		//////////////////////////
		//Dados da Baixa
		nLinha := 10
		If cPaisLoc <> "CHI"
		   @ nLinha,144 SAY STR0027 + cDescMoeda SIZE 53, 08 OF oPanel2 PIXEL COLOR CLR_HBLUE//"Valor Original "
		   @ nLinha,204 MSGET SE1->E1_VALOR  SIZE 66, 08 OF oPanel2 PIXEL COLOR CLR_HBLUE When .F. Picture PesqPict("SE1","E1_VALOR") HASBUTTON //"@E 999,999,999,999.99"

		Else
		   @ nLinha,144 SAY STR0027 SIZE 53, 08 OF oPanel2 PIXEL COLOR CLR_HBLUE //"Valor Original "
		   @ nLinha,204 MSGET SE1->E1_VLCRUZ      SIZE 66, 08 OF oPanel2 PIXEL COLOR CLR_HBLUE When .F. Picture PesqPict("SE1","E1_VLCRUZ") HASBUTTON //"@E 999,999,999,999.99"
		EndIf

		nEstOriginal := nValEstrang-(xMoeda(nJuros+nVA+(nCm1+nProRata)+nMulta-nDescont-nOtrga+nAcresc-nDecresc - Iif(lPccBxCr,nPis+nCofins+nCsll,0)-Iif(lIrPjBxCr,nIrrf,0),nMoedaBco,SE1->E1_MOEDA,,,,nTxMoeda))

		FA070CORR(nEstOriginal,nTxMoeda)

		If cPaisLoc <> "CHI"
			nLinha +=12
			@ nLinha,144 SAY STR0028 SIZE 53, 07 OF oPanel2 PIXEL // "- Abatimentos"
			@ nLinha,204 MSGET nTotAbLiq   SIZE 66, 08 OF oPanel2 PIXEL When .F.  Picture PesqPict( "SE1","E1_VALOR" ) HASBUTTON  //"@E 999,999,999,999.99"

			If cPaisLoc == "BRA"
				nLinha +=12
				@ nLinha,144 SAY STR0186 SIZE 53, 07 OF oPanel2 PIXEL // "- Impostos"
				@ nLinha,204 MSGET nTotAbImp  SIZE 66, 08 OF oPanel2 PIXEL When .F.  Picture PesqPict( "SE1","E1_VALOR" ) HASBUTTON //"@E 999,999,999,999.99"

				nValorLiq :=  (SE1->E1_VALOR - nTotAbLiq - nTotAbImp)
				nLinha +=12
				@ nLinha,144 SAY STR0187 SIZE 53, 07 OF oPanel2 PIXEL // "Valor Liquido"
				@ nLinha,204 MSGET oValorLiq VAR nValorLiq     SIZE 66, 08 OF oPanel2 PIXEL When .F. Picture PesqPict("SE1","E1_VLCRUZ") HASBUTTON //"@E 999,999,999,999.99"
			Endif
		Else
			nLinha +=12
			@ nLinha,144 SAY STR0134 SIZE 53, 7 OF oPanel2 PIXEL // "+/- Dif. Cambio"
			@ nLinha,204 MSGET oDifCambio VAR nDifCambio SIZE 66, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE1","E1_VLCRUZ" /*"E1_CAMBIO"*/)  When .F.
		EndIf
		nLinha +=12
		@ nLinha,144 SAY STR0029 SIZE 53, 07 OF oPanel2 PIXEL //"- Pagtos Parciais"
		@ nLinha,204 MSGET nParciais          SIZE 66, 08 OF oPanel2 PIXEL HASBUTTON When .F.  Picture PesqPict( "SE1","E1_VALOR" )  //"@E 999,999,999,999.99"

		nLinha +=12
		@ nLinha,144 SAY  STR0136 SIZE 53, 07 OF oPanel2 PIXEL //"- Decrescimo"
		@ nLinha,204 MSGET Iif(lSDDECVL, SE1->E1_DECRESC,Iif(nDecrescF > 0,nDecrescF,nDecrVlr))  SIZE 66, 08 OF oPanel2 PIXEL HASBUTTON     Picture PesqPict( "SE1","E1_DECRESC" )  When .f.

		nLinha +=12
		@ nLinha,144 SAY STR0135 SIZE 53, 07 OF oPanel2 PIXEL //"+ Acrescimo"
		@ nLinha,204 MSGET IIF(lSDACRVL,SE1->E1_ACRESC,nAcresc)  SIZE 66, 08 OF oPanel2 PIXEL HASBUTTON     Picture PesqPict( "SE1","E1_ACRESC" )  When .F.

		// Template GEM, campos especifico do template.
		If lGemInUse
			nLinha +=12
			@ nLinha,144 SAY STR0203 SIZE 53, 07 OF oPanel2 PIXEL // "+ C.M."
			@ nLinha,204 MSGET oCM1 VAR nCM1  SIZE 66, 08 OF oPanel2 PIXEL HASBUTTON When iIf(GMBLQCM() .Or. SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG .And. !MovBcobx(cMotBx, .T.), .F., .T.)  Picture PesqPict( "SE1","E1_JUROS" ) ; //"@E 999,999,999,999.99"
																Valid fa070CM1(oCM1,oJuros,oMulta) .AND. fa070Calc( nTxMoeda )
		EndIf

		nLinha +=12
		@ nLinha,144 SAY STR0030 SIZE 53, 07 OF oPanel2 PIXEL //"- Descontos"
		@ nLinha,204 MSGET oDescont VAR nDescont  SIZE 66, 08 OF oPanel2 PIXEL HASBUTTON When F070DSC() .And. If(SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG .And. !MovBcobx(cMotBx, .T.), .F., .T.) .And. lAcessDesc Picture PesqPict( "SE1","E1_DESCONT" ) ; //"@E 999,999,999,999.99"
																Valid F70VlDsc(lTpDesc,lNatApura)

		oDescont:SetEnable( lAcessDesc )
		nOldDescont := nDescont

		// Template GEM, campo especifico do template.
		If lGemInUse
			nLinha +=12
			@ nLinha,144 SAY STR0204 SIZE 53, 07 OF oPanel2 PIXEL // "+ Pro Rata"
			@ nLinha,204 MSGET oProRata VAR nProRata SIZE 66, 08 OF oPanel2 PIXEL HASBUTTON When iIf(SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG .And. !MovBcobx(cMotBx, .T.), .F., .T.)  Picture PesqPict( "SE1","E1_JUROS" ) ; //"@E 999,999,999,999.99"
																Valid fa070PRata( oProRata ,oJuros ,oMulta ) .AND. fa070Calc( nTxMoeda )
		EndIf

		nLinha +=12
		@ nLinha,144 SAY STR0101 SIZE 53, 07 OF oPanel2 PIXEL //"+ Multa"
		@ nLinha,204 MSGET oMulta VAR nMulta  SIZE 66, 08 OF oPanel2 PIXEL HASBUTTON When If(F070Mul(oMulta) .And. SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG .And. !MovBcobx(cMotBx, .T.), .F., .T.)  .And. lAcessMul Picture PesqPict( "SE1","E1_MULTA" ) ; //"@E 999,999,999,999.99"
															Valid (F070Mul(oMulta),Iif( (!Empty(oMulta) .AND. oMulta:lModified), (fA070Val(nMulta,nTxMoeda),Iif(nOldMulta <> nMulta, lMudouMulta := .T., lMudouMulta := .F.),nOldMulta := nMulta), .T.))
															//Valid (F070Mul(oMulta) .and. fA070Val(nMulta,nTxMoeda)) //Augusto 07/04/2015 Foi retirado a comparal?o com nMulta e nOldMulta para for?r a atualiza?o,pois estava calculando errado
		oMulta:SetEnable( lAcessMul )
		nOldMulta := nMulta

	   If cPaisLoc <> "CHI"
			nLinha +=12
			@ nLinha,144 SAY STR0031 SIZE 53, 07 OF oPanel2 PIXEL //"+ Tx.Permanenc."
			@ nLinha,204 MSGET oJuros VAR nJuros   SIZE 66, 08 OF oPanel2 PIXEL HASBUTTON When F070Jrs() .And. If(SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG .And. !MovBcobx(cMotBx, .T.), .F., .T.) .And. lAcessJur Picture PesqPict( "SE1","E1_JUROS" ) ; //"@E 999,999,999,999.99"
															Valid F070TxPer(oJuros) .AND. Iif(!Empty(oJuros) .and. oJuros:lModified, (fA070Val(nJuros,nTxMoeda),nOldJuros := nJuros),.T.)
															//Valid (F070TxPer(oJuros) .AND. fA070Val(nJuros,nTxMoeda))	//Augusto 07/04/2015 Foi retirado a comparal?o com nJuros e nOldJuros para for?r a atualiza?o,pois estava calculando errado
		   oJuros:SetEnable( lAcessJur )
			nOldJuros := nJuros
		Else
		   nLinha +=12
		   @ nLinha,144 SAY STR0133 SIZE 53, 07 OF oPanel2 PIXEL //"- Outros Gastos"
		   @ nLinha,204 MSGET oOtrga VAR nOtrga  SIZE 66, 08 OF oPanel2 PIXEL HASBUTTON     Picture PesqPict( "SE1","E1_OTRGA" ) ; //"@E 999,999,999,999.99"
		   Valid fA070Val(nOtrga)
		EndIf

		//Valores Acessorios
		If lPodeTVA .and. lExistVA
		 	FAPodeTVA(SE1->E1_TIPO,SE1->E1_NATUREZ,.F.,"R")
			nLinha +=12
			@ nLinha,144 SAY "+ " + STR0274 	SIZE 53,07 OF oPanel2 PIXEL		//"Valores Acessórios"
			@ nLinha,204 MSGET oVA VAR nVA SIZE 66, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("FKD","FKD_VALOR") When  .F.
			nOldVA := nVA
		EndIf

		//Controla IRPJ na baixa
		If cPaisLoc == "BRA" .And. lIrPjBxCr .And. !__lIrfMR
			nLinha +=12
			@ nLinha,144 SAY STR0228  SIZE 53, 07 OF oPanel2 PIXEL  // "- IRRF"
			@ nLinha,204 MSGET oIrrf VAR nIrrf SIZE 66, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict( "SE1","E1_IRRF" ); //"@E 999,999,999,999.99"
															 Valid Iif( nOldIrrf # nIrrf, (fA070Val(nIrrf,nTxMoeda,.T.),nOldIrrf := nIrrf), .T.)//f070ValRec(@nValorRec,nTotAbLiq,nPis,nCofins,nCsll,nIrrf,nIss,nInss)
			nOldIrrf := nIrrf
		EndIf

		If cPaisLoc == "BRA" .And. lPccBxCR .And. !__lPccMR //1-Retem PCC na Baixa ou 2-Retem PCC na Emissão(default)
			nLinha +=12
			@ nLinha,144 SAY STR0216 SIZE 53, 07 OF oPanel2 PIXEL //"- PIS"
			@ nLinha,204 MSGET oPIS VAR nPIS   SIZE 66, 08 OF oPanel2 PIXEL HASBUTTON  Picture PesqPict( "SE1","E1_PIS" ) ; //"@E 999,999,999,999.99"
					Valid Iif(nOldPis # nPis, (fA070Val(nPIS,nTxMoeda,.T.),nOldPis := nPis), .T.)
			nOldPis := nPis
			oPIS:SetEnable( lAcessPIS )

			nLinha +=12
			@ nLinha,144 SAY STR0217 SIZE 53, 07 OF oPanel2 PIXEL //"- COFINS"
			@ nLinha,204 MSGET oCOFINS VAR nCOFINS   SIZE 66, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict( "SE1","E1_COFINS" ) ; //"@E 999,999,999,999.99"
				Valid Iif(nOldCofins # nCofins, (fA070Val(nCOFINS,nTxMoeda,.T.),nOldCofins := nCofins), .T.)
			nOldCofins := nCofins
			oCOFINS:SetEnable( lAcessCOF )

			nLinha +=12
			@ nLinha,144 SAY STR0218 SIZE 53, 07 OF oPanel2 PIXEL //"- CSLL"
			@ nLinha,204 MSGET oCSLL VAR nCSLL   SIZE 66, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict( "SE1","E1_CSLL" ) ; //"@E 999,999,999,999.99"
				Valid (oCSLL:Refresh(),Iif(nOldCsll # nCsll, (fA070Val(nCsll,nTxMoeda,.T.),nOldCsll := nCsll), .T.))
			nOldCsll := nCsll
			oCSLL:SetEnable( lAcessCSLL )
		EndIf

		If __lTemMR .And. __nTotImp > 0
			nLinha +=12
			@ nLinha,144 SAY STR0286	SIZE 53,07 OF oPanel2 PIXEL //"- Retenções"
			@ nLinha,204 MSGET __oRetMot VAR __nTotImp	SIZE 66, 08 OF oPanel2 PIXEL HASBUTTON Picture PesqPict("SE1","E1_VALLIQ")  ;
			Valid .T. When .F.
		EndIf

        nLinha +=12
        @ nLinha,144 SAY STR0033 SIZE 53,07 OF oPanel2 PIXEL COLOR CLR_HBLUE //"= Valor Recebido"
        @ nLinha,204 MSGET oValRec VAR nValRec SIZE 66, 08 OF oPanel2 PIXEL HASBUTTON COLOR CLR_HBLUE Picture PesqPict( "SE1","E1_VALOR" )  ;//"@E 999,999,999,999.99"
                                                        Valid (     (oValRec:Refresh(), .T.) .And. ;
                                                                    fa070Calc(nTxMoeda,.F.,.T.,.T.) .And. ;
                                                                    Fa070ValVR(nTxMoeda) .And. ;
                                                                    Iif(FA070ValRec(oJuros,oMulta,oProRata,oDescont,aVlOringl,@aImpos,.T.) .and. Fa070Liq(oJuros,oValRec, oPanel2),   ;
                                                                    (oVlEstrang:Refresh() , oCM:Refresh(), .T.),;
                                                                    (oVlEstrang:Refresh() , oCM:Refresh(),oValRec:Refresh(), .F.))) 
                                                                                                                                
        nLinha +=12
        @ nLinha,144 SAY STR0034+SubStr(GetMV("MV_SIMB"+cMoeda),1,3) SIZE 53, 7 OF oPanel2 PIXEL // "Valor "
        @ nLinha,204 MSGET oVlEstrang VAR nValEstrang SIZE 66, 08 OF oPanel2 PIXEL HASBUTTON  ;
                        Picture PesqPict( "SE1","E1_VALOR" )  ;
                        VALID Iif(FA070Estrang(nTxMoeda),.T.,(Help(" ",1,"ValorMaior"),.F.)) .And.;
                                Fa070ValEstrang(	nValEstrang,@nTxMoeda,@nValRec,dBaixa,oValRec,oTxMoeda,;
                                                    nJuros+(nCm1+nProRata),nMulta,nDescont,nOtrga,nEstOriginal,oVlEstrang) .And.;
                            FA070ValRec(oJuros,oMulta,oProRata,oDescont,,@aImpos)
        nLinha +=12
        @ nLinha,144 SAY STR0032 SIZE 53,07 OF oPanel2 PIXEL // "+ Corr.Monet ria"
        @ nLinha,204 MSGET oCM     VAR nCM		SIZE 66, 08 OF oPanel2 PIXEL HASBUTTON     Picture PesqPict( "SE1", "E1_CORREC" )  ; // "@E 999,999,999,999.99"
                                                        When ( lCalcCM .And. cPaisLoc <> "BRA" ) .OR. lLibCm


		If ( cPaisLoc <> "BRA" )
            AADD(aButtons, {"TABPRICE", {|| (nTxMoeda:=Fa070SetMd(),Iif( nOldJuros + nJuros > 0 , fA070Data(nTxMoeda,.F.,,,,.T.) , Nil ) , Iif( nOldMulta + nMulta > 0 , fA070Val(nMulta,nTxMoeda) , Nil ) , F070CnvPcc(nTxMoeda, SE1->E1_MOEDA) , oPanel2:Refresh())},"MOEDAS" }) //Troca de Taxas
		Endif

		If __lTemMR .And. __nTotImp > 0
			Aadd(aButtons, {"NOTE", {||F070ConImp(aImpos)},,STR0284,STR0284}) //"Retenção de impostos"
		EndIf

		If lPanelFin
			ACTIVATE MSDIALOG oDlg ON INIT FaMyBar(oDlg,{|| IIf(FA070BtOK(),iIf( IIf( MovBcoBx(cMotBx, .T.),F070VldBco(cBanco,cAgencia,cConta,.T.,.F.), .T. ) ;
					.and. If(cBxDtFin == "2",DtMovFin(dBaixa,,"2"),.T.) .and. PcoVldLan("000004","01","FINA070") .and. iIf(lFA070MDB .and. !lMdbOk,lMdbOk:=ExecBlock("FA070MDB",.F.,.F.) ,.T.) ,;
					(nOpc1 := 1,oDlg:End()),Nil),Nil)},;
					{||(nOpc1 := 0,oDlg:End())},aButtons) CENTERED
		Else
			ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| iIf(FA070BtOK(),iIf( IIf( MovBcoBx(cMotBx, .T.),F070VldBco(cBanco,cAgencia,cConta,.T.,.T.), .T. ) ;
					.and. If(cBxDtFin == "2",DtMovFin(dBaixa,,"2"),.T.) .and. 	PcoVldLan("000004","01","FINA070") .and. iIf(lFA070MDB .and. !lMdbOk,lMdbOk:=ExecBlock("FA070MDB",.F.,.F.) ,.T.) ;
					,IIf( UsaSeqCor(), IIf( FA070Diario(), (nOpc1 := 1,oDlg:End()),Nil), (nOpc1 := 1,oDlg:End()) ) ;
					,Nil),Nil)};
					,{||(nOpc1 := 0,oDlg:End())},,aButtons) CENTERED
		EndIf

		If __lTemMR  .and. __lPropPcc .and. nValrec < __nTotImp
			nImp := Len(aImpos)
			For nW := 1 To nImp
				Do Case
					Case __lPccMR .And. nPis <> nOldPis .And. AllTrim(aImpos[nW,8]) == "PIS" .And. aImpos[nW,9] == "2"
						aImpos[nW,5] := nPis
					Case __lPccMR .And. nCofins <> nOldCofins .And. AllTrim(aImpos[nW,8]) == "COF" .And. aImpos[nW,9] == "2"
						aImpos[nW,5] := nCofins
					Case __lPccMR .And. nCsll <> nOldCsll .And. AllTrim(aImpos[nW,8]) == "CSL" .And. aImpos[nW,9] == "2"
						aImpos[nW,5] := nCsll
					Case __nTotImp <> nOldImp .And.(!(AllTrim(aImpos[nW,8]) == "PIS") .And. !(AllTrim(aImpos[nW,8]) == "COF") .And. !(AllTrim(aImpos[nW,8]) == "CSL"))  .And. aImpos[nW,9] == "2"
						aImpos[nW,5] := __nTotImp
				End Case
			Next nW
		Endif
   		If (nPis+nCofins+nCSLL) <> (nOldPis+nOldCofins+nOldCsll)
	   		//Atualiza valores retido, caso o usuário tenha alterado o valor dos impostos
	   		nVlRetPis := nPis
	   		nVlRetCof := nCofins
	   		nVlRetCsl := nCsll
	   		//Refazendo base de retenção caso ocorra alteração do usuário
			nPisBaseR   := nPis * 100
			nCofBaseR   := nCofins * 100
			nCslBaseR   := nCsll * 100
	   	Endif
  		SetKey(VK_F4,bSetKey)
    Else
    	If FwIsInCallStack("FA450CMP")
			nValOld := nValRec
    	Endif

		//Valores Acessorios
		//ESTRUTURA __aVAAuto
		//__aVAAuto[nLaco][1] = cChaveFK7
		//__aVAAuto[nLaco][2] = Código do VA
		//__aVAAuto[nLaco][3] = Valor do VA
		If lPodeTVA .and. lExistVA
			FKD->( dbSetOrder( 2 ) ) //FKD_FILIAL+FKD_IDDOC+FKD_CODIGO
			nRecSe1 := SE1->(RecNo())

			If Len(__aVAAuto) > 0
				FVAAuto( .T. ) //Indica que, ao ativar o model FINA070VA, os VAs não serão recalculados (pois os valores já vieram na execauto)

				For nLaco := 1 To Len(__aVAAuto)

					cAcaoVA := Posicione( "FKC", 1, FWxFilial("FKC") + __aVAAuto[nLaco][2], "FKC_ACAO" )
					If cAcaoVA == "2" //Se for VA de subtração, então multiplica o valor informado na execauto por -1
						nVaCalc := __aVAAuto[nLaco][3] * -1
					Else
						nVaCalc := __aVAAuto[nLaco][3]
					Endif
					If lFKDID // Proteção campo criado 12.1.25
						aFKDID := FN040VAID( __aVAAuto[nLaco][1], __aVAAuto[nLaco][2], .T. ) // Retorna o recno FKD atual se existir.
						If Len(aFKDID[2]) > 0
							FKD->(DbGoTo(aFKDID[2][1][1]))
							RecLock("FKD",.F.)
								FKD->FKD_VLCALC := nVaCalc
								FKD->FKD_VLINFO := nVaCalc
							FKD->(MsUnlock())
							Loop
						EndIf
					Else
					If FKD->( msSeek( FWxFilial("FKD") + __aVAAuto[nLaco][1] + __aVAAuto[nLaco][2] ) )
						RecLock("FKD",.F.)
							FKD->FKD_VLCALC := nVaCalc
							FKD->FKD_VLINFO := nVaCalc
						FKD->(MsUnlock())
						Loop
					EndIf
				EndIf

						RecLock("FKD",.T.)
							FKD->FKD_FILIAL := xFilial("FKD")
							FKD->FKD_IDDOC  := __aVAAuto[nLaco][1]
							FKD->FKD_CODIGO := __aVAAuto[nLaco][2]
							FKD->FKD_VALOR  := __aVAAuto[nLaco][3]
							FKD->FKD_SALDO  := 0
							FKD->FKD_DTBAIX := CtoD("//")
							FKD->FKD_VLCALC := nVaCalc
							FKD->FKD_VLINFO := nVaCalc
							If lFKDID // Proteção campo criado 12.1.25
								FKD->FKD_IDFKD  := FWUUIDV4()
							EndIf
						FKD->(MsUnlock())
				Next nLaco
			ElseIf lF070Auto
				FVAAuto( .F. ) //Indica que, ao ativar o model FINA070VA, os VAs serão calculados
			Endif

			//Ativa o modelo de dados para calcular os VAs (ou considerar os valores recebidos na execauto)
			cOldVA := ""
			oModelVA := FWLoadModel("FINA070VA")
			oModelVA:SetOperation( MODEL_OPERATION_UPDATE )
			oModelVA:Activate()
			cOldVA  := oModelVA:GetXMLData()
			oModelVa:Deactivate()
			oModelVa:Destroy()
			oModelVa := NIL
			FVAAuto( .F. )

			dbSelectArea("SE1")
			SE1->( dbGoTo(nRecSe1) )

		Endif

		aValidGet:= {}
		If (nT := ascan(aAutoCab,{|x| x[1]='AUTMOTBX'})) > 0
			cMotBx	:=	aAutoCab[nT,2]
			If Len(AllTrim(cMotBx)) == 3
				If (nY := ascan(aMotBx,{|x| SubStr(x,1,3) == AllTrim(cMotBx)})) > 0
					aAutoCab[nT,2] := SubStr(aMotBx[nY],07,10)
					cMotBx := aAutoCab[nT,2]
				EndIf
			EndIf
			If ! lFA070MDB
	 	 		Aadd(aValidGet,{'cMotBx' ,aAutoCab[nT,2],"fa070BDev()",.t.})
	 	 	Else
 	 			Aadd(aValidGet,{'cMotBx' ,aAutoCab[nT,2],"fa070BDev()	.and. ExecBlock('FA070MDB',.F.,.F.)",.t.})
 	 		EndIf
 	 	EndIf
		If (! FN022SITCB(SE1->E1_SITUACA)[3]) .and. MovBcobx(cMotBx, .T.)
			If (nT := ascan(aAutoCab,{|x| x[1]='AUTBANCO'})) > 0
				Aadd(aValidGet,{'cBanco' ,aAutoCab[nT,2],"CarregaSa6(@cBanco,,,.T.)",.t.})
			Endif
			If (nT := ascan(aAutoCab,{|x| x[1]='AUTAGENCIA'}) ) > 0
				Aadd(aValidGet,{'cAgencia' ,aAutoCab[nT,2],"CarregaSa6(@cBanco,@cAgencia,,.T.)",.t.})
			EndIf
			If (nT := ascan(aAutoCab,{|x| x[1]='AUTCONTA'}) ) > 0
				Aadd(aValidGet,{'cConta' ,aAutoCab[nT,2],"CarregaSa6(@cBanco,@cAgencia,@cConta,.T.,,.T.)",.t.})
			EndIf
		EndIF
		If (nT := ascan(aAutoCab,{|x| x[1]='AUTDTBAIXA'}) ) > 0
            Aadd(aValidGet,{'dBaixa' ,aAutoCab[nT,2],"fA070Data(,.F.)",.t.})
            If (AllTrim(SE1->E1_ORIGEM) $ 'L|S|T' .Or. SE1->E1_IDLAN > 0)
                dBaixa := aAutoCab[nT,2]
			EndIf
		EndIf
		If (nT := ascan(aAutoCab,{|x| x[1]='AUTDTCREDITO'}) ) > 0
		   Aadd(aValidGet,{'dDTCredito' ,aAutoCab[nT,2],"(dDtCredito >= dBaixa  .and. Iif(SuperGetMv('MV_BXDTFIN',,'1') == '2', DtMovFin(dDtCredito), .T.)) .or. GetMv('MV_ANTCRED')",.t.})
            If (AllTrim(SE1->E1_ORIGEM) $ 'L|S|T' .Or. SE1->E1_IDLAN > 0)
                dDTCredito := aAutoCab[nT,2]
            EndIf
        EndIf
		If VisualSX3("E5_HISTOR") .AND. (nT := ascan(aAutoCab,{|x| x[1]='AUTHIST'}) ) > 0
			Aadd(aValidGet,{'cHist070' ,aAutoCab[nT,2],"CheckSX3('E5_HISTOR')",.t.})
			If (AllTrim(SE1->E1_ORIGEM) $ 'L|S|T' .Or. SE1->E1_IDLAN > 0)
				cHist070 := aAutoCab[nT,2]
			EndIf
		EndIf

		If (nT := ascan(aAutoCab,{|x| x[1]='AUTACRESC'}) ) > 0
			Aadd(aValidGet,{'nAcresc' ,aAutoCab[nT,2],"fA070Val(nAcresc)",.t.})
		EndIf

		If (nT := ascan(aAutoCab,{|x| x[1]='AUTMULTA'}) ) > 0
			Aadd(aValidGet,{'nMulta' ,aAutoCab[nT,2],"fA070Val(nMulta)",.t.})
		EndIf
		If (nT := ascan(aAutoCab,{|x| x[1]='AUTJUROS'}) ) > 0
			Aadd(aValidGet,{'nJuros' ,aAutoCab[nT,2],"fA070Val(nJuros)",.t.})
		EndIf

		// Template GEM, validacao dos campos especificos do template.
		If lGemInUse
			If (nT := ascan(aAutoCab,{|x| x[1]='AUTCM1'}) ) > 0
				Aadd(aValidGet,{'nCM1' ,aAutoCab[nT,2],"fa070Calc()",.t.})
			EndIf
			If (nT := ascan(aAutoCab,{|x| x[1]='AUTPRORATA'}) ) > 0
				Aadd(aValidGet,{'nProRata' ,aAutoCab[nT,2],"fa070Calc()",.t.})
			EndIf
		EndIf

		If (nT := ascan(aAutoCab,{|x| x[1]='AUTDESCONT'}) ) > 0
			If lGemInUse
				Aadd(aValidGet,{'nDescont' ,aAutoCab[nT,2],"FA070DESC(oDescont) .and. fA070Val(nDescont) .and. (nDescont <= (Round(nCM1+nMulta+nJuros+nVA+nProRata,2)+xMoeda(SE1->E1_SALDO,SE1->E1_MOEDA,nMoedaBco,dBAIXA)))",.t.})
			Else
				Aadd(aValidGet,{'nDescont' ,aAutoCab[nT,2],"FA070DESC(oDescont) .and. fA070Val(nDescont) .and. (nDescont <= Round(nMulta+nJuros+nVA,2)+xMoeda(SE1->E1_SALDO,SE1->E1_MOEDA,nMoedaBco,dBAIXA))",.t.})
			Endif

		EndIf

		If (nT := ascan(aAutoCab,{|x| x[1]='AUTDECRESC'}) ) > 0
		 	Aadd(aValidGet,{'nDecresc' ,aAutoCab[nT,2],"fA070Val(nDecresc)",.t.})
		EndIf

		If SE1->E1_MOEDA > 1  .Or. cPaisLoc<>"BRA"
			If cPaisLoc == "BRA"
				If (nT := ascan(aAutoCab,{|x| x[1]='AUTTXMOEDA'}) ) > 0
					nTxMoeda	:=	aAutoCab[nT,2]
					Aadd(aValidGet,{'nTxMoeda' ,aAutoCab[nT,2],"Fa070Val(0,"+STR(nTxMoeda,17,TamSx3("E2_TXMOEDA")[2])+")",.t.})
				EndIf
			Endif
			If (nT := ascan(aAutoCab,{|x| x[1]='AUTVALREC'}) ) > 0
				Aadd(aValidGet,{'nValRec' ,aAutoCab[nT,2],"Fa070ValVR("+Alltrim(Str(nTxMoeda))+")",.t.})
			EndIf
		Else
			If (nT := ascan(aAutoCab,{|x| x[1]='AUTVALREC'}) ) > 0
				Aadd(aValidGet,{'nValRec' ,aAutoCab[nT,2],".T.",.t.})
			EndIf
		Endif

		nEstOriginal := nValEstrang-(xMoeda(nJuros+nVA+(nCm1+nProRata)+nMulta-nDescont-nOtrga+nAcresc-nDecresc - Iif(lPccBxCr,nPis+nCofins+nCsll,0)-Iif(lIrPjBxCr,nIrrf,0),nMoedaBco,SE1->E1_MOEDA,,,,nTxMoeda))
		FA070CORR(nEstOriginal)

		If !(AllTrim(SE1->E1_ORIGEM) $ 'L|S|T' .Or. SE1->E1_IDLAN > 0)
			If ! SE1->(MsVldGAuto(aValidGet)) // consiste os gets
				Return .f.
			EndIf
		EndIf

		If lF070Auto
			//Se o valor acessório vínculado (FKD) não foi informado na ExecAuto, então a rotina fará o cálculo e nesse trecho irá tratar (subtrair ou somar) o VA no valor recebido.
			If ValType( __AVAAUTO ) <> "A" .Or. Len( __AVAAUTO ) == 0
				nValRec := nValRec + nVA
			EndIf

			If !lMVGlosa
				If lFINA200 .Or. FwIsInCallStack("Fa450cmp") .Or. (AllTrim(SE1->E1_ORIGEM) $ 'S|L|T') // se for retorno do Cnab ou compesação entre carteiras ou baixa oriunda de integração

					// Considera diretamente os valores passados pela EXECAUTO.
					If (nT := ascan(aAutoCab,{|x| x[1]='AUTJUROS'}) ) > 0
						nJuros := Round(NoRound(aAutoCab[nT,2]),2)
					EndIf

					If (nT := ascan(aAutoCab,{|x| x[1]='AUTDESCONT'}) ) > 0
						nDescont := Round(NoRound(aAutoCab[nT,2]),2)
					EndIf

					If (nT := ascan(aAutoCab,{|x| x[1]='AUTMULTA'}) ) > 0
						nMulta := Round(NoRound(aAutoCab[nT,2]),2)
					EndIf

					If (nT := ascan(aAutoCab,{|x| x[1]='AUTACRESC'}) ) > 0
						nAcresc := Round(NoRound(aAutoCab[nT,2]),2)
					EndIf

					If (nT := ascan(aAutoCab,{|x| x[1]='AUTDECRESC'}) ) > 0
						nDecresc := Round(NoRound(aAutoCab[nT,2]),2)
					EndIf

					IF !("FINA040" $ SE1->E1_ORIGEM)
						SC5->(dbSetOrder(1))
						If SC5->(MsSeek(xfilial("SC5")+SE1->E1_PEDIDO))
							lRecIss := (SC5->C5_RECISS == "1" .And. GetNewPar("MV_DESCISS",.F.))
						Else
							lRecIss := (SA1->A1_RECISS == "1" .And. GetNewPar("MV_DESCISS",.F.))
						Endif
					Else
						lRecIss := (SA1->A1_RECISS == "1" .And. GetNewPar("MV_DESCISS",.F.))
					Endif

					If nValRec == SE1->E1_VALOR // Só se for baixa total por Cnab
						nValrec -= SE1->( IIF( !lPccBxCr, SE1->(E1_PIS+E1_COFINS+E1_CSLL), 0 ) + ; //PCC
										  IIF( !lIrPjBxCr, SE1->E1_IRRF, 0 ) + ;				   //IRRF
										  IIF( lRecIss, E1_ISS, 0 ) + E1_INSS )					   //ISS e INSS
					Endif

					If lPccBxCr
						nValrec -= nPis + nCofins + nCsll
						nAuxImpAut += nPis + nCofins + nCsll
					EndIf
					If lIrPjBxCr
						nValrec -= nIrrf
						nAuxImpAut += nIrrf
					EndIf
					If lCalcIssBx
						nValrec -= IIF( lRecIss, SE1->E1_ISS, 0 )
						nAuxImpAut += IIF( lRecIss, SE1->E1_ISS, 0 )
					EndIf

					nValRec += nJuros + nVA - nDescont + nMulta + nAcresc - nDecresc
								
					If (AllTrim(SE1->E1_ORIGEM) $ 'S|L|T') .AND. lAutValRec		// Integração e foi passado valor a ser baixado nValRec (PaymentValue)
						/*
							Intensão é identificar se o valor passado seria para baixa parcial.
							Sendo baixa parcial, considerar o nValRec com o valor passado (PaymentValue)
							Obs: Considerar a possibilidade de assumir como nValRec o que foi mandado no PaymentValue
						*/
						nPos := aScan(aAutoCab,{|x| x[1] == 'AUTVALREC'})
						nAux2 := aAutoCab[nPos,2]	// Valor passado xml
						If nAux2 <= SE1->E1_SALDO + nTotMult + nJuros + nVA - nDescont + nMulta + nAcresc - nDecresc - nAuxImpAut
							nValRec := nAux2
						EndIf

					EndIf

					If (nT := ascan(aAutoCab,{|x| x[1]='AUTVALREC'}) ) > 0
						aAutoCab[nT,2] := Round(NoRound(nValRec,2),2)
					EndIf
				Else
					If !lBq10925 // Baixa Parcial - Liquido
						nOldValRec := nValRec
						nValRec := nValRec - nPis - nCoFins - nCsll - nIrrf

						If nValRec < 0
							nValRec := nOldValRec
						Endif

						If (nT := ascan(aAutoCab,{|x| x[1]='AUTVALREC'}) ) > 0
							aAutoCab[nT,2] := Round(NoRound(nValRec,2),2)
						EndIf
					EndIf
				EndIf
			EndIf
		Endif

		nOpc1 := 1

		// Se o conteudo do campo estiver vazio(zero), se existir o 4o. elemento no array de campos
		// e o mesmo retornar .T., assume os valores que o usuario enviou no array da rotina automatica
		If (nT := ascan(aAutoCab,{|x| x[1]='AUTJUROS'}) ) > 0
			If Empty(aAutoCab[nT,2]) .And. Len(aAutoCab[nT]) >= 4 .And. aAutoCab[nT][4]
				nJuros := aAutoCab[nT,2]
				fa070val(nJuros,nTxMoeda,.F.)
			Endif
		EndIf
		If (nT := ascan(aAutoCab,{|x| x[1]='AUTMULTA'}) ) > 0
			If Empty(aAutoCab[nT,2]) .And. Len(aAutoCab[nT]) >= 4 .And. aAutoCab[nT][4]
				nMulta := aAutoCab[nT,2]
				fa070val(nMulta,nTxMoeda,.F.)
			Endif
		EndIf
		If (nT := ascan(aAutoCab,{|x| x[1]='AUTDESCONT'}) ) > 0
			If Empty(aAutoCab[nT,2]) .And. Len(aAutoCab[nT]) >= 4 .And. aAutoCab[nT][4]
				nDescont := aAutoCab[nT,2]
				fa070val(nDescont,nTxMoeda,.F.)
			Endif
		EndIf

		// Template GEM, validacao dos campos especificos do template.
		If lGemInUse
			If (nT := ascan(aAutoCab,{|x| x[1]='AUTCM1'}) ) > 0
				If Empty(aAutoCab[nT,2]) .And. Len(aAutoCab[nT]) >= 4 .And. aAutoCab[nT][4]
					nCM1 := aAutoCab[nT,2]
					fa070val(nCM1)
				EndIf
			EndIf
			If (nT := ascan(aAutoCab,{|x| x[1]='AUTPRORATA'}) ) > 0
				If Empty(aAutoCab[nT,2]) .And. Len(aAutoCab[nT]) >= 4 .And. aAutoCab[nT][4]
					nProRata := aAutoCab[nT,2]
					fa070val(nProRata)
				EndIf
			EndIf
		EndIf
	EndIf

	//Define a variável estática que indica se a tela de baixa foi cancelada (controle de processo com integração Protheus x TIN)
	__lCancTBx := ( nOpc1 == 0 )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada para permitir um controle do total de ³
	//³ cheques informados com o total a ser baixado           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lF070TCTR .And. nOpc1 > 0 .And. nSomaCheq > 0
	   nOpc1 := ExecBlock("F070TCTR",.F.,.F.,{nOpc1,nSomaCheq,nValRec})
	EndIf

	If nOpc1 == 0
		nErro ++
	EndIF

	If !lF070Auto .And. nOpc1 == 0 .And. AllTrim(SE1->E1_ORIGEM)=="FINI055"
		If FWHasEAI("FINI070A",.T.,,.T.)
			SetRotInteg('FINI070A')
			MsgRun ( STR0234+" "+rTrim(SE1->E1_NUM)+ " " +STR0235,STR0236,{||aRetMsg:=FinI070A()} )//"Atualizando título" "a valor presente..." Valor Presente
			If ValType(aRetMSg[1]) <> "U" .And. !aRetMsg[1]
				If ValType(aRetMsg[2]) <> "U" .And. aRetMsg[2] <> Nil .and. !Empty(aRetMsg[2])
					MsgAlert(STR0237 + CRLF + aRetMsg[2])//"Foi realizada uma tentativa de atualização do título, e foi retornada a seguinte mensagem:"
				Else
					MsgAlert(STR0238 + " " + Rtrim(SE1->E1_NUM)+". "+STR0239)//"Ocorreu um erro inesperado na tentativa de atualização do título " "Verifique as configurações da integração  e tente novamente."
				EndIf
			ElseIf Valtype(aRetMSg[1]) == "U"
				MsgAlert(STR0238 + " " + Rtrim(SE1->E1_NUM) + ". " + STR0239)//"Ocorreu um erro inesperado na tentativa de atualização do título " "Verifique as configurações da integração  e tente novamente."
			Endif
			SetRotInteg('FINA070')
		Else
			MsgAlert(STR0240)//"Para realizar as baixas de integrações como TIN, é necessário cadastrar o adapter da rotina FINI070A - UPDATECONTRACTPARCEL."
		EndIf
	Endif

	If SE1->( Deleted() )
		nOpc1 := 0
		Help( " " , 1 , "RECNO" )
		Return .F.
	EndIf

	If nErro > 2
		nErro :=0
		If Abandona()
			MsUnlock()
			Return Nil
		Endif
	Endif
	If nOpc1 == 1

		If nCM1 > 0
			nJuros += nCM1
		Else
			nDescont -= nCM1
		EndIf

		If nProRata > 0
			nJuros += nProRata
		Else
			nDescont -= nProRata
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se dados bancários estão OK                                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !FwIsInCallStack("FA450CMP")
			If MovBcobx(cMotBx, .T.) .and. !CarregaSA6(@cBanco,@cAgencia,@cConta,.T.,,.T.)
				// Se nao for baixa por rotina automatica, volta para o usuario corrigir os
				// dados, senao abandona a baixa.
				If l070Auto .or. ! lF070Auto
					loop
				Else
					lRet := .F.
					Exit
				Endif
			EndIf
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se nao foi alterado o banco quando for tit. em desconto.     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( FN022SITCB(SE1->E1_SITUACA)[3] .And.;
			cBanco+cAgencia+cConta!=SE1->E1_PORTADO+SE1->E1_AGEDEP+SE1->E1_CONTA )
			Help(" ",1,"FINA070BCO")
			// Se nao for baixa por rotina automatica, volta para o usuario corrigir os
			// dados, senao abandona a baixa.
			If l070Auto .or. ! lF070Auto
				loop
			Else
				lRet := .F.
				Exit
			Endif
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se valor da baixa ‚ maior que o valor m ximo a receber       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		If !( lFINA200 .And. lREC2TIT ) .and. !FwIsInCallStack("FA450CMP") // Tratamento do Parâmeto MV_REC2TIT - Geração de RECANT(RA) via RETORNO CNAB.
			If cPaisLoc<>"BRA"
				nValRecL := Round(nValRec,2)
			EndIf
            If !lF070Auto
                If SE1->E1_MOEDA == 1 .and. Str(Iif(cPaisLoc<>"BRA",nValRecL,nValRec),17,2) > Str(Round(xMoeda(SE1->E1_SALDO-nTotAbat + Iif(SE1->E1_JUROS > 0,nMulta,nTotMult),nMoedaBco,SE1->E1_MOEDA,dBaixa,7,nTxMoeda),2)+Round(Iif(Alltrim(SE1->E1_ORIGEM) == "FINA074",0,nJuros+nVA+nMulta-nDescont-nOtrga+nTolerPg+nAcresc-nDecresc),2),17,2)
					Help(" ",1,"ValorMaior")
                    
                    If ( SE1->E1_MOEDA == 1 )
						// Se nao for baixa por rotina automatica, volta para o usuario corrigir os
						// dados, senao abandona a baixa.
						If l070Auto .or. ! lF070Auto
							nIrrf := 0
							loop
						Else
							lRet := .F.
							Exit
						Endif
					Else
						loop
					EndIf
                ElseIf SE1->E1_MOEDA > 1 .and. Str(xMoeda(nValEstrang, SE1->E1_MOEDA, nMoedaBco,dbaixa,7,nTxMoeda),17,2) > Str(Round(xMoeda(SE1->E1_SALDO-nTotAbat + Iif(SE1->E1_JUROS > 0,nMulta,nTotMult),SE1->E1_MOEDA,nMoedaBco,dBaixa,7,nTxMoeda),2)+Round(Iif(Alltrim(SE1->E1_ORIGEM) == "FINA074",0,nJuros+nVA+nMulta-nDescont-nOtrga+nTolerPg+nAcresc-nDecresc),2),17,2)
                    Help(" ",1,"ValorMaior")
                    loop
                EndIf
			EndIf
		EndIf

		// Se controla saldo na compensacao do cheque
		// A primeira baixa tem que ter no mínimo o valor dos cheques, pois esses são completamente baixados
		// pelo sistema.
		If FwIsInCallStack("FA450CMP")
			nValRec:= nValOld
		EndIf
		If lSaldoChq
			If	!(SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG)
				// Soma o total recebido em cheque
				nSomaCheq := SomaCheqCr(.F.,SE1->E1_PREFIXO, SE1->E1_NUM, SE1->E1_PARCELA, SE1->E1_TIPO, SE1->E1_CLIENTE)
				If nValRec < nSomaCheq
			   		Aviso(STR0219,STR0222 + STR0223 ,{STR0221}) //"Não é possível realizar baixa de valor inferior aos cheques amarrados quando MV_SLDBXCR = 'C'.""Nessa configuração, os cheques serão sempre baixados primeiro."
			   		lRet := .F.
			   		exit
				EndIf
			EndIf
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Valida se e baixa parcial, quando e titulo do BIBLIOS³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
        If alltrim(Upper(SE1->E1_ORIGEM)) = 'L' .and. lRMBibli
	        If nValRec < (SE1->E1_VALOR - SE1->E1_DECRESC + E1_ACRESC - nDescont + nMulta + nJuros + nVA )
		   		Aviso(STR0219,STR0220,{STR0221}) //"Não é possivel realizar a baixa parcial de um título nativo do RM Biblios"
		   		lRet := .F.
		   		exit
			endif
        endif

	   //Baixa de titulo em moeda forte com a cotacao da moeda igual a zero !!
		If SE1->E1_MOEDA > 1 .and. RECMOEDA(dBaixa,cMoeda) == 0 .and. nTxMoeda == 0 .and. ;
				nValRec == 0 .and. nValEstrang == 0
			Help(" ",1,"TX_MOEDA",, STR0168,1,0)	//"Nao sera possivel baixar este titulo pois a cotacao da moeda do titulo na data da baixa é igual a zero."
			// Se nao for baixa por rotina automatica, volta para o usuario corrigir os
			// dados, senao abandona a baixa.
			If l070Auto .or. ! lF070Auto
				loop
			Else
				lRet := .F.
				Exit
			Endif
		Endif
		iF FwIsInCallStack("FA450CMP")
			nValRec := nValOld
		Endif
		If nValRec < (nJuros + nVA + nAcresc)
			nValPadrao := nValRec-(nJuros + nVA+Iif(SE1->E1_MOEDA<=1,nCM,0)+nMulta-nDescont-nDecresc)
			If nValRec < nAcresc .and. nValRec <> 0
				nAcresc		:= nValRec
			Endif
		Else
			nValPadrao := nValRec-(nJuros + nVA+Iif(SE1->E1_MOEDA<=1,nCM,0)+nMulta-nDescont+nAcresc-nDecresc) 
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se saldo estava em outra moeda, caso estiver, converte valor ³
		//³recebido pela taxa diaria da moeda                                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nOpt  := IIF(Str(nValPadrao,14,2)=Str(xMoeda(SE1->E1_SALDO-nTotAbat,SE1->E1_MOEDA,nMoedaBco,dBaixa,,nTxMoeda),14,2),1,2)
	Else
		lRet := .F.
		MsUnlock()
		//Se os valores dos impostos de abatimentos foram recalculados e se a baixa
		//do titulo nao for confirmada, restauro os valores calculados pelo sistema
		If lAlterImp

			//Guardo os valores "nOld" para retornar apos calculos
			nAntPis   	:= nOldPis
			nAntCofins	:= nOldCofins   
			nAntCsll  	:= nOldCsll
			nAntIrrf  	:= nOldIrrf
			nAntIss	   := nOldIss
			nAntInss  	:= nOldInss

			nPisAlter := SE1->E1_PIS
			nCofAlter := SE1->E1_COFINS
			nCslAlter := SE1->E1_CSLL
			nIrfAlter := SE1->E1_IRRF
			nIssAlter := SE1->E1_ISS
			nInsAlter := SE1->E1_INSS

			//Altero os valores somente para a funcao considerar o calculo
			//pois os valores de SE1-> e nOld precisam ser diferentes
			RecLock("SE1")
			If !lPccBxCr
				SE1->E1_PIS    := nOldPis
				SE1->E1_COFINS := nOldCofins
				SE1->E1_CSLL   := nOldCsll
			EndIf
			If !lIrPjBxCr
				SE1->E1_IRRF   := nOldIrrf
			EndIf
			SE1->E1_ISS	 := nOldIss
			SE1->E1_INSS   := nOldInss
			SE1->(MsUnlock())

			nOldPis    := nPisAlter
			nOldCofins := nCofAlter
			nOldCsll   := nCslAlter
			nOldIrrf	 := nIrfAlter
			nOldIss	 := nIssAlter
			nOldInss	 := nInsAlter

			//Faz a alteração dos valores
			FA040AxAlt(cAlias,lAlterImp)

			//Restauro os valores para nao gerar problemas em novos calculos
			nOldPis    := nAntPis
			nOldCofins := nAntCofins
			nOldCsll   := nAntCsll
			nOldIrrf		:= nAntIrrf
			nOldIss		:= nAntIss
			nOldInss		:= nAntInss

			//Se o valor total for menor que o valor minimo de retenção
			If  !lPccBxCr .and. (aDadosRet[1] + nValRec) <= nVlMinImp
				RecLock("SE1")
				SE1->E1_SABTPIS	+= If(SE1->E1_SABTPIS >= 0 ,nOldPis,0)
				SE1->E1_SABTCOF	+= If(SE1->E1_SABTCOF >= 0 ,nOldCofins,0)
				SE1->E1_SABTCSL	+= If(SE1->E1_SABTCSL >= 0 ,nOldCsll,0)
				SE1->E1_PIS			:= SE1->E1_SABTPIS
				SE1->E1_COFINS		:= SE1->E1_SABTCOF
				SE1->E1_CSLL		:= SE1->E1_SABTCSL
				SE1->(MsUnlock())
			Endif
		EndIf
		Exit
	Endif
	If Empty( cMotBx )
		cMotBx	:= aDescMotBx[1]	//Motivo das baixas
	Endif
	IF nOpc1 == 1

		 If lFA070ACR
		 	nAux := ExecBlock("FA070ACR",.F.,.F.,{nDecrVlr})
		 	If Valtype(nAux) == "N"
            	nDecresc := nAux
    		EndIf
     	 Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se data da baixa e valida                                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF (dBaixa < SE1->E1_EMISSAO .OR. dBaixa > dDataBase) .and. !lAntCred
			Help( " ", 1, "DATAERR" )
			// Se nao for baixa por rotina automatica, volta para o usuario corrigir os
			// dados, senao abandona a baixa.
			If l070Auto .or. ! lF070Auto
				loop
			Else
				lRet := .F.
				Exit
			Endif
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se modalidade do SPB é valida.									    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lSpbInUse
			cModSpb := Substr(cModSpb,1,1)
			IF !(SpbTipo("SE1",cModSpb,SE1->E1_TIPO))
				// Se nao for baixa por rotina automatica, volta para o usuario corrigir os
				// dados, senao abandona a baixa.
				If l070Auto .or. ! lF070Auto
					loop
				Else
					lRet := .F.
					Exit
				Endif
			Endif
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se permite ou nao baixar o titulo com o valor recebido menor ³
		//³que a soma dos valores de juros, multa e desconto                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !F070VldRec()
			If l070Auto .or. !lF070Auto
				loop
			Else
				lRet := .F.
				Exit
			Endif
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ponto de Entrada de Template para Confirmacao da Baixa       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lTFa070Tit
			lRet := ExecTemplate("FA070TIT",.F.,.F.,{nParciais})
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ponto de Entrada para Confirmacao da Baixa                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lFa070Tit
			lRet := ExecBlock("FA070TIT",.F.,.F.,{nParciais})
			If !lRet
				// Se nao for baixa por rotina automatica, volta para o usuario corrigir os dados, senao abandona a baixa.
				If l070Auto .or. !lF070Auto
					loop
				Else
					Exit
				Endif
			Endif
		Endif

		If !lRet
			Return lRet
		EndIf

		dbSelectArea("SE1")
		IF Empty(dBaixa) .or. (nValRec < 0 ) .or. Empty(cMotBx)
			Help(" ",1,"FA070INV")
			// Se nao for baixa por rotina automatica, volta para o usuario corrigir os
			// dados, senao abandona a baixa.
			If l070Auto .or. ! lF070Auto
				loop
			Else
				lRet := .F.
				Exit
			Endif
		EndIF

		// Aqui neste ponto a variavel nJuros esta somada com o valor de nCM1
		// e da Prorata se esta for positiva, se for negativa
		// a prorata eh somada a nDescont

        IF nModulo == 43 //TMS
			If nDescont != Round(nMulta+nJuros + nVA+xMoeda((SE1->E1_SALDO+SE1->E1_ACRESC-SE1->E1_DECRESC),SE1->E1_MOEDA,1,dBaixa,2,nTxMoeda),2)
				If (nTotAbat=0.and.nValRec=0.and.nDescont==0).or.;
					(nValRec=0.and.nTotAbat!=SE1->E1_SALDO .and.;
					 nDescont!=Round(nMulta+nJuros + nVA+xMoeda(SE1->E1_SALDO-nTotAbat,SE1->E1_MOEDA,1,dBaixa,3,nTxMoeda),2)+nAcresc-nDecresc)
					Help(" ",1,"FA070INV")
					// Se nao for baixa por rotina automatica, volta para o usuario corrigir os
					// dados, senao abandona a baixa.
					If l070Auto .or. ! lF070Auto
						loop
					Else
						lRet := .F.
						Exit
					Endif
				EndIf
			EndIF
	    Else
			If nDescont != Round(nMulta+nJuros + nVA+xMoeda((SE1->E1_SALDO+SE1->E1_ACRESC-(SE1->E1_DECRESC+nDecrescF+nDecrVlr)),SE1->E1_MOEDA,1,dBaixa,2,nTxMoeda),2) .And.;
				(!(AllTrim(SE1->E1_ORIGEM) $ "S|L|T") .And. AllTrim(cAuxMBx) <> "BOL")
				If (nTotAbat=0.and.nValRec=0.and.nDescont==0).and.;
					(nValRec=0.and.nTotAbat!=SE1->E1_SALDO .and.nPIS==0.and.nCOFINS==0.and.nCSLL==0.and.;
					nDescont!=Round(nMulta+nJuros + nVA+xMoeda(SE1->E1_SALDO-nTotAbat,SE1->E1_MOEDA,1,dBaixa,3,nTxMoeda),2)+nAcresc-nDecresc)
					Help(" ",1,"FA070INV")
					// Se nao for baixa por rotina automatica, volta para o usuario corrigir os
					// dados, senao abandona a baixa.
					If l070Auto .or. ! lF070Auto
						loop
					Else
						lRet := .F.
						Exit
					Endif
				Else
					If (nValRec=0.and.nDescont==0).and.;
					(nValRec=0.and.nTotAbat!=SE1->E1_SALDO .and.nPIS==0.and.nCOFINS==0.and.nCSLL==0.and.;
					nDescont!=Round(nMulta+nJuros + nVA+xMoeda(SE1->E1_SALDO-nTotAbat,SE1->E1_MOEDA,1,dBaixa,3,nTxMoeda),2)+nAcresc-nDecresc)
						If MsgYESNO( STR0247 + chr(10) + chr(13) + ;
							STR0248, STR0035 )
							loop
						Else
							lRet := .F.
							Exit
						Endif
					EndIf
				EndIf
			EndIF
	    EndIf

		If !FA070ValMo()
			// Se nao for baixa por rotina automatica, volta para o usuario corrigir os
			// dados, senao abandona a baixa.
			If l070Auto .or. ! lF070Auto
				loop
			Else
				lRet := .F.
				Exit
			Endif
		EndIF

		// Chamada a função para atualizar as tabelas do AGRO na baixa do título.
		If !lF070Auto .and. SuperGetMv("MV_AGRORI",,.F.) .and. SuperGetMv("MV_SIGAAGR",,.F.)
			OGC120BXNF(nOpcx, nValRec)
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Soma nos totalizadores, exceto se a situa‡„o do t¡tulo for:     ³
		//³2 - Cobran‡a Descontada   ou   7 - Cobranca Cau‡„o Descontada   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF !(FN022SITCB(SE1->E1_SITUACA)[3])
			nTotAGer  += nValRec
			nTotADesc += nDescont+nDecresc
			nTotAMul  += nMulta
			nTotAJur  += nJuros + nVA + nAcresc
			nTotADesp += Iif(SE1->E1_MOEDA<=1,nCM,0)
		Endif
		// verifica se nao esta utilizando rotina automatica para poder gerar os lanctos contabeis
		cPadrao   := fA070Pad()
		lPadrao   := VerPadrao(cPadrao)

	  	IF l070Auto .or. ! lF070Auto
			// Verifica se esta utilizando multiplas naturezas
			// E chama a rotina para distribuir o valor entre as naturezas
			If MV_MULNATR .and. lMultNat
				MultNatB("SE1",.F.,STR(mv_par07,1),@lOk,@aColsSEV,@lMultNat)
			Endif
		ElseIf __lRatAut
			If MV_MULNATR
				lMultNat := .T.
				MultNatB("SE1",.F.,'1',@lOk,@aColsSEV,@lMultNat,.T.)
			Endif
		Endif
		
		If lF070Auto .And. MV_MULNATR .And. len(aRatAut) > 0
			If !MultNatB("SE1",.F.,'1',@lOk,@aColsSEV,@lMultNat,.T.,aRatAut)
				lRet := .F.
				//Se existir temporario para rateio c. custo deleta
				If Select("SEZTMP") > 0
					FINXDETMP()
				Endif
				Exit	
			EndIf
		EndIf

       	If nModulo == 12  // SIGALOJA Não atualiza saldo do cliente padrão
			If AllTrim(SE1->E1_CLIENTE) + AllTrim(SE1->E1_LOJA) == AllTrim(SuperGetMv("MV_CLIPAD",,"")) + AllTrim(SuperGetMv("MV_LOJAPAD",,""))
				lBloqSa1 := .F.
			EndIf
		EndIf

       	If lTravaSa1
			lBloqSa1 := ExecBlock("F070TRAVA",.f.,.f.)
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Inicializa a gravacao dos lancamentos do SIGAPCO          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		PcoIniLan("000004")

		If  lOracle .and. Iif(mv_par01==1,.T.,.F.) .and. Iif(MV_PAR04==1,.T.,.F.)
			Private aAltera		:= {}
			Private aHeader		:= {}
			CtbCrTmpBD()
		EndIF

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Inicio da prote‡„o via TTS                                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Begin Transaction
			If lRMClass .And. SE1->E1_IDLAN != 0
				If FWHasEAI("FINI070A",.T.,,.T.)
					SetRotInteg('FINI070A')
					aRetMsg := FinI070A()
					If ValType(aRetMSg[1]) <> "U" .And. !aRetMsg[1]
						If ValType(aRetMsg[2]) <> "U" .And. aRetMsg[2] <> Nil .and. !Empty(aRetMsg[2])
							MsgAlert(STR0237 + CRLF + aRetMsg[2])//"Foi realizada uma tentativa de atualização do título, e foi retornada a seguinte mensagem:"
						Else
							MsgAlert(STR0238 + " " + Rtrim(SE1->E1_NUM)+". "+STR0239)//"Ocorreu um erro inesperado na tentativa de atualização do título " "Verifique as configurações da integração  e tente novamente."
						EndIf
					ElseIf Valtype(aRetMSg[1]) == "U"
						MsgAlert(STR0238 + " " + Rtrim(SE1->E1_NUM) + ". " + STR0239)//"Ocorreu um erro inesperado na tentativa de atualização do título " "Verifique as configurações da integração  e tente novamente."
					Endif
					SetRotInteg('FINA070')
				Else
					MsgAlert(STR0240)//"Para realizar as baixas de integrações como TIN, é necessário cadastrar o adapter da rotina FINI070A - UPDATECONTRACTPARCEL."
				EndIf
			EndIf

			lJuros  := IIF( mv_par05 == 1, .T., .F. )

			Aadd(aHdlPrv,{nHdlPrv,cPadrao,aFlagCTB,cArquivo})

			If !l070Auto
				If lF070Auto .And. len(aAutoCab) > 0
					nPos := aScan(aAutoCab,{|x| x[1] == 'AUTVALREC'})
					If nPos > 0
						nValrec := aAutoCab[nPos,2]
					EndIf
				EndIf
			EndIf
			iF FwIsInCallStack("FA450CMP")
				nValRec := nValOld
			Endif
			lSaveState := ALTERA

			//-----------------------------------------------------------
			//Valores Acessorios.
			//-----------------------------------------------------------
			//Se for execauto, primeiro chama as funções de baixa e somente depois chama a função FAtuFKDBx, para atualização da data de baixa do VA na FKD, evitando gravação duplicada de FK6 quando informadas 2 baixas parciais via integração com VA de aplicação única
			If !l070Auto .And. lF070Auto

				lBaixou := fA070Grv(lPadrao,Nil,NIl,Nil,lFINA200,dDtCredito,lJuros,Nil,Nil,nTxMoeda,mv_par08==1,aSeqSe5,aHdlPrv,lBloqSa1,lMultNat,, aImpos,__lPccMR,__lIrfMR,__lInsMR,__lIssMR,__lGlosaMr,__lImpMR) //Nil=Arquivo Cnab

				If lPodeTVA .and. lExistVA
					FAtuFKDBx()
				Endif

			Else

				If lPodeTVA .and. lExistVA
					FAtuFKDBx()
				Endif

				lBaixou := fA070Grv(lPadrao,Nil,NIl,Nil,lFINA200,dDtCredito,lJuros,Nil,Nil,nTxMoeda,mv_par08==1,aSeqSe5,aHdlPrv,lBloqSa1,lMultNat,, aImpos,__lPccMR,__lIrfMR,__lInsMR,__lIssMR,__lGlosaMr,__lImpMR) //Nil=Arquivo Cnab

			Endif

			If lFINA200
				lBAIXCNAB := lBaixou
			EndIf
			ALTERA := lSaveState
			nHdlPrv	:= aHdlPrv[1][1]

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava os lancamentos nas contas orcamentarias SIGAPCO    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			F070PcoDet()

			// Se nao for baixa por rotina automatica, chama a rotina de contabilizacao
		  	//-----
		  	//Caso o o executo esteja com a opção de ratear a baixa poderá ser rateada com a replica do rateio da inclusão
		  	IF l070Auto .or. ! lF070Auto
				// Verifica se esta utilizando multiplas naturezas
				If MV_MULNATR .and. lMultNat .and. lOk .And. ( AllTrim(SE1->E1_TIPO) <> "RA" )
					MultNatC("SE1",@nHdlPrv,@nTotal,@cArquivo,lContabiliza,.F.,STR(mv_par07,1),,lOk,aColsSEV,lBaixou,aGrvLctPco)
				Endif

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Ponto de entrada antes da contabilizacao.			  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lF070ACONT
					ExecBlock("F070ACONT",.F.,.F.)
				EndIf

				If lBaixou
		  			GravaChqCR(SE5->E5_SEQ,"FINA070",,aSeqSe5,lBaixou,aFormPg) // Grava os cheques no SEF

					//Monta o Array para impressao do Recibo
		  			aAdd(aRelTit, {	SE1->E1_NUM				,;	//01-Nro do Titulo
							       	SE1->E1_PREFIXO			,;	//02-Prefixo
							       	SE1->E1_PARCELA			,;	//03-Parcela
							       	SE1->E1_TIPO 			,;	//04-Tipo
							       	SE1->E1_CLIENTE			,;	//05-Cliente
							       	SE1->E1_LOJA			,;	//06-Loja
							       	Dtos(SE1->E1_EMISSAO)	,;	//07-Emissao
							       	Dtos(SE1->E1_VENCTO)	,;	//08-Vencimento
							       	SE1->E1_VLCRUZ			,;	//09-Valor Original
							       	SE1->E1_SALDO			,;	//10-Saldo
							       	SE1->E1_MULTA			,;	//11-Multa
							       	SE1->E1_JUROS			,;	//12-Juros
							       	SE1->E1_DESCONT			,;	//13-Desconto
							       	SE1->E1_VALLIQ			})	//14-Valor Recebido
		  		Endif
		  	ElseIf __lRatAut .Or. len(aColsSEV) > 0
					// Verifica se esta utilizando multiplas naturezas
				If MV_MULNATR .and. lOk .And. ( AllTrim(SE1->E1_TIPO) <> "RA" )
					lMultNat := .T.
					MultNatC("SE1",@nHdlPrv,@nTotal,@cArquivo,lContabiliza,.F.,'1',,lOk,aColsSEV,lBaixou,aGrvLctPco)
				Endif
			Endif

					/*
			Atualiza o status do titulo no SERASA */
			If cPaisLoc == "BRA"
				If SE1->E1_SALDO <= 0
					cChaveTit := xFilial("SE1") + "|" +;
								SE1->E1_PREFIXO + "|" +;
								SE1->E1_NUM		+ "|" +;
								SE1->E1_PARCELA + "|" +;
								SE1->E1_TIPO	+ "|" +;
								SE1->E1_CLIENTE + "|" +;
								SE1->E1_LOJA
					cChaveFK7 := FINGRVFK7("SE1",cChaveTit)
					F770BxRen("1",TrazCodMot(cMotBx),cChaveFK7)
					dbSelectArea("SE1")
				Endif
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Finaliza a gravacao dos lancamentos do SIGAPCO ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			PcoFinLan("000004")

			If ChqMotBx( cMotBx ) // Verifica se Motivo de baixa gera cheque
				If mv_par08 == 1  // Verifica se o Parâmetro "Gera Cheque para Adiantamento" = Sim
					lGerChqAdt := .T.
				Else
					lGerChqAdt := .F.
				EndIf
			Else
				lGerChqAdt := .F.
			EndIf

			cTipoOr		:= SE1->E1_TIPO

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Caso seja baixa de adiantamento, dever  ser estornado saldo  ³
			//³ banc rio. Apenas Baixa que gere movimentacao bancaria		  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG
				If (MovBcoBx(cMotBx, .T.) .And. !lGerChqAdt) .Or. cAuxMBx == "TRF"
					AtuSalBco( cBanco, cAgencia, cConta, dBaixa, nValRec, "-" )
				Endif

				fa070Adiant( lPadrao, lContabiliza, IIF(cMotBx == "CEC", .T.,lGerChqAdt), @aBaixas, dDtCredito , nTxMoeda, lMultNat )

				// Verifica se esta utilizando multiplas naturezas e grava o flag de rateio no SE1
				If MV_MULNATR .and. lMultNat
					MultNatC("SE1",@nHdlPrv,@nTotal,@cArquivo,lContabiliza,.F.,STR(mv_par07,1),,lOk,aColsSEV,lBaixou,aGrvLctPco)
					If !Empty(SE5->E5_SEQ) .And. SE1->E1_MULTNAT <> "1"
						RecLock("SE1",.F.)
						SE1->E1_MULTNAT := "1"
						SE1->(MsUnlock())
					Endif
				Endif

				If cPaisLoc == "COL"
					If FindFunction("FinProcITF") .And. FinProcITF( SE5->( Recno() ),1 ) .and. cTipoOr=='RA '
						FinProcITF( SE5->( Recno() ), 3, , .F.,, )
					EndIf
				EndIf
			EndIf

			IF lPadrao .and. lContabiliza .and. lBaixou
				If nHdlPrv <= 0
					nHdlPrv		:= HeadProva(cLote,"FINA070",Substr(cUsuario,7,6),@cArquivo)
				EndIf

				VALOR			:= SE1->E1_VALLIQ
				ABATIMENTO	:= Round(NoRound(xMoeda(nTotAbat,SE1->E1_MOEDA,nMoedaBco,dBaixa,3,nTxMoeda),3),2)

				If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
					aAdd( aFlagCTB, {"E5_LA", "S", "SE5", SE5->( Recno() ), 0, 0, 0} )
				Endif
				nTotal += DetProva( nHdlPrv, cPadrao, "FINA070", cLote, /*nLinha*/, /*lExecuta*/,;
				                    /*cCriterio*/, /*lRateio*/, /*cChaveBusca*/, /*aCT5*/,;
				                    /*lPosiciona*/, @aFlagCTB, /*aTabRecOri*/, /*aDadosProva*/ )

				If lF070CTB
					nTotal += ExecBlock("F070CTB",.F.,.F.,{cPadrao,nHdlPrv})
				Endif
			Endif
			IF lPadrao .and. lContabiliza .and. lBaixou
				//-- Se for rotina automatica força exibir mensagens na tela, pois mesmo quando não exibe os lançametnos, a tela
				//-- sera exibida caso ocorram erros nos lançamentos padronizados
				If lF070Auto
					lSetAuto := _SetAutoMode(.F.)
					lSetHelp := HelpInDark(.F.)
					If Type('lMSHelpAuto') == 'L'
						lMSHelpAuto := !lMSHelpAuto
					EndIf
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Localizacao Portugal - Gera dados para diario contabil ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If UsaSeqCor()
					AAdd( aDiario, {"SE5",SE5->(Recno()),cCodDiario,"E5_NODIA","E5_DIACTB"} )
				Else
					aDiario := {}
				EndIf

				RodaProva(nHdlPrv,nTotal)

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Envia para Lan‡amento Cont bil                         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cA100Incl( cArquivo, nHdlPrv, 3 /*nOpcx*/, cLote, Iif(mv_par01==1,.T.,.F.) /*lDigita*/,;
				           Iif(mv_par02==1,.T.,.F.) /*lAglut*/,;
				           /*cOnLine*/, /*dData*/, /*dReproc*/, @aFlagCTB, /*aDadosProva*/, aDiario )
				aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento

				If lF070Auto
					HelpInDark(lSetHelp)
					_SetAutoMode(lSetAuto)
					If Type('lMSHelpAuto') == 'L'
						lMSHelpAuto := !lMSHelpAuto
					EndIf
				EndIf
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Trecho incluido para integração e-commerce          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lBaixou
				If  LJ861EC01(SE1->E1_NUM, SE1->E1_PREFIXO, .T./*PrecisaTerPedido*/, SE1->E1_FILORIG)
					LJ861EC02(SE1->E1_NUM, SE1->E1_PREFIXO, SE1->E1_FILORIG)
				EndIf
			EndIf

			// Integração SIGAPFS x SIGAFIN
			If lBaixou .And. FindFunction("JGrvBaixa")
				lRet := JGrvBaixa(SE1->(Recno()), SE5->(Recno()))

				If !lRet
					DisarmTransaction()
					Return .F.
				EndIf
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Final  da prote‡„o via TTS                                   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !lFini055 .and. FWHasEAI("FINA070",.T.,,.T.) .and. SE1->E1_PREFIXO <> cPrefRM
				cIntegSeq := SE5->E5_SEQ//utilizada na integdef. Nao transformar em local.
				aRetInteg := FwIntegDef( 'FINA070' )
				//Se der erro no envio da integração, então faz rollback e apresenta mensagem em tela para o usuário
				If ValType(aRetInteg) == "A" .AND. Len(aRetInteg) >= 2 .AND. !aRetInteg[1]
					If ! IsBlind()
						Help( ,, "FINA070INTEG",, STR0238 + ": " + STR0006 + " - " + AllTrim(DecodeUTF8(aRetInteg[2])), 1, 0,,,,,, {STR0239} ) //"Ocorreu um erro inesperado na tentativa de atualização do título: Baixa de Títulos ", "Verifique se a integração está configurada corretamente."
					Endif
					DisarmTransaction()
					Return .F.
				Endif
			Endif

			If !("FINA630" $ FunName())
				///numbor
				aAlt := {}
			    aadd( aAlt,{ STR0259,'','','',STR0260 +  Alltrim(Transform(SE5->E5_VALOR,PesqPict("SE5","E5_VALOR"))) })
				///chamada da Função que cria o Histórico de Cobrança
				DbSelectArea("SE1")
				FinaCONC(aAlt)
			endif

		End Transaction

		If !lF070Auto .And. AllTrim(SE1->E1_ORIGEM)=="FINI055"
			If FWHasEAI("FINI070A",.T.,,.T.)
				SetRotInteg('FINI070A')
				MsgRun ( STR0234+" "+rTrim(SE1->E1_NUM)+ " " +STR0235,STR0236,{||aRetMsg:=FinI070A()} )//"Atualizando título" "a valor presente..." Valor Presente
				If ValType(aRetMSg[1]) <> "U" .And. !aRetMsg[1]
					If ValType(aRetMsg[2]) <> "U" .And. aRetMsg[2] <> Nil .and. !Empty(aRetMsg[2])
						MsgAlert(STR0237 + CRLF + aRetMsg[2])//"Foi realizada uma tentativa de atualização do título, e foi retornada a seguinte mensagem:"
					Else
						MsgAlert(STR0238 + " " + Rtrim(SE1->E1_NUM)+". "+STR0239)//"Ocorreu um erro inesperado na tentativa de atualização do título " "Verifique as configurações da integração  e tente novamente."
					EndIf
				ElseIf Valtype(aRetMSg[1]) == "U"
					MsgAlert(STR0238 + " " + Rtrim(SE1->E1_NUM) + ". " + STR0239)//"Ocorreu um erro inesperado na tentativa de atualização do título " "Verifique as configurações da integração  e tente novamente."
				Endif
				SetRotInteg('FINA070')
			Else
				MsgAlert(STR0240)//"Para realizar as baixas de integrações como TIN, é necessário cadastrar o adapter da rotina FINI070A - UPDATECONTRACTPARCEL."
			EndIf
		Endif

		IF (SE1->E1_SITUACA != "2" .And. SE1->E1_SITUACA != "7") ;
			.And. MovBcoBx(cMotBx, .T.) .and. !(SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG) .and. Empty( cLoteFin )
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Gravar Saldo Banc rio 											        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If cPaisLoc<>"BRA"
				AtuSalBco(cBanco,cAgencia,cConta,dDtCredito,xMoeda(nValRec-nSomaCheq,SE1->E1_MOEDA,nMoedaBco,,,nTxMoeda),"+")
			Else
				AtuSalBco(cBanco,cAgencia,cConta,dDtCredito,Iif( lPccBxCr .And. nValRec - ( nPis + nCofins + nCsll ) == nOldValRec , nOldValRec , nValRec ) - nSomaCheq , "+" )
			Endif
		EndIf

		//.....
		//    Conforme situacao do parametro abaixo, integra com o SIGAGSP ³
		//    MV_SIGAGSP - 0-Nao / 1-Integra                               ³
		//    Gera os Lancamentos de Orcamentos
		//    ........
		If GetNewPar("MV_SIGAGSP","0") == "1"
			GSPF210()
		EndIf

		//Ponto de entrada do Template.
		If ExistTemplate("SACI008")
			ExecTemplate("SACI008",.F.,.F.)
		EndIf

		If lSACI008
			ExecBlock("SACI008",.F.,.F.)
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		//³Integracao protheus X tin	³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

	EndIF

	If lF070Bxpc .And. ( SE1->E1_SALDO > 0 )
	   	ExecBlock( "F070BXPC", .F., .F. )
	Else
		Exit
	EndIf
End

If "CX" $ cBanco
	aCaixaFin[1] := cBanco
	aCaixaFin[2] := cAgencia
	aCaixaFin[3] := cConta
Endif

If cAlias != NIL
	dbSelectArea(cAlias)
	dbSetOrder(nOrdem)
	dbGoTo( nReg )
EndIf

RestArea (aArea)

If nOpc1 == 0
	aCols := aSize(aCols, 0)
EndIf

If FunName() == "FINA740"
	cPorta740 := cPortado
	cBanco740 := cBanco
	cAgenc740 := cAgencia
	cConta740 := cConta
Endif

If ValType( aVlOringl ) == "A"
	aSize( aVlOringl , 0 )
	aVlOringl := Nil
EndIf

//Faz a impressao do Recibo
If lImpLjRe .And. lBaixou .And. (lLojrRec .Or. lULOJRREC)
	aAreaSe1 := SE1->(GetArea())
	aAreaSe5 := SE5->(GetArea())
	aAreaRec := GetArea()

	//Passo os parametros do SE5 para futura reimpressão do recibo deverá pegar as informações do E5, pois a baixa pode ser
	//parcial, o numero do recibo será Numero+Cliente+Loja+E5_SEQ. Desenvolver a reimpressão usando estas informações na query
	If lULOJRREC
		//Fonte não será mais padrao mas sim um RDMake padrão.
		U_LOJRRecibo(	""				, ""				, aRelTit			, aFormPg				,;
						Nil				, SE5->E5_HISTOR	, SE5->E5_SEQ		, DTOC(SE5->E5_DATA)	,;
						SE5->E5_TIPODOC	, SE5->E5_MOTBX		, SE5->E5_NUMERO	, SE5->E5_PARCELA		,;
						SE5->E5_CLIFOR	, SE5->E5_LOJA 		)
	Else
		LOJRREC(	""				, ""				, aRelTit			, aFormPg				,;
					Nil				, SE5->E5_HISTOR	, SE5->E5_SEQ		, DTOC(SE5->E5_DATA)	,;
					SE5->E5_TIPODOC	, SE5->E5_MOTBX		, SE5->E5_NUMERO	, SE5->E5_PARCELA		,;
					SE5->E5_CLIFOR	, SE5->E5_LOJA 		)
	EndIf
	RestArea(aAreaSe1)
	RestArea(aAreaSe5)
	RestArea(aAreaRec)
Endif

Return lRet


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ fA070Lot ³ Autor ³ Wagner Xavier         ³ Data ³ 03/08/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Seleciona titulos a serem baixados                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fA070Lot()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA070                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa070Lot( cAlias,nReg,nOpcx )
LOCAL oDlg
LOCAL oCredConta

LOCAL lGrava		:= .F.
LOCAL nOrdem
LOCAL oLoteFin
Local lPreMark 		:= .T.
Local lF070Mark 	:= ExistBlock("F070MARK")
Local oBancolt
Local lFa070Bco		:= ExistBlock("FA070BCO")
Local cChaveLbn		:= ""
Local cChaveLbnOld 	:= ""
Local aSize 		:= {}
Local oPanel
Local nOrder		:= 1
Local nA			:= 0
Local cMoedaTx		:= ""
Local lEECFAT 		:= SuperGetMv("MV_EECFAT",.F.,.F.)
Local lEECFIN 		:= SuperGetMv("MV_AVG0131",.F.,.F.) //DFS - 17/02/11 - Parâmetro para verificar integração com financeiro.
Local lF070BxLt 	:= ExistBlock("F070BxLt")
Local oSize
Local lBxDtFin 		:= SuperGetMv("MV_BXDTFIN",,"1") == "2"
Local cAuxMoeda     := ""
Local lJFilBco      := ExistFunc("JurVldSA6") .And. SuperGetMv("MV_JFILBCO", .F., .F.) //Indica se filtra as contas correntes vinculadas ao escritório logado - SIGAPFS
Local cEscrit       := IIF(lJFilBco, JurGetDados("NS7", 4, xFilial("NS7") + cFilant + cEmpAnt, "NS7_COD"), "")
Local cF3Bco        := IIF(lJFilBco, "SA6JUR", "SA6")

//294 - Natureza sintetica/Analitica
Local lNatSA := FNatSAIsOn()

PRIVATE dVencDe   := Ctod(Space(8))
PRIVATE cNatDe    := CriaVar("E1_NATUREZ")
PRIVATE dVencAte  := Ctod(Space(8))
PRIVATE cNatAte   := CriaVar("E1_NATUREZ")
PRIVATE cBancoLt  := CriaVar("E1_PORTADO")
PRIVATE cAgenciaLt:= CriaVar("E1_AGEDEP")
PRIVATE cContaLt  := CriaVar("E1_CONTA")
PRIVATE nNroTit   := 0
PRIVATE nTotDesp  := 0
PRIVATE nTotJur   := 0
PRIVATE nTotVA	  := 0
PRIVATE nTotMul   := 0
PRIVATE nCredConta:= 0
PRIVATE nTotDesc  := 0
PRIVATE nTotGer   := 0
PRIVATE nValor    := 0
PRIVATE cLoteFin  := Space(TamSX3("E1_LOTE")[1])
PRIVATE cNaturLote:= Space(10)
PRIVATE nTotAGer  := 0
PRIVATE nTotADesp := 0
PRIVATE nTotADesc := 0
PRIVATE nTotAMul  := 0
PRIVATE nTotAJur  := 0
PRIVATE nQtdTit   := 0
PRIVATE nOtrga    := 0
PRIVATE nDifCambio:= 0
PRIVATE aTxMoedas := {}
Private nMoedaBco := 1
Private lTitLote  := .T.

If cPaisLoc <> "BRA"
	aAdd(aTxMoedas,{"",1,PesqPict("SM2","M2_MOEDA1")})
	For nA := 2 To MoedFin()
		cMoedaTx := Str(nA,IIf(nA <= 9,1,2))
		cAuxMoeda := GetMv( "MV_MOEDA" + cMoedaTx )
		If ! Empty( cAuxMoeda )
			If lF070Auto .And. nA == SE1->E1_MOEDA
				aAdd( aTxMoedas, { cAuxMoeda, SE1->E1_TXMOEDA, PesqPict("SM2","M2_MOEDA" + cMoedaTx) } )
			Else
				aAdd( aTxMoedas, { cAuxMoeda, RecMoeda(dDataBase, nA), PesqPict("SM2","M2_MOEDA" + cMoedaTx) } )
			Endif
		Else
			Exit
		Endif
	Next
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso tenha seja um titulo gerado pelo SIGAEIC ou SIGAEEC não poderá sofrer baixa através desta rotina ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If GetMV("MV_EASYFIN") == "S" .And. UPPER(Alltrim(SE1->E1_ORIGEM)) $ "SIGAEIC"
	HELP(" ",1,"FAORIEIC")
	Return
Endif

//If lEECFAT .And. UPPER(Alltrim(SE1->E1_ORIGEM)) $ "SIGAEEC" //DFS - A integração do financeiro independe da integração com o faturamento
// TDF - 26/12/11 - Acrescentado o módulo EFF para permitir liquidação
If lEECFIN .And. UPPER(Alltrim(SE1->E1_ORIGEM)) $ "SIGAEEC" .and. !(cModulo $ "EEC/EDC/ECO/EFF") //DFS - 17/02/11 - Trava para outros módulos para títulos gerados no EEC
   HELP(" ",1,"FAORIEEC")
   Return
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Caso titulos originados pelo SIGALOJA estejam nas carteiras :  ³
//³I = Carteira Caixa Loja                                        ³
//³J = Carteira Caixa Geral                                       ³
//³Nao permitir esta operacao, pois ele precisa ser transferido   ³
//³antes pelas rotinas do SIGALOJA.                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Upper(AllTrim(SE1->E1_SITUACA)) $ "I|J" .AND. !IsMoney(SE1->E1_TIPO) .AND. Upper(AllTrim(SE1->E1_ORIGEM)) $ "LOJA010|LOJA701|FATA701"
	Help(" ",1,"NOUSACLJ")
	Return
Endif
While .T.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Zera Acumuladores                                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nNroTit   := 0
	nTotDesp  := 0
	nTotJur   := 0
	nTotVA	  := 0
	nTotMul   := 0
	nCredConta:= 0
	nTotDesc  := 0
	nTotGer   := 0
	nValor    := 0
	nTotAGer  := 0
	nTotADesp := 0
	nTotADesc := 0
	nTotAMul  := 0
	nTotAJur  := 0
	nQtdTit   := 0
	cMarca    := Get070Mark()

	If lF070Mark
		lPreMark := ExecBlock("F070MARK",.F.,.F.)
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Salva ordem atual                                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea ( cAlias )
	nOrdem:=IndexOrd()
	nSalvRec:=Recno()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Desenha tela padr„o do browse                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nOpc1    := 0
	nValor   := 0
	nQtdTit  := 0

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se data do movimento ‚ menor que data limite de     ³
	//³ movimentacao no financeiro                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lBxDtFin .and. !DtMovFin(,,"2")
		Return
	Endif

	UltiLote()

	If IsPanelFin()  //Chamado pelo Painel Financeiro
		dbSelectArea(cAlias)
		oPanelDados := FinWindow:GetVisPanel()
		oPanelDados:FreeChildren()
		aDim := DLGinPANEL(oPanelDados)
		DEFINE MSDIALOG oDlg OF oPanelDados:oWnd FROM 0,0 To 0,0 PIXEL STYLE nOR( WS_VISIBLE, WS_POPUP )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Observacao Importante quanto as coordenadas calculadas abaixo: ³
		//³ -------------------------------------------------------------- ³
		//³ a funcao DlgWidthPanel() retorna o dobro do valor da area do	 ³
		//³ painel, sendo assim este deve ser dividido por 2 antes da sub- ³
		//³ tracao e redivisao por 2 para a centralizacao. 					 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nEspLarg := (((DlgWidthPanel(oPanelDados)/2) - 266) /2) -5
		nEspLin  := 0

	Else

		DEFINE MSDIALOG oDlg FROM	102,5 TO 305,555 TITLE OemToAnsi(STR0058)	PIXEL //"Baixa a Pagar em Lote"
		nEspLarg := 0
	  	nEspLin  := 0

	Endif

	@ 02+nEspLin, 004+nEspLarg TO 98+nEspLin, 77+nEspLarg  LABEL OemToAnsi(STR0044) 	 		PIXEL OF oPanel   //"Dados Banc rios"
	@ 02+nEspLin, 079+nEspLarg TO 98+nEspLin, 180+nEspLarg LABEL OemToAnsi(STR0045) 			PIXEL OF oPanel //"Valores"
	@ 02+nEspLin, 182+nEspLarg TO 75+nEspLin, 274+nEspLarg LABEL OemToAnsi(STR0046)				PIXEL OF oPanel //"Filtragem"

	//--------------------------------------------------------------
	//Coluna 1
	@ 15+nEspLin, 009+nEspLarg SAY STR0047 SIZE 30,07 OF oPanel PIXEL //"Banco"
	@ 12+nEspLin, 035+nEspLarg MSGET oBancolt VAR cBancolt 	SIZE 40, 10 PIXEL OF oPanel Hasbutton PIXEL F3 cF3Bco ;
					Valid IIF(nOpc1 ==2, .T.,AtulValidou() .And. F070VldBco(cBancolt,@cAgencialt,@cContalt,.T.,.T.,,.T.) ;
					 .And. IiF(lFa070Bco,ExecBlock("FA070BCO",.F.,.F.),.T.) .And. IIF(lJFilBco, JurVldSA6("1", {cEscrit, cBancolt, cAgencialt, cContalt}), .T.))

	@ 29+nEspLin ,009+nEspLarg SAY STR0048 SIZE 30,07 OF oPanel PIXEL //"Agência"
	@ 26+nEspLin ,035+nEspLarg MSGET cAgencialt            	SIZE 40, 10 PIXEL OF oPanel Hasbutton ;
					Valid IIF(nOpc1 ==2, .T.,If(!lValidou,If(F070VldBco(cBancolt,@cAgencialt,@cContalt,.T.,.T.,cAgencialt,.T.),.T.,oBancolt:SetFocus()),.T.) ;
						.And. IIF(lJFilBco, JurVldSA6("2", {cEscrit, cBancolt, cAgencialt, cContalt}), .T.))

	@ 42+nEspLin ,009+nEspLarg SAY STR0049 					SIZE 30,07 OF oPanel PIXEL //"Conta"
	@ 40+nEspLin ,035+nEspLarg MSGET cContalt              	SIZE 40, 10 PIXEL OF oPanel Hasbutton ;
					Valid IIF(nOpc1 ==2, .T.,If(!lValidou,If(F070VldBco(cBancolt,@cAgencialt,@cContalt,.T.,.T.,cAgencialt+cContalt,.T.),.T.,oBancolt:SetFocus()),.T.);
						.And. IIF(lJFilBco, JurVldSA6("3", {cEscrit, cBancolt, cAgencialt, cContalt}), .T.))


	@ 56+nEspLin ,009+nEspLarg SAY STR0050 SIZE 30,07 OF oPanel PIXEL //"N.Titulos"
	@ 54+nEspLin ,035+nEspLarg MSGET nNroTit               	SIZE 40,10 OF oPanel PIXEL Picture "999" Valid nNroTit > 0

	@ 70+nEspLin ,009+nEspLarg SAY STR0051 					SIZE 30,07 OF oPanel PIXEL //"Lote"
	@ 69+nEspLin ,035+nEspLarg MSGET oLoteFin VAR cLoteFin 	SIZE 40,10 OF oPanel PIXEL Picture "@!" ;
					 Valid IIF(nOpc1 ==2,.T.,(cChaveLbnOld := cChaveLbn, CheckLote("R")) .And. Fa070LoteFin(cLoteFin, @cChaveLbn)) ON CHANGE UnLockByName(cChaveLbn,.T.,.F.)  // Libera Lock

	@ 84+nEspLin ,009+nEspLarg SAY STR0052 					SIZE 30,07 OF oPanel PIXEL //"Natureza"
	@ 82+nEspLin ,035+nEspLarg MSGET cNaturLote            	SIZE 40,10 OF oPanel PIXEL Picture "@!"  F3 "SED" Valid ExistCpo("SED") .and. If(lNatSA, FinVldNat(.F.,cNaturLote,1),.T.) HASBUTTON


	//--------------------------------------------------------------
	//Coluna 2
	@ 14+nEspLin ,084+nEspLarg SAY STR0053 SIZE 53,07 OF oPanel PIXEL //"Valor T¡tulos"
	@ 11+nEspLin ,125+nEspLarg MSGET nTotGer    SIZE 52, 08 PIXEL OF oPanel Picture PesqPict("SE1","E1_VALOR") Valid MontaTotal(oCredConta) HASBUTTON

	@ 27+nEspLin ,084+nEspLarg SAY STR0054 SIZE 53,07 OF oPanel PIXEL //"Total Despesas"
	@ 25+nEspLin ,125+nEspLarg MSGET nTotDesp   SIZE 52, 08 PIXEL OF oPanel Picture PesqPict("SE1","E1_VALOR") Valid MontaTotal(oCredConta) HASBUTTON

	@ 42+nEspLin ,084+nEspLarg SAY STR0055 SIZE 53,07 OF oPanel PIXEL //"Total Descontos"
	@ 39+nEspLin ,125+nEspLarg MSGET nTotDesc   SIZE 52, 08 PIXEL OF oPanel Picture PesqPict("SE1","E1_DESCONT") Valid MontaTotal(oCredConta) HASBUTTON

	@ 56+nEspLin ,084+nEspLarg SAY STR0056 SIZE 53,07 OF oPanel PIXEL //"Total Multas"
	@ 54+nEspLin ,125+nEspLarg MSGET nTotMul	SIZE 52, 08 PIXEL OF oPanel Picture PesqPict("SE1","E1_MULTA") Valid MontaTotal(oCredConta) HASBUTTON

	@ 70+nEspLin ,084+nEspLarg SAY STR0057 SIZE 53,07 OF oPanel PIXEL //"Total Juros"
	@ 69+nEspLin ,125+nEspLarg MSGET nTotJur	SIZE 52, 08 PIXEL OF oPanel Picture PesqPict("SE1","E1_JUROS") Valid MontaTotal(oCredConta) HASBUTTON

	@ 85+nEspLin ,084+nEspLarg SAY STR0058 SIZE 53,07 OF oPanel PIXEL //"Cr‚dito em C/C"
	@ 83+nEspLin ,125+nEspLarg MSGET oCredConta VAR nCredConta  SIZE 52, 08 PIXEL OF oPanel Picture PesqPict("SE1","E1_VALOR") HASBUTTON


	//Coluna 3
	@ 16+nEspLin ,187+nEspLarg SAY STR0059 SIZE 44,07 OF oPanel PIXEL //"Do Vencto."
	@ 14+nEspLin ,227+nEspLarg MSGET dVencDe        SIZE 50, 10 PIXEL OF oPanel Valid IIF(nOpc1 ==2, .T.,! Empty(dVencDe)) HASBUTTON

	@ 30+nEspLin ,187+nEspLarg SAY STR0060 SIZE 42,07 OF oPanel PIXEL //"At‚ o Vencto."
	@ 28+nEspLin ,227+nEspLarg MSGET dVencAte		SIZE 50, 10 PIXEL OF oPanel Valid IIF(nOpc1 ==2, .T.,! Empty(dVencAte)) HASBUTTON

	@ 45+nEspLin ,187+nEspLarg SAY STR0061 SIZE 39,07 OF oPanel PIXEL //"Da Natureza"
	@ 42+nEspLin ,227+nEspLarg MSGET cNatDe			SIZE 50, 10 PIXEL OF oPanel Picture "@!" F3 "SED" HASBUTTON

	@ 59+nEspLin ,187+nEspLarg SAY STR0062 SIZE 45,07 OF oPanel PIXEL //"Até a Natureza"
	@ 57+nEspLin ,227+nEspLarg MSGET cNatAte		SIZE 50, 10 PIXEL OF oPanel Picture "@!" F3 "SED" HASBUTTON Valid cNatAte>=cNatDe


	If IsPanelFin()  //Chamado pelo Painel Financeiro
		oDlg:Move(aDim[1],aDim[2],aDim[4]-aDim[2], aDim[3]-aDim[1])
		ACTIVATE MSDIALOG oDlg ON INIT FaMyBar(oDlg,;
		{||(nOpc1 := 1, IIF(F070OkLote(cBancolt,cAgencialt,cContalt,cLoteFin),oDlg:End(),nOpc1 := 0))},;
		{||(nOpc1 := 2,oDlg:End())})

		FinVisual(cAlias,FinWindow,(cAlias)->(Recno()),.T.)
	Else
		DEFINE SBUTTON FROM 80, 214 TYPE 1 ENABLE OF oDlg ACTION (nOpc1 := 1,IIF(Empty(cLoteFin),(oLoteFin:SetFocus(),nOpc1 := 0),oDlg:End()))
		DEFINE SBUTTON FROM 80, 244 TYPE 2 ENABLE OF oDlg ACTION (nOpc1 := 2,oDlg:End())
		ACTIVATE MSDIALOG oDlg VALID (iif(nOpc1==1,( CarregaSA6(cBancolt,cAgencialt,cContalt,.T.,,.T.).and. ValidaTotal() ),.T.)) CENTERED
	EndIf

	If nOpc1 != 1
		UnLockByName(cChaveLbn,.T.,.F.)  // Libera Lock
		If __lSX8
			RollBackSX8()
		EndIf
		Exit
	EndIf

	//-----------------------------------------------------------------------
	// Chama a SumAbatRec antes da IndRegua para abrir alias auxiliar __SE1 ³
	//-----------------------------------------------------------------------
	SumAbatRec( "", "", "", 1, "")

	nMoedaBco := Max(MoedaBco(cBancoLt,cAgenciaLt,cContaLt),1)

	//-----------------------------------------------------------------------
	// Filtra o arquivo para t¡tulos em abertos
	//-----------------------------------------------------------------------

	nValor   := 0    // valor total dos T¡tulos,mostrado no rodape do browse
	nQtdTit  := 0    // quantidade de T¡tulos,mostrado no rodape do browse
	nOpca    := 0

	lRet := FA070Mark(cBancolt,lPreMark)

	If lRet
		lGrava := fA070Grava()
		If __lSX8 .And. lGrava
			ConfirmSX8()
		Endif
	Else
		If __lSX8
			RollBackSX8()
		Endif
	EndIf
	UnLockByName(cChaveLbn,.T.,.F.)  // Libera Lock
	Exit
End

//-----------------------------------------------------------------------
// Restaura os indices
//-----------------------------------------------------------------------
dbSelectArea("SE1")
DbClearFilter()
DbSetorder(nOrder)
dbGoTo(nSalvRec)
cLoteFin := SPACE(TamSX3("E1_LOTE")[1])
Return


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ fa070Can ³ Autor ³ Wagner Xavier         ³ Data ³ 06/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Rotina de Cancelamento de Baixa a receber                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fa070can(ExpC1,ExpN1,ExpN1)                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA070                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa070can( cAlias, nReg	, nOpcx, aEncho, nOpbaixa )

LOCAL lCanc070Bx	:= ExistBlock("CANC070J")
LOCAL lACAtivo		:= GetNewPar("MV_ACATIVO", .F.)
LOCAL lBaixaAbat	:= .F.
LOCAL nHdlPrv		:= 0
LOCAL nTotal		:= 0
LOCAL nSalvRec		:= 0
LOCAL cTitAnt		:= ""
LOCAL cDescrMo		:=" "
LOCAL aBaixa		:= {}
LOCAL nJuros		:= 0
LOCAL nVA	 		:= 0	//Valores Acessorios
LOCAL nMulta		:= 0
LOCAL nCorrec		:= 0
LOCAL nDescont		:= 0
LOCAL nTotAdto		:= 0

LOCAL nI			:= 0
LOCAL cHist070		:= ""
LOCAL cMot070		:= ""
LOCAL cLoteFin		:= Space(TamSX3("E1_LOTE")[1])
LOCAL nOrdem
LOCAL lPadrao
LOCAL cBanco, cAgencia, cConta
LOCAL cArquivo
LOCAL cSequencia
LOCAL cLA
LOCAL dDataAnt
LOCAL nValor
LOCAL nSe1ValLiq, nSe1Descont, nSe1Multa, nSe1Juros, nSe1Correc
LOCAL cChave
LOCAL dDataCrd
LOCAL cParcela
LOCAL cNum			:= CRIAVAR("E1_NUM")
LOCAL cPrefixo
LOCAL dBaixa
LOCAL cMoeda
LOCAL cCliente,cLoja
LOCAL lCtbBaixa		:= .F.
LOCAL nValorM1		:= nValorM2  := 0
LOCAL aBaixaSE3		:= {}
LOCAL nVlrBaixa		:= 0
LOCAL cTipoBaixa
LOCAL nRecSE5		:= 0
LOCAL lRet			:= .T.
LOCAL lFa070Ca4		:= ExistBlock("FA070CA4")
LOCAL lFa070Ca4T	:= ExistTemplate("FA070CA4")
LOCAL aMotBx		:= ReadMotBx()
LOCAL nDifCambio	:= 0
LOCAL dDtdispo		:= dDataBase
LOCAL cModSpb		:= "1"	// Modalidade de SPB
LOCAL aModalSpb		:= {"TED","CIP","COMP"}
LOCAL cDescSpb		:= "TED"
LOCAL lSpbInUse		:= SpbInUse()
LOCAL x
LOCAL lBxCEC		:= .F.  //Verificador de existencia de baixa por compensacao entre carteiras
LOCAL lBxLiq		:= .F.
LOCAL cHistCan070	:= " "
LOCAL lChqDev		:= .F.
LOCAL cSeqSE5		:= Space(TamSX3("E5_SEQ")[1])
LOCAL cMultNat		:= "2"
LOCAL nValSE5		:= 0
LOCAL lAcreDecre	:= .F.
LOCAL nAcresc		:= 0
LOCAL nDecresc		:= 0
LOCAL nMoedaBco		:= 0
LOCAL cEfImpress	:= ""
LOCAL lCheque		:= .F.
LOCAL cNumCheq		:= ""
LOCAL lComp			:=.F.
LOCAL aAreaSE5		:={}
LOCAL aAreaAtu		:={}
LOCAL lBxConc		:= GetNewPar("MV_BXCONC","2") == "1"
LOCAL lGemInUse		:= .F.
LOCAL nLin2			:= 0
LOCAL oNumTit
LOCAL oCodCli
LOCAL oNumBco
LOCAL lBxCnab		:= GetMv("MV_BXCNAB") == "S"
LOCAL nTamTit		:= TamSX3("E2_PREFIXO")[1]+TamSX3("E2_NUM")[1]
LOCAL nTamTit2		:= TamSX3("E2_PREFIXO")[1]+TamSX3("E2_NUM")[1]+TamSX3("E2_PARCELA")[1]+TamSX3("E2_TIPO")[1]
LOCAL cSeqCanSe5	:= "  "
LOCAL cKeyLote		:= ""
LOCAL lExclusao		:= .F. //Para tratar a exclusao de baixa
LOCAL lChqAdt		:= .F.	//Cheque para adiantamento
LOCAL lPanelFin		:= IsPanelFin()
LOCAL oNaturez
LOCAL oTipo
LOCAL aDiario		:= {}
LOCAL cLoteBx		:= ""
LOCAL lSaldoChq		:= (GetMv("MV_SLDBXCR") == "C")
LOCAL lContinua		:= .T.
Local aAlt          := {}

// Indica se existe integracao com Distribuicao e Logistica
LOCAL lIntDL		:= SuperGetMv("MV_INTDL",.F.,"N") == "S"

//Controla o Pis Cofins e Csll na baixa  (1-Retem PCC na Baixa ou 2-Retem PCC na Emissão(default) )
LOCAL lPccBxCr		:= FPccBxCr(.T.)

//Controla IRPJ na baixa
Local lIrPjBxCr		:= FIrPjBxCr(.T.)
Local oIrrf
LOCAL aFlagCTB		:= {}
LOCAL lUsaFlag		:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)
LOCAL nTamE1Parc	:= TamSx3("E1_PARCELA")[1]	// Tamanho do campo parcela

//Variaveis para tratamento de campos especiais passados na array do MSExecAuto (aAutoCab)
LOCAL aValidGet		:= {}
LOCAL nx			:= {}

// Total do titulo recebido em cheque
LOCAL nSomaCheq		:= 0

//Indica se existe um abatimento baixado relacionado com o titulo, mesmo que seja um titulo baixado parcialmente
//Para casos onde o titulo eh baixado parcialmente por compensacao e o saldo eh baixado pela baixa manual, onde o abatimento eh baixado
LOCAL lExBxAbat		:= .F.

Local lF070Cancel	:= ExistBlock("F070CANCEL")
Local aCancel		:= {}
Local lEECFAT		:= SuperGetMv("MV_EECFAT",.F.,.F.)
Local lEECFIN		:= SuperGetMv("MV_AVG0131",.F.,.F.) //DFS - 17/02/11 - Parâmetro para verificar integração com financeiro.
Local lF070BAUT		:= ExistBlock("F070BAUT")
Local lF070CANABT	:= EXISTBLOCK("F070CANABT")
Local nValabt		:= 0
Local lF70ALTABAT	:= ExistBlock("F70ALTABAT")
Local lF070CHDV		:= ExistBlock("F070CHDV")
Local nValRetIR		:= 0
Local lAtuSldbco	:= .T.
Local cChaveAux 	:= ""
Local cIdTit		:= ""
Local nFlxTit		:= 0
Local lFlxUltBaixa	:= .F.
Local aOldBaixaSE5
Local aBxSE5		:= {}
//Controle de abatimento
Local lTitpaiSE1	:= .T.
Local nOrdTitPai	:= 0
Local bWhile		:= {|| !Eof() .and. cTitAnt == (SE1->E1_FILIAL+SE1->E1_CLIENTE+SE1->E1_LOJA+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA) }
Local nMoedaSE5		:= 1
Local lE5CM1		:= SE5->(FieldPos("E5_CM1")>0)
Local nOldCM1		:= 0
Local lRMBibli		:= GetNewPar('MV_RMBIBLI',.F.)
Local lTravaSa1		:= ExistBlock("F070TRAVA")
Local nOtrga		:= 0
Local lCtbEst 		:= .F.
Local cTpBxCtb 		:= ""
Local lEstnCtb 		:= .F.
Local lBq10925		:= SupergetMv("MV_BQ10925",.F.,"2") == "1"
Local lImpBxCr		:= GetNewPar( "MV_IMPBXCR", "1" ) == "2"
Local lF070DCDes 	:= ExistBlock("F070DCDesc")
Local lF070JRVlr 	:= ExistBlock("F070JRVlr")
Local cFilOrgTr 	:= ""//Filial de origem do documento de ISS, processo de transferência
Local nForIss   	:= 1//Auxiliar para o For de busca do ISS, processo de transferência
Local nTotAbISS 	:= 0//Valor do abatimento de ISS na origem, processo de transferência
Local oSize
Local oMasterPanel
Local lCpRet		:= .F.
Local aAreaSE1		:=	{}

//Reestruturacao SE5
Local aAreaAnt		:= {}
Local oModelBx  	:= NIL //FWLoadModel("FINM010")
Local cLog			:= ""
Local lSaveState	:= ALTERA
Local lSaveStatI	:= INCLUI
Local lE1_VALLIQ 	:= .F.
Local nRegCanSE1 	:= 0
Local nInd 			:= 0
Local cFilBkpLj 	:= "" //Bakup da filial do Loja
Local aBaixaFil		:= {}	//aBaixa filtrado para exibicao na tela de escolha de titulos (usado para baixas no SIGALOJA/SIGAFRT)
Local cChaveSE5		:= ""
Local lExistVA 		:= TableInDic("FKD") .and. TableInDic("FKC")
Local nXVa			:= 0
Local lFKDID		:= lExistVA .And. FKD->( FieldPos("FKD_IDFKD") ) > 0 .And. ExistFunc("FN040VAID") .And. ExistFunc("FN70VAFKD") // Proteção campo criado 12.1.25
//Efetua a Validacao da Baixa do RM Classis x Protheus
Local cProdRM		:= GETNEWPAR('MV_RMORIG', "E|U|S")
Local lBxLoja		:= .F. //Baixa do título no Controle de Lojas (LOJXREC)
Local lLojPdv		:= AllTrim(Funname()) == "LOJA701" .Or. nModulo == 23 // Estorno da baixa pelo PDV.
Local aRetInteg		:= {}
Local cChaveSE1     := ""
Local nBaixa        := 0

Local lGestao   	:= FWSizeFilial() > 2	// Indica se usa Gestao Corporativa
Local lSE1Comp  	:= FWModeAccess("SE1",3)== "C" // Verifica se SE1 é compartilhada
Local lMsgBxC   	:= .F.
Local cQry 			:= ""
Local cAliasQry 	:= ""
Local cAliasFK4 	:= ""
Local cQryFK4 		:= ""
Local cIdFK4 		:= ""
Local cAliasFK3 	:= ""
Local cQryFK3 		:= ""
Local cIdFK3 		:= ""
Local cIdDoc 		:= ""
Local cIdDocOld 	:= ""
Local lFK3Ret 		:= .F.
Local lIdDoc 		:= .F.
Local lFVldExcCom	:= ExistFunc("FVldExcCom")
Local dCancSE8		:= CToD("")
Local dOldDtCan     := dDataBase

Local cChaveTit As Character
Local cIdFK7    As Character
Local cIdFK1    As Character

Private n
//Reestruturacao SE5
PRIVATE aBaixaSE5	:= {}
PRIVATE lRaRtImp  	:= lFinImp .And.FRaRtImp()     //Define se ha retencao de impostos PCC/IRPJ no R.A
PRIVATE nCM1		:= nProRata := 0
//variavel incluida para evitar não conformidade quando a rotina é chamado pelo FINA223
PRIVATE lFini055	:= FwIsInCallStack("FINI055")
PRIVATE lBloqSa1 	:= .T.
PRIVATE cFilAbat 	:= cFilAnt
Private aRetMsg		:= {}
PRIVATE nParciais	:= 0

If __lTemMR
	F070VerImp("2",cFilAnt,SE1->E1_CLIENTE,SE1->E1_LOJA,,.T.,@lIrPjBxCr,@lPccBxCr)
EndIf
// Zerar variaveis para contabilizar os impostos da lei 10925.
VALOR	  := 0
VALOR5	  := 0
VALOR6	  := 0
VALOR7	  := 0
nPis	  := 0
nCofins	  := 0
nCsll	  := 0
nIrrf	  := 0
PIS		  := 0
COFINS	  := 0
CSLL	  := 0
IRRF	  := 0

cChaveTit := ""
cIdFK7    := ""
cIdFK1    := ""

DEFAULT nOpBaixa := 1

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso tenha seja um titulo gerado pelo SIGAEIC ou SIGAEEC não poderá sofrer baixa através desta rotina ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ	ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If GetMV("MV_EASYFIN") == "S" .And. Upper(Alltrim(SE1->E1_ORIGEM)) $ "SIGAEIC"
	HELP(" ",1,"FAORIEIC")
	Return
EndIf

// usa o Modulo 88 GTP
If nModulo <> 88
	If  Upper(AllTrim(SE1->E1_ORIGEM)) $ "GTPA421|GTPA700|GTPA700A|GTPA700L|"
		dbSelectArea("SE5")
		SE5->(DBsetOrder(7))
		If SE5->(dbSeek(xFilial("SE5")+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO+SE1->E1_CLIENTE+SE1->E1_LOJA))
			If Upper(AllTrim(SE5->E5_ORIGEM)) $ "GTPA421|GTPA700|GTPA700A|GTPA700L|GTP700AM"
				FwAlertHelp(STR0295,STR0296) //"Exclusão - Este título tem origem no modulo GTP e só pode ser excluido ou cancelada a baixa pela rotina origem."
				Return
			EndIf
		EndIf
	EndIf
EndIf

//Caso a rotina esteja cadastrada no adapter, so pode ser enviada como 'Sincrona'. Uma baixa enviada como assincrona
//sera concretizada mesmo que de erro no sistema integrado.
If !lFini055
	If !(Fa070Integ(.T.))
		Return
	Endif
Endif
//If lEECFAT .And. Upper(Alltrim(SE1->E1_ORIGEM)) $ "SIGAEEC" //DFS - A integração do financeiro independe da integração com o faturamento
// TDF - 26/12/11 - Acrescentado o módulo EFF para permitir liquidação
If lEECFIN .And. Upper(Alltrim(SE1->E1_ORIGEM)) $ "SIGAEEC" .and. !(cModulo $ "EEC/EDC/ECO/EFF") //DFS - 17/02/11 - Trava para outros módulos para títulos gerados no EEC
   HELP(" ",1,"FAORIEEC")
   Return
Endif

//Valida Exclusao da Baixa via SIGATMS
If ExistFunc("TMSVlBxCan") .And. TMSVlBxCan()
	Return
Endif

//Verifica permissao do usuario
If nOpcx == 6 .and. !VerSenha(52)
	Return
Endif

//****************************************
// Restringe o uso do programa Financeiro
// Quando a origem do titulo for de origem
// Totvs Incorporação
//****************************************
If FindFunction("FINTP01") .And. FINTP01(.T.)
	Return
Endif

//Não deixa efetuar o Cancelamento da Baixa de um titulo vindo de integração
If(Alltrim(SE1->E1_ORIGEM)  $ cProdRM .And. !lF070Auto)
	HELP(" ",1,"ProtheusXClassis" ,,STR0278,2,0,,,,,, {STR0280})//"Titulo gerado e baixado pela Integração RM Classis X Protheus, não pode ser cancelado a baixa" ## "Efetua cancelamento baixa através do sistema RM Classis"
	Return
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Barra o Cancelamento de Baixas realizadas atraves³
//³da Rotina Recebimentos Diversos.                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(SE1->E1_RECIBO) .AND. !AllTrim(Upper(SE1->E1_ORIGEM))  $ "FINA087A|FINA840"   
	Help( ,, "F070CANREC",, STR0206 + Chr(13) + Chr(10) + STR0210 + SE1->E1_RECIBO + '.', 1, 0,,,,,, )
	Return Nil
EndIf 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ PONTO DE ENTRADA para verificar se a baixa  ³
//³ pode ou nao ser cancelada.                  ³
//³ Retorna .T. ou .F. 					         	³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("FA070CA3")
	IF !ExecBlock('FA070CA3',.F.,.F.,nOpcx)
		Return
	EndIf
Endif

//Verifica se o Título não sofreu nenhuma baixa
//Essa regra não se aplica a títulos gerados na integração RM Classis x Protheus
If cPaisLoc <> 'PER'
	If !FwIsInCallStack('F040RetPR') .And. Empty(SE1->E1_BAIXA) .And. !((AllTrim(SE1->E1_ORIGEM) $ 'S|L|T') .And. (SE1->E1_SALDO == 0 .Or. SE1->E1_SALDO != SE1->E1_VALOR))
		Help(" ",1,"TITNAOXADO")
		Return
	EndIF
EndIf

If (ALLTRIM(SE1->E1_ORIGEM) == "FINA677") .and. !(FINVERRES(SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO+E1_CLIENTE+E1_LOJA),SE1->E1_ORIGEM, "R"))
	Help(" " , 1 , "FAVIAGEM")
	Return /*Function fa070Can*/
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Executa funcao do PLS usado na Integração com Drogaria  		   		       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If HasTemplate("DRO") .AND. SuperGetMv("MV_PLSATIV",.F.,.F.) .AND. Alltrim(SE1->E1_TIPO) =="PS";
	.AND. Substr(SE1->E1_ORIGEM,1,3) == "LOJ"
	If ! PLSBXDRO()
		Return
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se ‚ um registro Principal                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF SE1->E1_TIPO $ MVABATIM+"/"+MVIRABT+"/"+MVINABT+"/"+MVFUABT //adicionado MVFUABT pois a variável MVABATIM não está retornando FU-
	Help(" ",1,"NAOPRINCIP")
	Return
EndIF

//
// Eh um titulo gerado pelo template GEM ?
//
If HasTemplate("LOT") .and. ExistTemplate("GEMSE1LIX")
	lGemInUse := ExecTemplate("GEMSE1LIX",.F.,.F.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se utiliza o modulo de Gerenciamento Academico.     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lACAtivo .And. cPaisLoc=="BRA"
	//verifica se pode realizar o cancelamento da baixa do titulo no GE
	If !AcFinCanc1()
		Return .F.
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Trecho incluido para integração e-commerce          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If  !( LJ861EC03(SE1->E1_NUM, SE1->E1_PREFIXO, SE1->E1_FILORIG) )
	Return .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Salva ordem atual                                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nOrdem   := IndexOrd()
dbSetOrder(1)
cMoeda   := IIF(Empty(SE1->E1_MOEDA),"1",AllTrim(Str(SE1->E1_MOEDA,2)))
nSalvRec := Recno()
cNum     := SE1->E1_NUM
cPrefixo := SE1->E1_PREFIXO
cParcela := SE1->E1_PARCELA
cTipo    := SE1->E1_TIPO
cCliente := SE1->E1_CLIENTE
cLoja    := SE1->E1_LOJA
cChaveSE1 := SE1->(E1_FILIAL+E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO)

If cPaisLoc == "CHI"
	nOtrGa     := SE1->E1_OTRGA
	nDifCambio := SE1->E1_CAMBIO
EndIf
nTotAbImp := 0
nTotAbLiq := 0
nTotAbat := 0
cFilOrgTr := FilISSTran()

//Se nao for adiantamento, verifico os abatimentos
If !SE1->E1_TIPO $ MVRECANT + "/"+MV_CRNEG
	nTotAbat := SumAbatRec( cPrefixo, cNum, cParcela, SE1->E1_MOEDA,"V",,@nTotAbImp,,,,,,cFilAbat)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Busca os valores de ISS no caso de documento transferido com ISS na origem³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty( cFilOrgTr )
		SumAbatRec( cPrefixo, cNum, cParcela, SE1->E1_MOEDA,"V",,nTotAbImp,,,,,,cFilOrgTr,,@nTotAbISS)
		nTotAbat  += nTotAbISS
		nTotAbImp += nTotAbISS
	EndIf
Endif

nTotAbLiq := nTotAbat - nTotAbImp

dbGoTo(nSalvRec)


If Len(aBaixa) == 0 .And. Empty(SE1->E1_FATURA) .And. FunName() <> "FINA074" .And. cPaisLoc <> "BOL"
	If '"' $ SE1->E1_NOMCLI
		cChaveTit := xFilial("SE1")  + "|" +;
					 SE1->E1_PREFIXO + "|" +;
					 SE1->E1_NUM     + "|" +;
					 SE1->E1_PARCELA + "|" +;
					 SE1->E1_TIPO	 + "|" +;
					 SE1->E1_CLIENTE + "|" +;
					 SE1->E1_LOJA

		cIdFK7 := FINBuscaFK7(cChaveTit, "SE1")

		dbSelectArea("FK1")
		dbSetOrder(2)
		If FK1->(dbSeek(xFilial("FK1") + cIdFK7))
			While !FK1->(Eof()) .And. FK1->FK1_IDDOC == cIdFK7
				cIdFK1 := FK1->FK1_IDFK1

				dbSelectArea("SE5")
				dbSetOrder(21)
				If SE5->(dbSeek(xFilial("SE5") + cIdFK1))
					If SE5->E5_NUMERO <> SE1->E1_NUM
						Reclock("SE5")
						
						SE5->E5_TIPO    := SE1->E1_TIPO
						SE5->E5_BENEF   := RemoveAsp(SE1->E1_NOMCLI)
						SE5->E5_PREFIXO := SE1->E1_PREFIXO
						SE5->E5_NUMERO  := SE1->E1_NUM
						SE5->E5_PARCELA := SE1->E1_PARCELA
						SE5->E5_CLIFOR  := SE1->E1_CLIENTE
						SE5->E5_LOJA    := SE1->E1_LOJA
						SE5->E5_CLIENTE := SE1->E1_CLIENTE
						SE5->(MsUnlock())
					EndIf	
				EndIf
				
				FK1->(dbSkip())
			EndDo
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Procura pelas baixas deste titulo                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aBaixa := Sel070Baixa( "VL /V2 /BA /RA /CP /LJ /"+MV_CRNEG,cPrefixo, cNum, cParcela,cTipo,@nTotAdto,@lBaixaAbat,cCliente,cLoja,@nVlrBaixa,,@lBxCEC,@lBxLiq)
//Exibe na tela de Cancelamento as baixas na ordem que foram feitas
aSort(aBaixa,,,{|x,y| SubStr(x,Len(x)-1,Len(x)) < SubStr(y,Len(y)-1,Len(y))})
aSort(aBaixaSE5,,, {|x,y| x[9] < y[9] } )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Escolhe Baixa a ser cancelada                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ! lF070Auto
	If Len(aBaixa) > 1
		/*Protecao realizada exclusivamente para titulos baixados no LOJA*/
		If aScan( aBaixaSE5, {|x| AllTrim(x[25]) == "BA" .AND. AllTrim(x[29]) == "LOJ" .AND. IsMoney(AllTrim(x[24]))} ) > 0
			aBaixaFil := LjBxDup(aBaixa)
			aBaixa := aClone( aBaixaFil[1] )	//substitui o aBaixa temporariamente
		EndIf

		cListBox := aBaixa[1]
		nOpbaixa := 0

		DEFINE MSDIALOG oDlg FROM 5, 5 TO 14, 56 TITLE STR0070 // "Escolha A Baixa"

		@  .5, 2 LISTBOX cListBox ITEMS aBaixa SIZE 171 , 40 Font oDlg:oFont
		DEFINE SBUTTON FROM 055,137 TYPE 1 ACTION (nOpbaixa := 1,oDlg:End()) ENABLE OF oDlg
		DEFINE SBUTTON FROM 055,164 TYPE 2 ACTION oDlg:End() ENABLE OF oDlg

		ACTIVATE MSDIALOG oDlg CENTERED

		/* se houve titulo baixado pelo LOJA, restaura o conteudo original do aBaixa*/
		If Len(aBaixaFil) > 0
			aBaixa := aClone( aBaixaFil[2] )
		EndIf

		If nOpBaixa == 1
			nOpBaixa := Ascan(aBaixa,cListBox)
		Endif

		If nOpBaixa < Len(aBaixa) .and. SE1->E1_SALDO = 0 .and. SE1->E1_ACRESC > 0
			Alert(STR0282)
			Return
		Endif

		If nOpBaixa == 0 .or. !F070VenBx(aBaixa,nOpBaixa) .or. !F070ImpBx(aBaixa,nOpBaixa)
			Return
		Endif
	Else
		nOpbaixa := 1
	EndIF
Else
	IF lF070BAUT
		nOpBaixa :=	ExecBlock("F070BAUT",.F.,.F.,{aBaixa,nOpBaixa})
	EndIf

	if nOpBaixa > Len(aBaixa)
		nOpBaixa := 1
	Endif

Endif

//altera a data de cancelamento conforme enviado na execauto
If (nX := ascan(aAutoCab,{|x| x[1]='AUTDTCAN'}) ) > 0
    dOldDtCan   := dDataBase
    dDataBase := aAutoCab[nX,2]
EndIf

If Len(aBaixa) == 0

	If HasTemplate("LOT") .and. ExistTemplate("GEMREGSE5")
		If ExecTemplate("GEMREGSE5",.F.,.F.,{cPrefixo,cNum,cParcela,cTipo})
			dbSelectArea("SE1")
			Return
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Procura pelas compensa‡”es                                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lBxCEC  // Se houver baixa por Compensacao entre Carteiras (CEC)
		Help(" ",1,"BX_CEC")
	ElseIf SE5->(MsSeek(xFilial("SE5")+"CP"+cPrefixo+cNum+cParcela+cTipo))
		Help(" ",1,"TITULOADT")
	ElseIf (SE1->E1_TIPO $ MV_CRNEG+"/"+MVRECANT) .and. !lBaixaAbat
		Help(" ",1,"TITULOADT")
	ElseIF !Empty(SE1->E1_NUMLIQ) .and. ;
		!Empty(SE1->E1_TIPOLIQ) .and. ;
		Empty(SE1->E1_BCOCHQ+SE1->E1_CTACHQ+SE1->E1_AGECHQ);
		.Or. !Empty(SE1->E1_TIPOLIQ)
		Help(" ",1,"BXLIQUIDAC")
	Elseif (SE1->E1_TIPO $ MVPROVIS .And. FunName() <> "FINA040" .And. !lF070Auto)
        Help(" ",1,"BXPROVIS",,STR0226,1)//"Titulo Provisorio não pode ser estornado diretamente, exclua o título efetivo gerado na substituiçao!"
	ElseIf lTitpaiSE1 .And. !Empty(SE1->E1_TITPAI)
		Help(" ",1,"NAOPRINCIP",)
	Elseif Empty(SE1->E1_FATURA) .And. FunName() <> "FINA074" .And. cPaisLoc <> "BOL"
		Help(" ",1,"BAIXTITINC")
	ElseIf lBxLiq   // Se houver baixa por Liquidacao
		Help(" ",1,"BXLIQUIDAC")
	Elseif FunName() <> "FINA074" .and. cPaisLoc <> "BOL"
		Help(" ",1,"TITFATURAD")
	EndIF
	dbSelectArea("SE1")
	Return
EndIf


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Pega os Valores da Baixa Escolhida                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dBaixa     := aBaixaSE5[nOpBaixa,07]
dDataCrd   := aBaixaSE5[nOpBaixa,10]
cSequencia := aBaixaSE5[nOpBaixa,09]
cBanco     := aBaixaSE5[nOpBaixa,11]
cAgencia   := aBaixaSE5[nOpBaixa,12]
cConta     := aBaixaSE5[nOpBaixa,13]
cChave     := SE1->E1_PREFIXO+SE1->E1_NUM+ ( PADR(SE1->E1_PARCELA , nTamE1Parc) ) +SE1->E1_TIPO+;
										Dtos(dBaixa)+SE1->E1_CLIENTE+SE1->E1_LOJA+cSequencia
cHist070   := ""
cMot070    := ""
lCtbBaixa  := .F.
nBaixa     := Len(aBaixa)

// fluxo por natureza
lFlxUltBaixa := nOpBaixa == Len(aBaixaSE5)

//Verifica se existem os campos de valores de acrescimo e decrescimo no SE5
lAcreDecre := .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se data do movimento ‚ menor que data limite de     ³
//³ movimentacao no financeiro                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
// Depois de conversar com a liderança da inovação, ficou claro que o parametro MV_DATAFIN
// foi criado para definir uma data para impedir a ATUALIZAÇÃO DE SALDO de um banco
// Logo, caso seja um cancelamento, a atualização de saldo é na data base e
// caso uma exclusão, será exclusão do movimento na data da movimentação (tem que impedir baseando-se na data do movimento)

If nOpcx == 5 // cancelamento
	If SuperGetMv("MV_BXDTFIN",,"1") == "2" .and.!DtMovFin(,,"2")
		Return
	Endif
Elseif nOpcx==6 //exclusao
	If SuperGetMv("MV_BXDTFIN",,"1") == "2" .and.!DtMovFin(dBaixa,,"2")
		Return
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se data do cancelamento ‚ menor que a data da baixa ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If dBaixa > dDataBase .And. !GetMv("MV_ANTCRED")
	Help(" ",1,"DTBAIXA")
	Return
Endif

dbSelectArea("SE5")
SE5->(dbSetOrder(2))

cTipoBaixa := "CM/C2/CX/DC/D2/MT/M2/JR/J2/TL/V2/BA/VL/LJ/VA"

For nI := 1 to Len(cTipoBaixa) Step 3

	cType:=Substr(ctipoBaixa,nI,2)

	If SE5->( MsSeek(xFilial("SE5")+cType+cChave))
		If SE5->E5_RECPAG <> "R" .And. !SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG
			PosicMov(xFilial("SE5")+cType+cChave, "R")
		EndIf

		If SE5->E5_SITUACA == "C"
			Loop
		EndIf
		//Registros principais de baixa - verificação de impostos na baixa (PCC - IRRF)
		If cType $ "V2/BA/VL/LJ"
			If lPccBxCR
				If Empty(SE5->E5_PRETPIS)
					nPis 	:= SE5->E5_VRETPIS
					PIS		:= nPis
				Endif
				If Empty(SE5->E5_PRETCOF)
					nCofins := SE5->E5_VRETCOF
					COFINS	:= nCofins
				Endif
				If Empty(SE5->E5_PRETCSL)
					nCsll 	:= SE5->E5_VRETCSL
					CSLL	:= nCsll
				Endif
			Endif
			If lIrPjBxCr
				If Empty(SE5->E5_PRETIRF)
					nIrrf 	:= SE5->E5_VRETIRF
					IRRF    := nIrrf
				Endif
			EndIf
		Endif

		If __lTemMR
			__nTotImp := FinRetBxMR("R", SE5->E5_IDORIG, .T.)
		EndIf

		If cType $ "CM/C2/CX"
			nCorrec := SE5->E5_VALOR
		ElseIf cType $ "DC/D2"
			If lF070DCDes
				nAux := ExecBlock("F070DCDesc",.F.,.F.,{cType,cChave,cSequencia,dBaixa})
				If Valtype(nAux) == "N"
					nDescont := nAux
				EndIf
			Else
				If ( cPaisLoc <> "BRA" )
					nDescont := SE5->E5_VLMOED2
				Else
					nDescont := SE5->E5_VALOR
				Endif
			EndIf
		ElseIf cType $ "MT/M2"
			If ( cPaisLoc <> "BRA" )
				nMulta := SE5->E5_VLMOED2
			Else
				nMulta := SE5->E5_VALOR
			Endif
		ElseIf cType $ "JR/J2/TL"
			If lF070JRVlr
				nAux := ExecBlock("F070JRVlr",.F.,.F.,{cType,cChave,cSequencia,dBaixa})
				If Valtype(nAux) == "N"
					nJuros := nAux
				EndIf
			Else
				If ( cPaisLoc == "CHI" )
					nJuros := 0
				ElseIf ( cPaisLoc <> "BRA" )
					nJuros := SE5->E5_VLMOED2
				Else
					nJuros := SE5->E5_VALOR
				Endif
			Endif
			//Valores Acessorios
		ElseIf lPodeTVA .and. lExistVA .and. cType == "VA"
			cKeyVA := xFilial("SE5")+cType+cChave
			While !SE5->(EOF()) .AND. cKeyVA == SE5->(E5_FILIAL+E5_TIPODOC+E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+DtoS(E5_DATA)+E5_CLIFOR+E5_LOJA+E5_SEQ)
				If ( cPaisLoc == "BRA" )
					nVA += SE5->E5_VALOR
				Else
					nVA += xMoeda( SE5->E5_VALOR, nMoedaBco, 1, SE5->E5_DATA,, nTxModBco )
				Endif
				SE5->(dbSkip())
			EndDo
		//Registro principal da baixa
		ElseIf cType $ "V2"
			If funname() == "FINA740" .AND. SE1->E1_DECRESC  > 0
				nValRec := SE5->E5_VALOR + SE1->E1_DECRESC
			Else
				nValRec := SE5->E5_VALOR
			Endif
			cHist070 := SE5->E5_HISTOR
			cHistCan070:= STR0069 // Cancelamento de baixa
			cMot070 := SE5->E5_MOTBX
			nRecSE5  := SE5->( recno() )
		Elseif cType $ "VL/LJ"
			If cPaisLoc<>"BRA"
				nValRec := SE5->E5_VLMOED2
				nValSE5 := SE5->E5_VALOR
			Else
				nValRec := SE5->E5_VALOR
			Endif
			cHist070 := SE5->E5_HISTOR
			cHistCan070:= STR0069 // Cancelamento de baixa
			cMot070 := SE5->E5_MOTBX
			nValorM2 := SE5->E5_VLMOED2
			nRecSE5  := SE5->( recno() )
			dDtDispo := SE5->E5_DTDISPO
			cMultNat	:= SE5->E5_MULTNAT
			cSeqSE5	:= SE5->E5_SEQ
			If lAcreDecre
				nAcresc := SE5->E5_VLACRES
				nDecresc := SE5->E5_VLDECRE
			Endif

			If SE5->(FieldPos("E5_PRORATA")) >0
				nProRata := SE5->E5_PRORATA
			EndIf

			If SE5->(FieldPos("E5_CM1")) >0
				nCM1 := SE5->E5_CM1
			EndIf

			If !lBxLoja
				lBxLoja	 := RTrim(SE5->E5_ORIGEM) == "LOJXREC"
            EndIf

		Elseif cType $ "BA"
			If cPaisLoc<>"BRA"
				nValRec := SE5->E5_VLMOED2
				nValSE5 := SE5->E5_VALOR
			Else
				nValRec  := SE5->E5_VALOR
			Endif
			cHist070 := SE5->E5_HISTOR
			cHistCan070:= IIF(Empty(SE5->E5_LOTE),STR0069,STR0116+SE5->E5_LOTE) // Cancelamento de baixa###"Canc Baixa Lote "
			cMot070  := SE5->E5_MOTBX
			cLoteFin := SE5->E5_LOTE
			cLA      := SE5->E5_LA
			nValorM2 := SE5->E5_VLMOED2
			nRecSE5  := SE5->( recno() )
			dDtDispo := SE5->E5_DTDISPO
			cMultNat	:= SE5->E5_MULTNAT
			nDescont := SE5->E5_VLDESCO
			cSeqSE5	:= SE5->E5_SEQ
			If lAcreDecre
				nAcresc := SE5->E5_VLACRES
				nDecresc := SE5->E5_VLDECRE

				//baixa que foi feita total precisa ter o juros retomado na cencelamento de baixa
				// caso contrario dara diferenca no saldo do titulo
				If (FwIsInCallStack("LjRecCancBx")) .AND. SE1->E1_VALOR == (SE5->E5_VALOR -SE5->E5_VLJUROS)
					nJuros := SE5->E5_VLJUROS
				EndIf
			Endif

			If !lBxLoja
				lBxLoja	 := RTrim(SE5->E5_ORIGEM) == "LOJXREC"
            EndIf
		EndIf

		nMoedaSE5 := Val(SE5->E5_MOEDA)

		lCtbBaixa := If("S"$SE5->E5_LA,.T.,lCtbBaixa)

		If lCtbBaixa
			lBxLoja := FwIsInCallStack("LjRecCancBx")
		EndIf

		aadd(aBaixaSE3,{ SE5->E5_MOTBX , SE5->E5_SEQ , SE5->(Recno()) })
	EndIf

Next nI

If nCM1 > 0
	nJuros -= nCM1
Else
	nDescont += nCM1
EndIf

If nProRata > 0
	nJuros -= nProRata
Else
	nDescont += nProRata
EndIf

cHistCan070:= PadR(cHistCan070,TamSx3("E5_HISTOR")[1])
SE5->( dbGoTo( nRecSE5 ) )

//Nao permitir o cancelamento de titulos cuja baixa foi feita pelos motivos Distrato e Aditivos - Integracao Tin x Protheus
If Upper(AllTrim(SE5->E5_MOTBX))== "TIN"  .And. AllTrim(SE1->E1_ORIGEM)== "FINI055"
	HELP(" ",1,"ProtheusXTIN" ,,STR0229,2,0)//"Títulos baixados por DISTRATO ou ADITIVO na Integração Protheus X TIN não podem ter a baixa cancelada!"
	Return
Endif

//Não permitir o cancelamento de titulos cuja baixa tenha sido feita pelo controle de lojas - lojxrec e o cancelamento não esteja sendo feito pelo lojxrec
If lBxLoja .AND. !FwIsInCallStack("LjRecCancBx")
	HELP(" ",1,"NoCancBxLoj" ,,STR0283,1,0)//"Título baixado através da rotina de Recebimento do Controle de Lojas. O cancelamento/exclusão da baixa só pode ser realizado através da opção Estornar da rotina de Recebimento do Controle de Lojas"
	Return
EndIf

//Nao permito cancelamento de baixa se a mesma foi conciliada e se
//o parametro MV_BXCONC estiver como 2(Padrao) - Nao permite
If !lBxConc

	lConciliado := .F.

	If !Empty(SE5->E5_RECONC)
		lConciliado := .T.
	Endif

	//Titulo baixado em bordero com movimento bancario totalizador
	If !lConciliado .and. !Empty(SE5->E5_DOCUMEN) .and. !Empty(SE5->E5_LOTE) .and. lBxCnab
		dbSelectArea("SE5")
		SE5->(dbSetOrder(5))
		cLoteBx := SE5->E5_LOTE
		If SE5->(MsSeek(xFilial("SE5")+cLoteBx+Space(nTamTit)))
			// Percorre movimentacoes de baixa, pelo lote e mesmo titulo do bordero e checa se existe reconciliacao bancaria
			Do While SE5->( !EoF() .And. E5_FILIAL+E5_LOTE+E5_PREFIXO+E5_NUMERO == xFilial("SE5")+cLoteBx+Space(nTamTit) )
				If SE5->E5_RECPAG == "R" .And. !Empty(SE5->E5_RECONC) .And. SE5->E5_TIPODOC != "ES"
					lConciliado := .T.
					Exit
				EndIf
				SE5->(dbSkip())
			EndDo
		Endif
	Endif

	//Titulo baixado por lote
	If !lConciliado .and. Empty(SE5->E5_DOCUMEN) .and. !Empty(SE5->E5_LOTE) .and. lBxCnab
		dbSelectArea("SE5")
		SE5->(dbSetOrder(2))
		If SE5->(MsSeek(xFilial("SE5")+"BL"+Space(nTamTit2)+DTOS(SE5->E5_DATA)))
			cKeyLote := xFilial("SE5")+"BL"+Space(nTamTit2)+DTOS(SE5->E5_DATA)
			While SE5->(!Eof()) .and. cKeyLote == xFilial("SE5")+"BL"+Space(nTamTit2)+DTOS(SE5->E5_DATA)
				If RIGHT(Alltrim(SE5->E5_HISTOR),4) == cLoteFin .and. !Empty(SE5->E5_RECONC)
					lConciliado := .T.
					Exit
				Else
					dbSkip()
				Endif
			Enddo
		Endif
	Endif

	If lConciliado
		Help(" ",1,"BXCONCIL")
		dbSelectArea("SE1")
		Return
	Endif
Endif

// Template GEM, nova linha do rodape para os campos especificos do template.
If lGemInUse .and. (SE5->E5_MOTBX $ "CSS;DIS")
	MsgAlert(STR0275)	//"Este título foi baixado por uma rotina automatica(Cessao de Direito ou Distrato) do Template GEM e não poderá ser cancelada sua baixa."
	Return
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso o motivo de baixa seja "CNF"- Cancelamento de Nota Fatura ³
//³ e o moduto for diferente de 65 (SIGAGAV - Gestao Advocaticia), ³
//³ nao permito o cancelamento da baixa.                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Alltrim(Upper(cMot070)) == "CNF" .And. nModulo <> 65
	Help(" ",1,"FA070GAV",,STR0188+Chr(13)+Chr(10)+Chr(13)+Chr(10)+STR0189, 1, 0 )
	Return
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se foi utilizada taxa contratada para moeda > 1          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc<>"BRA"
	nTxMoeda:= SE5->E5_TXMOEDA
Else
	If SE1->E1_MOEDA > 1
		If !Empty(SE5->E5_TXMOEDA)
			nTxMoeda := SE5->E5_TXMOEDA
		Else
			If Round(NoRound(xMoeda(nValRec,nMoedaBco,SE1->E1_MOEDA,dBaixa,3),3),2) != SE5->E5_VLMOED2
				nTxMoeda := SE5->E5_VALOR / SE5->E5_VLMOED2
			Else
				nTxMoeda := RecMoeda(dBaixa,SE1->E1_MOEDA)
			Endif
		EndIf
	Else
		nTxMoeda := RecMoeda(dBaixa,SE1->E1_MOEDA)
	EndIf
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Caso moeda == 1 a funcao RecMoeda iguala nTxMoeda = 0. Iguala-se   ³
//³nTxMoeda = 1 p/ evitar problema c/ calculos de abatimento e outros.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nTxMoeda := IIF(nTxMoeda == 0 , 1 , nTxMoeda)

//ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se foi ja foi gerado cheque para esta baixa; se o cheque ³
//³ ja foi gerado nao permite o cancelamento								  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If (SE5->E5_TIPO $ MV_CRNEG+"/"+MVRECANT)
	dbSelectArea("SEF")
	dbSetOrder(3)
	If SEF->(DbSeek(xFilial()+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO))
		cSeqSe5 := SE5->E5_SEQ
		lCheque := .F.
		cEfImpress := ""
		While SEF->( !Eof()) .and. EF_FILIAL == xFilial() 		.and. ;
				EF_TITULO == SE5->E5_NUMERO	.and. ;
				EF_PARCELA== SE5->E5_PARCELA .and. ;
				EF_PREFIXO== SE5->E5_PREFIXO .and. ;
				EF_TIPO   == SE5->E5_TIPO
			If Str(SE5->E5_VALOR,17,2)	 == Str(SEF->EF_VALOR,17,2)	.And.;
				SEF->EF_SEQUENC == cSeqSe5			.And.;
				SE5->E5_CLIFOR  == SEF->EF_FORNECE
				cEfImpress	:= SEF->EF_IMPRESS
				// Permite a baixa se houver cheque cancelado.
				IF SEF->EF_IMPRESS # "C"
					lCheque		:= .T.
					cNumCheq		:= SEF->EF_NUM
					Exit
				Endif
			Endif
			SEF->( dbSkip() )
		End
	Endif

	dbSelectArea("SEF")
	dbSetOrder(1)

	If (lCheque .and. !Empty(cNumCheq)) .Or. (!Empty(SE1->E1_NUMBCO) .and. !Empty(cEfImpress))
		Help(" " , 1 , "FA080TEMCH")
		dbSelectArea("SE1")
		Return
	Endif
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se foi gerado cheque para esta baixa. Se o cheque já		³
//³ foi compensado, ele nao permitirá o cancelamento até que seja    ³
//³ feito o estorno pela rotina de cheques recebidos.	   			   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If GetMv("MV_SLDBXCR") == "C"		// Controla saldo na compensacao do cheque
	dbSelectArea("SEF")
	SEF->(dbSetOrder(3))
	If SEF->(MsSeek(xFilial("SEF")+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO))
		cSeqSe5 := SE5->E5_SEQ
		lCheque := .F.
		While SEF->(!Eof()) .and. SEF->EF_FILIAL == xFilial() .And. ;
				SEF->EF_TITULO == SE5->E5_NUMERO	.And. ;
				SEF->EF_PARCELA== SE5->E5_PARCELA .And. ;
				SEF->EF_PREFIXO== SE5->E5_PREFIXO .And. ;
				SEF->EF_TIPO   == SE5->E5_TIPO
			If Str(SE5->E5_VALOR,17,2)	 == Str(SEF->EF_VALOR,17,2)	.And.;
				SEF->EF_SEQUENC == cSeqSe5			.And.;
				SEF->EF_CLIENTE == SE5->E5_CLIFOR
				If !Empty(SEF->EF_DTCOMP)
           		lCheque := .T.
					Exit
				EndIf
			Endif
			SEF->(dbSkip())
		EndDo
	Endif
	dbSelectArea("SEF")
	dbSetOrder(1)
	If lCheque
		HELP(' ',1,"F070CHCOMP",,	STR0206+Chr(13)+Chr(10)+;		//"Esta baixa não poderá ser cancelada ou"
											STR0207+Chr(13)+Chr(10)+;		//"excluída, pois possui um cheque vínculado"
											STR0208+Chr(13)+Chr(10)+;		//"que já foi compensado. Será necessário"
											STR0209,1,0)						//"fazer o estorno da compensação."
		dbSelectArea("SE1")
		Return
	EndIf
EndIf

SE5->( dbGoTo( nRecSE5 ) )

dbSelectArea("SE1")

nI :=  Ascan(aMotBx, {|x| Substr(x,1,3) == Upper(cMot070) })
cDescrMo := if( nI > 0,Substr(aMotBx[nI],07,10),"" )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Mostra dados cadastrais,e referentes a baixa                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nOpc1 := 0
SA1->(MsSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA))
cMoeda      := IIF(Empty(SE1->E1_MOEDA),"1",AllTrim(Str(SE1->E1_MOEDA,2)))
cNomeCli    := SE1->E1_CLIENTE + " - " + Subst(SA1->A1_NOME,1,40)
cTitulo 		:= SE1->E1_PREFIXO + " " + SE1->E1_NUM+ " " + SE1->E1_PARCELA
cSituacao   := SE1->E1_SITUACA + " " + fa070situa()
cDescMoeda  := SubStr(GetMV("MV_SIMB"+cMoeda),1,3)

If lSpbInUse
	cModSpb	:= IIF(!Empty(SE5->E5_MODSPB),SE5->E5_MODSPB,"1")
	cDescSpb := aModalSpb[Val(cModSpb)]
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Recebe os dados do t¡tulo a ser baixado                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

IF lF070Cancel
	aCancel :=  ExecBlock("F070CANCEL",.f.,.f.,{nTotAbLiq,nTotAbImp,nValorM1,nCM1,nDescont,nMulta,nJuros})
	nTotAbLiq := aCancel[1][1]
	nTotAbImp:= aCancel[1][2]
	nValorM1 := aCancel[1][3]
	nCM1 := aCancel[1][4]
	nDescont := aCancel[1][5]
	nMulta := aCancel[1][6]
	nJuros := aCancel[1][7]
EndIf

//Se nao for adiantamento, verifico os abatimentos
If !SE1->E1_TIPO $ MVRECANT + "/"+MV_CRNEG .AND. lF70ALTABAT


	nTotAbat := nTotAbImp
Endif

If ! lF070Auto

	DEFINE FONT oFontLbl NAME "Arial" SIZE 6, 15 BOLD

	DEFINE MSDIALOG oDlg FROM  59,33 TO 604,581 TITLE STR0074 PIXEL OF oMainWnd  //"Cancelamento da Baixa a Receber"

	//Faz o calculo automatico de dimensoes de objetos
	oSize := FwDefSize():New(.T.,,,oDlg)

	oSize:lLateral := .F.
	oSize:lProp	:= .T. // Proporcional

	oSize:AddObject( "1STROW" ,  100, 19, .T., .T. ) // Totalmente dimensionavel
	oSize:AddObject( "2NDROW" ,  100, 81, .T., .T. ) // Totalmente dimensionavel

	oSize:Process() // Dispara os calculos

	a1stRow := {oSize:GetDimension("1STROW","LININI"),;
				oSize:GetDimension("1STROW","COLINI"),;
				oSize:GetDimension("1STROW","LINEND"),;
				oSize:GetDimension("1STROW","XSIZE")}

	a2ndRow := {oSize:GetDimension("2NDROW","LININI"),;
				oSize:GetDimension("2NDROW","COLINI"),;
				oSize:GetDimension("2NDROW","LINEND"),;
				oSize:GetDimension("2NDROW","XSIZE")}

	@ a1stRow[1] + 000, a1stRow[2] + 000 GROUP oGrp1 TO a1stRow[3], (a1stRow[4]-15) LABEL STR0008 OF oDlg PIXEL //"Principal"
	@ a2ndRow[1] + 000, a2ndRow[2] + 000 GROUP oGrp2 TO a2ndRow[3] + 001, 135 LABEL STR0009 OF oDlg  PIXEL //"Dados Gerais"
	@ a2ndRow[1] + 000, a2ndRow[2] + 139 GROUP oGrp3 TO a2ndRow[3] + 001, (a2ndRow[4]-15) LABEL STR0010 OF oDlg  PIXEL //"Valores da Baixa"

	//////////////////
	//DADOS DO TITULO
	@ a1stRow[1] + 008, a1stRow[2] + 004 SAY STR0211			SIZE 31,07 OF oDlg PIXEL //Prefixo
	@ a1stRow[1] + 008, a1stRow[2] + 027 MSGET SE1->E1_PREFIXO	SIZE 25,08 OF oDlg PIXEL When .F.
	@ a1stRow[1] + 008, a1stRow[2] + 060 SAY STR0212 			SIZE 31,07 OF oDlg PIXEL //Numero
	@ a1stRow[1] + 008, a1stRow[2] + 085 MSGET SE1->E1_NUM		SIZE 70,08 OF oDlg PIXEL When .F.
	@ a1stRow[1] + 008, a1stRow[2] + 165 SAY STR0213 			SIZE 31,07 OF oDlg PIXEL //Parcela
	@ a1stRow[1] + 008, a1stRow[2] + 188 MSGET SE1->E1_PARCELA	SIZE 25,08 OF oDlg PIXEL When .F.
	@ a1stRow[1] + 008, a1stRow[2] + 220 SAY STR0214			SIZE 31,07 OF oDlg PIXEL //Tipo
	@ a1stRow[1] + 008, a1stRow[2] + 238 MSGET oTipo VAR cTipo	F3 "SE1RDO" SIZE 30,08 OF oDlg PIXEL HASBUTTON
	oTipo:lReadOnly := .T.

	@ a1stRow[1] + 020, a1stRow[2] + 004 SAY STR0014 SIZE 22,07 OF oDlg PIXEL //"Cliente"
	@ a1stRow[1] + 020, a1stRow[2] + 027 MSGET oCodCli VAR SE1->E1_CLIENTE F3 "SA1" SIZE 70,08 OF oDlg PIXEL HASBUTTON
	oCodCli:lReadOnly := .T.
	@ a1stRow[1] + 020, a1stRow[2] + 105 MSGET SA1->A1_NOME SIZE 165,08 OF oDlg PIXEL When .F.

	@ a1stRow[1] + 032, a1stRow[2] + 004 SAY STR0052 			SIZE 31,07 OF oDlg PIXEL //"Natureza"
	@ a1stRow[1] + 032, a1stRow[2] + 027 MSGET oNaturez VAR SE1->E1_NATUREZ	F3 "SED" SIZE 70,08 OF oDlg PIXEL HASBUTTON

	oNaturez:lReadOnly := .T.
	@ a1stRow[1] + 032, a1stRow[2] + 105 SAY STR0012 			SIZE 31,07 OF oDlg PIXEL //"Emiss„o"
	@ a1stRow[1] + 032, a1stRow[2] + 133 MSGET SE1->E1_EMISSAO	SIZE 48,08 OF oDlg PIXEL HASBUTTON When .F.
	@ a1stRow[1] + 032, a1stRow[2] + 189 SAY STR0013 			SIZE 49,07 OF oDlg PIXEL //"Vencto.Atual"
	@ a1stRow[1] + 032, a1stRow[2] + 222 MSGET SE1->E1_VENCREA	SIZE 48,08 OF oDlg PIXEL HASBUTTON When .F.

	//////////////////
	//DADOS GERAIS
	nUltLin := 10 + a2ndRow[1]
	@ nUltLin,005 SAY STR0015 					SIZE 35, 07 OF oDlg PIXEL //"Hist.Emiss„o"
	@ nUltLin,065 MSGET SE1->E1_HIST			SIZE 65, 08 OF oDlg PIXEL When .F.

	nUltLin += 12
	@ nUltLin,005 SAY STR0016					SIZE 35, 07 OF oDlg PIXEL //"Situa‡„o"
	@ nUltLin,065 MSGET cSituacao				SIZE 65, 08 OF oDlg PIXEL When .F.

	nUltLin += 12
	@ nUltLin,005 SAY STR0023					SIZE 35, 07 OF oDlg PIXEL //"Mot.Baixa"
	@ nUltLin,065 MSGET cDescrMo				SIZE 65, 08 OF oDlg PIXEL When .F.

	nUltLin += 12
	@ nUltLin,005 SAY STR0017 					SIZE 35, 07 OF oDlg PIXEL //"Banco"
	@ nUltLin,065 MSGET oNumBco VAR cBanco		SIZE 65, 08 OF oDlg PIXEL F3 "SA6" HASBUTTON
	oNumBco:lReadOnly := .T.

	nUltLin += 12
	@ nUltLin,005 SAY STR0018					SIZE 35, 07 OF oDlg PIXEL //"Agˆncia"
	@ nUltLin,065 MSGET cAgencia				SIZE 65, 08 OF oDlg PIXEL  When .F.

	nUltLin += 12
	@ nUltLin,005 SAY STR0019					SIZE 35, 07 OF oDlg PIXEL //"Conta"
	@ nUltLin,065 MSGET cConta					SIZE 65, 08 OF oDlg PIXEL  When .F.

	nUltLin += 12
	@ nUltLin,005 SAY STR0020					SIZE 35, 07 OF oDlg PIXEL//"Data Receb."
	@ nUltLin,065 MSGET dBaixa					SIZE 65, 08 OF oDlg PIXEL HASBUTTON When .F.

	nUltLin += 12
	@ nUltLin,005 SAY STR0022					SIZE 35, 07 OF oDlg PIXEL //"Hist.Baixa"
	@ nUltLin,065 MSGET cHist070				SIZE 65, 08 OF oDlg PIXEL When .F.

	nUltLin += 12
	@ nUltLin,005 SAY STR0171					SIZE 35, 07 OF oDlg PIXEL //"Hist.Cancel."
	@ nUltLin,065 MSGET cHistCan070				SIZE 65, 08 OF oDlg PIXEL

	nUltLin += 12
	@ nUltLin,005 SAY STR0172					SIZE 100, 07 OF oDlg PIXEL //"Cancelamento por Dev.Cheque"
	IF lF070CHDV
		@ nUltLin,090 CHECKBOX oChqCan VAR lChqDev := IIF(lF070CHDV, ExecBlock("F070CHDV",.F.,.F.),.F.) PROMPT "" SIZE 11,11 OF oDlg PIXEL
	ELSE
		@ nUltLin,090 CHECKBOX oChqCan VAR lChqDev PROMPT "" SIZE 11,11 OF oDlg PIXEL
	ENDIF
	If lSpbInUse
		nUltLin += 12
		@ nUltLin,005 SAY STR0140				SIZE 35, 07 OF oDlg PIXEL  //"Modalidade SPB"
		@ nUltLin,065 MSGET cDescSpb 			SIZE 65, 08 OF oDlg PIXEL When .F.
	Endif

	//////////////////////////
	//DADOS DA BAIXA
	nLinha := 10 + a2ndRow[1]

	@ nLinha,144 SAY STR0027 + cDescMoeda		SIZE 53, 08 OF oDlg PIXEL //"Valor Original"
	@ nLinha,204 MSGET SE1->E1_VALOR			SIZE 65, 08 OF oDlg PIXEL HASBUTTON When .F. Picture PesqPict("SE1","E1_VALOR") //"@E 999,999,999,999.99"

	If cPaisLoc <> "CHI"

		nLinha +=12
		@ nLinha, 144 SAY STR0091				SIZE 53, 08 OF oDlg PIXEL //"- Abatimentos"
		@ nLinha, 204 MSGET nTotAbLiq			SIZE 65, 08 OF oDlg PIXEL HASBUTTON When .F.    Picture PesqPict( "SE1","E1_VALOR" )  //"@E 999,999,999,999.99"

   	If cPaisLoc == "BRA"
   		nLinha +=12
   		@ nLinha,144 SAY STR0186 			SIZE 53, 08 OF oDlg PIXEL // "- Impostos"
   		@ nLinha,204 MSGET nTotAbImp		SIZE 65, 08 OF oDlg PIXEL HASBUTTON When .F.  Picture PesqPict( "SE1","E1_VALOR" )  //"@E 999,999,999,999.99"

   		nLinha +=12
			nValorLiq :=  (SE1->E1_VALOR - nTotAbLiq - nTotAbImp)
			@ nLinha,144 SAY STR0187		SIZE 53, 08 OF oDlg PIXEL // "Valor Liquido"
			@ nLinha,204 MSGET nValorLiq	SIZE 65, 08 OF oDlg PIXEL HASBUTTON When .F. Picture PesqPict("SE1","E1_VLCRUZ") //"@E 999,999,999,999.99"
		EndIf
	EndIf

	nLinha +=12
	IF lF070Cancel = .F.
		nValorM1 := SE1->E1_VALOR-SE1->E1_SALDO
	EndIf
	@ nLinha,144 SAY STR0029					SIZE 53, 08 OF oDlg PIXEL //"- Pagtos Parciais"
	@ nLinha,204 MSGET nValorM1				SIZE 65, 08 OF oDlg PIXEL HASBUTTON When .F.    PicTure PesqPict( "SE1","E1_VALOR" )  //"@E 999,999,999,999.99"

	// Template GEM, campo especifico do template.
	If lGemInUse
		nLinha +=12
		@ nLinha,144 SAY STR0203				SIZE 53, 08 OF oDlg PIXEL // "+ C.M."
		@ nLinha,204 MSGET nCM1 				SIZE 65, 08 OF oDlg PIXEL HASBUTTON When .F. Picture PesqPict( "SE1","E1_JUROS" ) //"@E 999,999,999,999.99"
	EndIf

	nLinha +=12
	@ nLinha, 144 SAY STR0093 					SIZE 53, 08 OF oDlg PIXEL //"- Descontos"
	@ nLinha, 204 MSGET nDescont				SIZE 65, 08 OF oDlg PIXEL HASBUTTON When .F.    Picture PesqPict( "SE1","E1_DESCONT" )  //"@E 999,999,999,999.99"

	// Template GEM, campo especifico do template.
	If lGemInUse
		nLinha +=12
		@ nLinha,144 SAY STR0204 				SIZE 53, 08 OF oDlg PIXEL // "+ Pro Rata"
		@ nLinha,204 MSGET nProRata 			SIZE 65, 08 OF oDlg PIXEL HASBUTTON When .F. Picture PesqPict( "SE1","E1_JUROS" ) //"@E 999,999,999,999.99"
	EndIf

	nLinha +=12
	@ nLinha, 144 SAY STR0094 					SIZE 53, 08 OF oDlg PIXEL //"+ Multa"
	@ nLinha, 204 MSGET nMulta					SIZE 65, 08 OF oDlg PIXEL HASBUTTON When .F.    Picture PesqPict( "SE1","E1_MULTA" )  //"@E 999,999,999,999.99"

	nLinha += 12
	If cPaisLoc <> "CHI"
	   @ nLinha, 144 SAY STR0095 				SIZE 53, 08 OF oDlg PIXEL //"+ Tx.Permanenc."
	   @ nLinha, 204 MSGET nJuros				SIZE 65, 08 OF oDlg PIXEL HASBUTTON When .F.    Picture PesqPict( "SE1","E1_JUROS" )  //"@E 999,999,999,999.99"
	Else
	   @ nLinha, 144 SAY STR0133 				SIZE 53, 08 OF oDlg PIXEL //"- Otros Gastos"
	   @ nLinha, 204 MSGET nOtrga				SIZE 65, 08 OF oDlg PIXEL HASBUTTON When .F.    Picture PesqPict( "SE1","E1_OTRGA" )  //"@E 999,999,999,999.99"
	EndIf
	//Controla IRPJ na baixa
	If cPaisLoc == "BRA" .And. lIrPjBxCr .And. !__lIrfMR
		nLinha +=12
		@ nLinha,144 SAY STR0228  SIZE 53, 07 OF oDlg PIXEL  // "- IRRF"
		@ nLinha,204 MSGET oIrrf VAR nIrrf SIZE 65, 08 OF oDlg PIXEL HASBUTTON When .F. Picture PesqPict( "SE1","E1_IRRF" ); //"@E 999,999,999,999.99"
														 Valid fA070Val(nIrrf,nTxMoeda)

	EndIf

	If cPaisLoc == "BRA" .And. lPccBxCR .And. !__lPccMR  //1-Retem PCC na Baixa ou 2-Retem PCC na Emissão(default)
	   nLinha +=12
	   @ nLinha,144 SAY STR0216 SIZE 53, 07 OF oDlg PIXEL //"- PIS"
	   @ nLinha,204 MSGET oPIS VAR nPIS   SIZE 65, 08 OF oDlg PIXEL HASBUTTON When .F.  Picture PesqPict( "SE1","E1_PIS" ) ; //"@E 999,999,999,999.99"
 	   Valid fA070Val(nPIS,nTxMoeda)

	   nLinha +=12
	   @ nLinha,144 SAY STR0217 SIZE 53, 07 OF oDlg PIXEL //"- COFINS"
	   @ nLinha,204 MSGET oCOFINS VAR nCOFINS   SIZE 65, 08 OF oDlg PIXEL HASBUTTON When .F. Picture PesqPict( "SE1","E1_COFINS" ) ; //"@E 999,999,999,999.99"
 	   Valid fA070Val(nCOFINS,nTxMoeda)

	   nLinha +=12
	   @ nLinha,144 SAY STR0218 SIZE 53, 07 OF oDlg PIXEL //"- CSLL"
	   @ nLinha,204 MSGET oCSLL VAR nCSLL   SIZE 65, 08 OF oDlg PIXEL HASBUTTON When .F. Picture PesqPict( "SE1","E1_CSLL" ) ; //"@E 999,999,999,999.99"
 	   Valid fA070Val(nJuros,nTxMoeda)
	EndIf

	//Valores Acessorios
	If lPodeTVA .and. lExistVA
	 	FAPodeTVA(SE1->E1_TIPO,SE1->E1_NATUREZ,.F.,"R")
		nLinha +=12
		@ nLinha, 144 SAY "+ " + STR0274 	SIZE 53,07 OF oDlg PIXEL		//"Valores Acessórios"
		@ nLinha, 204 MSGET nVA 	SIZE 65,08 OF oDlg PIXEL HASBUTTON When  .F. Picture PesqPict("FKD","FKD_VALOR")
	EndIf

	If __lTemMR .And. __nTotImp > 0
		nLinha +=12
		@ nLinha,144 SAY STR0286	SIZE 53,07 OF oDlg PIXEL //"- Retenções"
		@ nLinha,204 MSGET __oRetMot VAR __nTotImp	SIZE 66, 08 OF oDlg PIXEL HASBUTTON Picture PesqPict("SE1","E1_VALLIQ")  ;
		Valid .T. When .F.
	EndIf
	nLinha += 12
	@ nLinha, 144 SAY STR0097 					SIZE 53, 08 OF oDlg PIXEL //"= Valor Recebido"
	@ nLinha, 204 MSGET iif(cPaisLoc<>"BRA",nValSE5,nValRec)				SIZE 65, 08 OF oDlg PIXEL HASBUTTON  When .F.   Picture PesqPict( "SE1","E1_VALOR" )  //"@E 999,999,999,999.99"

	nOldValRec := Iif(cPaisLoc<>"BRA",nValSE5,nValRec)

	If SE1->E1_MOEDA > 1
	   If cPaisLoc <> "CHI"
			nLinha += 12
			@ nLinha, 144 SAY STR0098 + SubStr(GetMV("MV_SIMB"+cMoeda),1,3) SIZE 53,08 OF oDlg PIXEL //"Valor "
			@ nLinha, 204 MSGET  nValorM2          SIZE 65,08 OF oDlg PIXEL HASBUTTON When .F. Picture PesqPict( "SE1","E1_VALOR" )  //"@E 999,999,999,999.99"
	   Else
			nLinha += 12
		  	@ nLinha, 144 SAY STR0134 				SIZE 53,08 OF oDlg PIXEL //"+/- Dif. Cambio"
		  	@ nLinha, 204 MSGET  nDifCambio		SIZE 65,08 OF oDlg PIXEL HASBUTTON  When .F. Picture PesqPict( "SE1","E1_CAMBIO" )  //"@E 999,999,999,999.99"
	   EndIf
		nLinha += 12
		@ nLinha, 144 SAY STR0096 					SIZE 53,08 OF oDlg PIXEL //"+ Corr.Monet ria"
		@ nLinha, 204 MSGET  nCorrec				SIZE 65,08 OF oDlg PIXEL HASBUTTON  When .F.   Picture PesqPict( "SE1","E1_CORREC" )  //"@E 999,999,999,999.99"
	EndIf

	If lPanelFin
		ACTIVATE MSDIALOG oDlg ON INIT FaMyBar(oDlg,	{|| nOpc1 := 1,oDlg:End()},;
		                                            	{||Iif( ExistBlock("F070CCAN"),;
		                                            	ExecBlock('F070CCAN',.F.,.F.,oDlg:End()),.F.),;
		                                            	 oDlg:End()}) CENTERED
	Else
		ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| nOpc1 := 1,oDlg:End()},;
		                                               	{||Iif( ExistBlock("F070CCAN"), ;
		                                               	ExecBlock('F070CCAN',.F.,.F.,oDlg:End()),.F.), ;
		                                               	oDlg:End()}) CENTERED
  	Endif

Else
	If VisualSX3("E5_HISTOR") .AND. (nx := aScan(aAutoCab,{|x|Upper(x[1])=="AUTHIST"})) > 0
    	aAdd(aValidGet,{"cHist070",aAutoCab[nx][2],"CheckSX3('E5_HISTOR')",.T.})
 	Endif
    If Len(aValidGet) > 0 .AND. SE1->(MsVldGAuto(aValidGet))
    	If (nx := aScan(aValidGet,{|x|Upper(x[1])=="CHIST070"})) > 0
	    	If !Empty(aValidGet[nx][2])
	        	cHistCan070 := PadR(aValidGet[nx][2],TamSx3("E5_HISTOR")[1])
			Endif
		Endif
	Endif
	nOpc1 := 1
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se n„o ‚ a ultima baixa efetuada                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lCanc070Bx
	If nOpBaixa != Len(aBaixa)
		Help(" ",1,"A070NAOPODE")
		Return
	Endif
Endif

// Baixas por transferencia nao podem ser canceladas.
If Alltrim(Upper(cMot070)) == "TRF" .and. Alltrim(Upper(FunName())) != "FINA630" .And. !Empty(SE1->E1_NUMSOL)
	Help(" ",1,"A070NAOPODE",,STR0169, 4, 0 ) // "Baixas efetuadas por transferência"+CHR(13)+	"não podem ser canceladas"
	Return
Endif

SE5->( dbGoTo( nRecSE5 ) )
IF nOpc1 == 1
	If __lTemMR
    	cChaveAux := FWxFilial( "SE1", SE1->E1_FILORIG ) + "|" + SE1->E1_PREFIXO + "|" + SE1->E1_NUM + "|" + SE1->E1_PARCELA + "|" + SE1->E1_TIPO + "|" + SE1->E1_CLIENTE + "|" + SE1->E1_LOJA
		cIdTit := FINGRVFK7( "SE1", cChaveAux )

		//FK1
		cQry := "SELECT FK1_IDDOC, FK1_IDFK1 FROM " + RetSqlName('FK1') + " FK1 "
		cQry += " WHERE FK1_IDDOC = '" + cIdTit+ "' "
		cQry += " AND D_E_L_E_T_ = ' ' "
		cQry := ChangeQuery(cQry)

		cAliasQry := GetNextAlias()
		dbUseArea( .T., "TOPCONN", TcGenQry(,,cQry), cAliasQry, .F., .T. )

		While !((cAliasQry)->(EOF()))

			cIdFK3 := (cAliasQry)->FK1_IDFK1
			cIdDoc := (cAliasQry)->FK1_IDDOC
			If cIdDocOld == cIdDoc
				lIdDoc := .T.
			Endif

			//FK3
			cQryFK3 := "SELECT FK3_IDFK3, FK3_IDORIG, FK3_IDRET FROM " + RetSqlName('FK3') + " FK3 "
			cQryFK3 += " WHERE FK3_IDORIG = '" + cIdFK3+ "' "
			cQryFK3 += " AND FK3_STATUS = '1' "
			cQryFK3 += " AND FK3_RECPAG = 'R' "
			cQryFK3 += " AND D_E_L_E_T_ = ' ' "
			cQryFK3 := ChangeQuery(cQryFK3)

			cAliasFK3 := GetNextAlias()
			dbUseArea( .T., "TOPCONN", TcGenQry(,,cQryFK3), cAliasFK3, .F., .T. )

			If (cAliasFK3)->FK3_IDRET <> " "
				lFK3Ret := .T.
			Endif
			cIdFK4 := cIdFK3
			(cAliasFK3)->(DbCloseArea())

			//FK4
			cQryFK4 := "SELECT FK4_IDFK4, FK4_IDORIG FROM " + RetSqlName('FK4') + " FK4 "
			cQryFK4 += " WHERE FK4_IDORIG = '" + cIdFK4+ "' "
			cQryFK4 += " AND FK4_STATUS = '1' "
			cQryFK4 += " AND FK4_RECPAG = 'R' "
			cQryFK4 += " AND D_E_L_E_T_ = ' ' "
			cQryFK4 := ChangeQuery(cQryFK4)

			cAliasFK4 := GetNextAlias()
			dbUseArea( .T., "TOPCONN", TcGenQry(,,cQryFK4), cAliasFK4, .F., .T. )

			cIdDocOld:= cIdDoc

			(cAliasQry)->(DBSKIP())
		Enddo

		DbSelectArea("FK4")
		FK4->(DbSetOrder(1)) //FK3_FILIAL, FK3_TABORI, FK3_IDORIG


		If !IsBlind() .And. lFK3Ret .And. !lIdDoc  .And. !DbSeek(xFilial("FK4")+ (cAliasFK4)->FK4_IDFK4)
			If !MSGNoYes(STR0294)//"Este titulo possui impostos retidos em outro titulo e os impostos não serão recalculados,deseja continuar?"
				Return
			Endif
		EndIf

		If !Empty(cAliasFK4)
			(cAliasFK4)->(DbCloseArea())
		EndIf
		(cAliasQry)->(DbCloseArea())
	Else
	 	lCpRet:= SLDRMSG(If(lPccBxCr,dDatabase,SE1->E1_EMISSAO), nValRec,SE1->E1_NATUREZ,"R",SE1->E1_CLIENTE,SE1->E1_LOJA,SE1->E1_TIPO)
		If !IsBlind() .And. lCpRet
			If !MSGNoYes(STR0266)//"Este titulo possui PIS/COFINS/CSLL retidos em outro titulo e os impostos não serão recalculados,deseja continuar?"
				Return
			Endif
		Endif
	Endif

	// Obtem a moeda do banco
	If Select("SA6") > 0
		nOrdSA6:=SA6->(IndexOrd())
		SA6->(DbSetOrder(1))
		SA6->(MsSeek(xFilial("SA6")+cBanco+cAgencia+cConta))
		nMoedaBco:= Max(SA6->A6_MOEDA,1)
		SA6->(DbSetOrder(nOrdSA6))
	EndIf

	If nCM1 > 0
		nJuros += nCM1
	Else
		nDescont -= nCM1
	EndIf

	If nProRata > 0
		nJuros += nProRata
	Else
		nDescont -= nProRata
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ PONTO DE ENTRADA - Confirmacao Exclusao     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lFa070Ca4T
		lRet := ExecTemplate('FA070CA4',.F.,.F.,nOpcx)
	Endif

	If lFa070Ca4
		lRet := ExecBlock('FA070CA4',.F.,.F.,nOpcx)
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Consiste MV_DATAFIN antes de cancelar baixa ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRet	.and. SuperGetMv("MV_BXDTFIN",,"1") == "2"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ A data da baixa deve ser passada como parametro, pois tanto ³
		//³ o cancelamento como a exclusao devem ser validados pela     ³
		//³ data de baixa e nao pela data base do sistema.              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		// Depois de conversar com a liderança da inovação, ficou claro que o parametro MV_DATAFIN
		// foi criado para definir uma data para impedir a ATUALIZAÇÃO DE SALDO de um banco
		// Logo, caso seja um cancelamento, a atualização de saldo é na data base e
		// caso uma exclusão, será exclusão do movimento na data da movimentação (tem que impedir baseando-se na data do movimento)

		If nOpcx == 5 // cancelamento
			lRet := DtMovFin(,,"2")
		Elseif nOpcx==6 //exclusao
			lRet := DtMovFin(dBaixa,,"2")
		Endif
	Endif

	If lRet // Valido se a baixa tem comissão paga.
		If cPaisLoc ==  "BRA" .And. lFVldExcCom
			lRet := FVldExcCom(SE1->E1_FILIAL,SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_TIPO,.F.,,SE5->E5_SEQ, lF070Auto)
		Endif
	Endif

	If !lRet
		Return
	EndIf

	If cPaisLoc <> "BRA"
		nValPadrao := nValRec-(nJuros + nVA+nMulta+Iif(SE1->E1_MOEDA<=1,nCorrec,0)-nDescont-nOtrga)
	Else
		nTotAbat := NoRound(nTotAbat * nTxMoeda,3)
		nValPadrao := nValRec-(nJuros+nMulta+Iif(SE1->E1_MOEDA<=1,nCorrec,0)-nDescont ) + SE1->E1_PIS + SE1->E1_COFINS + SE1->E1_CSLL + SE1->E1_IRRF
		If SE1->E1_MOEDA > 1
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Caso a Moeda seja > 1, converte o valor para atualiza‡„o do  ³
			//³ cadastro do Cliente a partir do valor da moeda estrangeira   ³
			//³ convertida p/ moeda 1 na Data de Emiss„o do t¡tulo, pois pode³
			//³ ser efetuada uma baixa informando taxa contratada.           ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nValPadrao := nValorM2-(Round(NoRound(xMoeda(nJuros + nVA+nMulta-nDescont-nOtrga,nMoedaBco,SE1->E1_MOEDA,dBaixa,3),3),2))
			nValPadrao := Round(NoRound(xMoeda(nValPadrao,SE1->E1_MOEDA,nMoedaBco,SE1->E1_EMISSAO,3),3),2)
		Endif
    Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicia a gravacao dos lancamentos - SIGAPCO ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoIniLan("000004")

	If nModulo == 12  // SIGALOJA Não atualiza saldo do cliente padrão
		If AllTrim(SE1->E1_CLIENTE) + AllTrim(SE1->E1_LOJA) == AllTrim(SuperGetMv("MV_CLIPAD",,"")) + AllTrim(SuperGetMv("MV_LOJAPAD",,""))
			lBloqSa1 := .F.
		EndIf
	EndIf

	If lTravaSa1
		lBloqSa1 := ExecBlock("F070TRAVA",.f.,.f.)
	Endif

	If lOracle .and. mv_par01 == 1 .and. MV_PAR04 == 1
		Private aAltera	:= {}
		Private aHeader	:= {}
		CtbCrTmpBD()
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicio da prote‡„o via TTS                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Begin Transaction
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Posiciona no registro de natureza                            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SED")
		MsSeek(xFilial("SED")+SE1->E1_NATUREZ)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Posiciona no registro do cliente e Estorna Atraso Medio.    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SA1->( MsSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA) ) .And. FunName() <> "FINA074"
			If !(SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG)
				If lBloqSa1
					RecLock("SA1",.F.)
					If ( SE1->E1_BAIXA - SE1->E1_VENCREA) > 0
						SA1->A1_PAGATR := IiF(SA1->A1_PAGATR ==0,0,SA1->A1_PAGATR-SE1->E1_VALLIQ)   // Pagamentos Atrasados
					EndIF
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Atualiza o Cadastro de Clientes                             ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					SA1->A1_NROPAG := SA1->A1_NROPAG-1  //Numero de Duplicatas
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Atualiza media de atrasos                                   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					SA1->A1_METR   :=  (SA1->A1_METR * (SA1->A1_NROPAG+1) - (SE1->E1_BAIXA - SE1->E1_VENCREA)) / SA1->A1_NROPAG
					SA1->(MsUnLock())
				EndIf
				AtuSalDup("+",(nValPadrao),1,SE1->E1_TIPO,,SE1->E1_EMISSAO,,lBloqSa1)
			Else
				AtuSalDup("-",(nValPadrao),1,SE1->E1_TIPO,,SE1->E1_EMISSAO,,lBloqSa1)
			Endif
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Gera backup dos valores da baixa (para cancelamento baixa parcial)³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nSe1ValLiq  := SE1->E1_VALLIQ
		nSe1Descont := SE1->E1_DESCONT
		nSe1Multa   := SE1->E1_MULTA
		nSe1Juros   := SE1->E1_JUROS
		nSe1Correc  := SE1->E1_CORREC

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Grava novos valores do cancelamento da baixa parcial              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		RecLock("SE1")
		If 	lPccBxCR .and. !lBq10925 .and. !__lPccMR
			If lImpBxCr .And. SE5->E5_PRETPIS == "1"
				nValRec += SE5->(E5_VRETPIS + E5_VRETCOF + E5_VRETCSL)
			Else
				nValRec += nPis + nCsll + nCofins
			EndIf
		ElseIf lPccBxCR .and. lBq10925 .and. !__lPccMR
			nValRec += nPis + nCsll + nCofins
		EndIf
		If lIrPjBxCr .and. !__lIrfMR
			nValRec += nIrrf
		EndIf

		If __lTemMR
			nValRec += __nTotImp
		Endif

		If !AllTrim(SE1->E1_ORIGEM) $ "L|S|T"
			SE1->E1_DESCONT := nDescont
		EndIf

		If lLojPdv
			SE1->E1_DESCONT := 0
			SE1->E1_MULTA   := 0
			SE1->E1_JUROS   := 0
		Else
			SE1->E1_VALLIQ  := nValRec
			SE1->E1_DESCONT := nDescont
			SE1->E1_MULTA   := nMulta
			SE1->E1_JUROS   := nJuros-nAcresc
			SE1->E1_CORREC  := nCorrec
		EndIf

		If lChqDev
			SE1->E1_CHQDEV := "1"
       Else
			SE1->E1_CHQDEV := " "
		Endif

		SE1->(MsUnlock())
		ABATIMENTO 		 := nTotAbat
		//Atualiza o status de viagem
		If (ALLTRIM(SE1->E1_ORIGEM) == "FINA677")
			FINATURES(SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO+E1_CLIENTE+E1_LOJA),.F.,SE1->E1_ORIGEM,"R")
		Endif


		//Atualiza o Status da tabela FJP - Processamento MCMV
		IF cPaisLoc == "BRA"
			aAreaSE1 := GetArea()
			dbSelectArea("FJP")
			FJP->(DbSetOrder(4))

			If FJP->(MsSeek(xFilial("SE1")+ SE1->E1_PREFIXO + "|" + SE1->E1_NUM     + "|" + SE1->E1_PARCELA + "|" + ;
			  				            SE1->E1_TIPO  + "|" + SE1->E1_CLIENTE + "|" + SE1->E1_LOJA))
			  	F915CanFJP()
				//Alteração necessária para que a Mensagem Unica de cancelamento de baixa seja chamada corretamente
				ALTERA := .F.
			Endif
			RestArea(aAreaSE1)
		Endif

		nSalvRec:=SE1->(Recno())

		//Conciliacao SITEF
		FA070SITEF(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_TIPO)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se h  abatimentos para voltar a carteira                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SE1->(DbSetOrder(2)) // Filial + Cliente + Loja + Prefixo + Número + Parcela + Tipo

		If MsSeek(xFilial("SE1")+SE1->E1_CLIENTE+SE1->E1_LOJA+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA)
			//
			//Função Específica do Modulo Sigapls para atualizar Status de Guias Compradas
			//
			If GetNewPar("MV_PLSATIV",.F.)
				PL090TITCP(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_TIPO,"5")
			EndIf
			dbSetOrder( 2 )
		   	dbSeek( xFilial("SE1")+cCliente+cLoja+cPrefixo+cNum+cParcela )
		   	cTitAnt := (SE1->E1_FILIAL+SE1->E1_CLIENTE+SE1->E1_LOJA+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA)
			If lTitpaiSE1
		 		If  (nOrdTitPai:= OrdTitpai()) > 0
   				DbSetOrder(nOrdTitPai)
					If	DbSeek(xFilial("SE1")+cPrefixo+cNum+cParcela+cTipo+cCliente+cLoja)
						bWhile := {|| !Eof() .And. Alltrim(cTitAnt) == Alltrim(xFilial("SE1")+cPrefixo+cNum+cParcela+cTipo+cCliente+cLoja) }
						cTitAnt := (SE1->E1_FILIAL+SE1->E1_TITPAI)
					Else
						dbSetOrder( 2 )
		   				dbSeek( xFilial("SE1")+cCliente+cLoja+cPrefixo+cNum+cParcela )
					Endif
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Verificações sobre a transferência de documento com o ISS na origem ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If !Empty( cFilOrgTr )
						nForIss   := 2// -Somente para documentos que foram transferidos deixando o ISS na origem
					EndIf
		   		Endif
			Endif

			For nI := 1 To nForIss

				If nI == 2
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Alterações para efetuar a busca do ISS na filial de origem ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lTitpaiSE1 .And. nOrdTitPai == 0
						SE1->( dbSetOrder( 2 ) )
						SE1->(dbSeek(cFilOrgTr+cCliente+cLoja+cPrefixo+cNum+cParcela ))
						cTitAnt := (cFilOrgTr+SE1->E1_CLIENTE+SE1->E1_LOJA+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA)
						bWhile := {|| !Eof() .and. cTitAnt == (cFilOrgTr+SE1->E1_CLIENTE+SE1->E1_LOJA+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA) }
					Else
						SE1->(DbSeek(cFilOrgTr+cPrefixo+cNum+cParcela+cTipo+cCliente+cLoja))
						cTitAnt := ( cFilOrgTr + SE1->E1_TITPAI )
						bWhile := {|| !Eof() .And. Alltrim(cTitAnt) == Alltrim(cFilOrgTr+cPrefixo+cNum+cParcela+cTipo+cCliente+cLoja) }
					EndIf
				EndIf

				While Eval(bWhile) .And. Alltrim(cTitAnt) == Alltrim(xFilial("SE1")+SE1->(E1_PREFIXO + E1_NUM + E1_PARCELA)+cTipo+cCliente+cLoja)
					If !SE1->E1_TIPO $ MVABATIM+"/"+MVINABT+"/"+MVIRABT+"/"+MVFUABT //adicionado MVFUABT pois a variável MVABATIM não está retornando FU-
						dbSkip()
						Loop
					Endif

					If lTitpaiSE1
						If !Empty(E1_TITPAI).and.  (Alltrim(E1_TITPAI)!=Alltrim(cPrefixo+cNum+cParcela+cTipo+cCliente+cLoja ))
							DbSkip()
							Loop
						EndIf
					EndIf

					If nI == 2 .And. E1_TIPO <> MVISABT
						DbSkip()
						Loop
					EndIf

					//ISS Bitributação
					If nI == 2 .And. E1_TIPO <> MVI2ABT
						DbSkip()
						Loop
					EndIf

					//Abatimento baixado pela rotina de compensacao, desconsiderar
					If !Empty(SE1->E1_TITPAI) .AND. (MVRECANT $ SE1->E1_TITPAI .OR. MV_CRNEG $ SE1->E1_TITPAI)
						If nTotAbat > 0
							If Round(NoRound(nTotAbat,3),2)  >= Round(NoRound(xMoeda(SE1->E1_VALOR,SE1->E1_MOEDA,nMoedaBco,,3,If(cPaisLoc=="BRA",SE1->E1_TXMOEDA,0)),3),2)
								//Abater do valor do abatimento um abatimento que nao foi baixado pela rotina
								//Operacao necessaria pois a variavel foi alimentada pela funcao SumAbatRec
								nTotAbat -= xMoeda(SE1->E1_VALOR,SE1->E1_MOEDA,nMoedaBco,,3,If(cPaisLoc=="BRA",SE1->E1_TXMOEDA,0))
							Endif
						Endif
						SE1->(dbSkip())
						Loop
					Endif

					If !Empty(SE1->E1_BAIXA) .AND. SE1->E1_SALDO == 0	//Abatimento baixado
						lExBxAbat := .T.
					Endif
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Volta t¡tulo para carteira                                       ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lExBxAbat .and. lF070CANABT .AND. SE1->E1_TIPO $ MVIRABT
						Execblock("F070BXABT",.F.,.F., {cDescrMo})
					Endif

					Reclock("SE1")
					If !AllTrim(SE1->E1_ORIGEM) $ "L|S|T"
						SE1->E1_DESCONT := 0
					EndIf
					SE1->E1_BAIXA   := Ctod("  /  /  ")
					SE1->E1_SALDO   := SE1->E1_VALOR
					SE1->E1_JUROS   := 0
					SE1->E1_MULTA   := 0
					SE1->E1_CORREC  := 0
					SE1->E1_VARURV  := 0
					SE1->E1_VALLIQ  := 0
					SE1->E1_LOTE    := Space(Len(SE1->E1_LOTE))

					If ( cPaisLoc == "CHI" )
						SE1->E1_MOVIMEN := Ctod("  /  /  ")
					EndIf

					SE1->E1_STATUS  := "A"

					SE1->(Msunlock())

					//saldo natureza - impostos
					If lExBxAbat

						If lGestao
							If cFilAnt == SE1->E1_FILORIG
								If lSE1Comp
									AtuSldNat(E1_NATUREZ, dBaixa, E1_MOEDA, "3", "R", E1_VALOR, E1_VALOR, "+",,FunName(),"SE1",SE1->(Recno()),nOpcx , ,0, E1_FILORIG)
								Else
									AtuSldNat(E1_NATUREZ, dBaixa, E1_MOEDA, "3", "R", E1_VALOR, E1_VALOR, "+",,FunName(),"SE1",SE1->(Recno()),nOpcx , ,0, E1_FILIAL)
								Endif
							Else
								If lSE1Comp
									AtuSldNat(E1_NATUREZ, dBaixa, E1_MOEDA, "3", "R", E1_VALOR, E1_VALOR, "+",,FunName(),"SE1",SE1->(Recno()),nOpcx , ,0, cFilAnt)
								Else
									AtuSldNat(E1_NATUREZ, dBaixa, E1_MOEDA, "3", "R", E1_VALOR, E1_VALOR, "+",,FunName(),"SE1",SE1->(Recno()),nOpcx , ,0, E1_FILIAL)
								Endif
							Endif
						Else
							If cFilAnt == SE1->E1_FILORIG
								If lSE1Comp
									AtuSldNat(E1_NATUREZ, dBaixa, E1_MOEDA, "3", "R", E1_VALOR, E1_VALOR, "+",,FunName(),"SE1",SE1->(Recno()),nOpcx , ,0, E1_FILORIG)
								Else
									AtuSldNat(E1_NATUREZ, dBaixa, E1_MOEDA, "3", "R", E1_VALOR, E1_VALOR, "+",,FunName(),"SE1",SE1->(Recno()),nOpcx , ,0, E1_FILIAL)
								Endif
							Else
								If lSE1Comp
									AtuSldNat(E1_NATUREZ, dBaixa, E1_MOEDA, "3", "R", E1_VALOR, E1_VALOR, "+",,FunName(),"SE1",SE1->(Recno()),nOpcx , ,0, cFilAnt)
								Else
									AtuSldNat(E1_NATUREZ, dBaixa, E1_MOEDA, "3", "R", E1_VALOR, E1_VALOR, "+",,FunName(),"SE1",SE1->(Recno()),nOpcx , ,0, E1_FILIAL)
								Endif
							Endif
						Endif

					Endif


					If lF070CANABT .and. SE1->E1_TIPO $ MVIRABT .and. !lExBxAbat
						nValabt := EXECBLOCK("F070CANABT",.F.,.F.)
						Reclock("SE1",.F.)
							E1_VALOR += nValabt
							E1_SALDO += nValabt
							E1_VLCRUZ += nValabt
							If SE1->(FieldPos("E1_SLPLAID")) > 0
								E1_SLPLAID += nValabt
							EndIf
						SE1->(MsUnlock())
					ENDIF

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Carrega variaveis para contabilizacao dos    ³
					//³ abatimentos (impostos da lei 10925).         ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If SE1->E1_TIPO == MVPIABT
						VALOR5 := SE1->E1_VALOR
					ElseIf SE1->E1_TIPO == MVCFABT
						VALOR6 := SE1->E1_VALOR
					ElseIf SE1->E1_TIPO == MVCSABT
						VALOR7 := SE1->E1_VALOR
					Endif
					dbSkip()
				End
			Next nI
		Endif

		DbSetOrder(1)
		dbGoTo( nSalvRec )

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Posiciona no cadastro de bancos para contabiliza‡„o               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SA6")
		MsSeek(xFilial()+cBanco+cAgencia+cConta)

		// Se estiver utilizando multiplas naturezas por titulo
		// nOpcx == 5 -> Cancelamento de baixa
		// nOpcx != 5 -> Exclusão de baixa
		If cMultNat == "1"
			DelMNatBx("SE1",@nHdlPrv,@nTotal,@cArquivo,nOpcx != 5,cSeqSE5,mv_par04 == 1) // Apaga as naturezas geradas para o titulo
		Endif

		If lPccBxCR
  			If (!SE5->E5_PRETPIS $ "8_9" .And. !SE5->E5_PRETCOF $ "8_9" .And. !SE5->E5_PRETCSL $ "8_9")
	  			RecLock("SE5",.F.)
				SE5->E5_PRETPIS := "1"
				SE5->E5_PRETCOF := "1"
				SE5->E5_PRETCSL := "1"
				SE5->(MsUnlock())
			Endif

			If !__lPccMR
				nRecSe5  := SE5->(RecNo())

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Exclui os registros de relacionamentos do SFQ                                ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				aRecSE5 := FImpDelTit("E1B",SE5->E5_PREFIXO,SE5->E5_NUMERO,SE5->E5_PARCELA,SE5->E5_TIPO,SE5->E5_CLIFOR,SE5->E5_LOJA,SE5->E5_SEQ)
				For nI := 1 to Len(aRecSE5)
					SE5->(MSGoto(aRecSE5[nI]))
					RecLock("SE5",.F.)

					If ((!SE5->E5_TIPO $ MVPAGANT) .Or. (SE5->E5_TIPO $ MVPAGANT .And.;
						!Empty(SE5->E5_PRETPIS) .And. !Empty(SE5->E5_PRETCOF) .And. !Empty(SE5->E5_PRETCSL)))
						If (!SE5->E5_PRETPIS $ "8_9" .And. !SE5->E5_PRETCOF $ "8_9" .And. !SE5->E5_PRETCSL $ "8_9")
							SE5->E5_PRETPIS := "1"
							SE5->E5_PRETCOF := "1"
							SE5->E5_PRETCSL := "1"
						Endif
					Endif
					SE5->(MsUnlock())
				Next

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Exclui os registros de relacionamentos do SFQ                                ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				SE5->(dbGoto(nRecSe5))
				FImpDelSFQ("E1B",SE5->E5_PREFIXO,SE5->E5_NUMERO,SE5->E5_PARCELA,SE5->E5_TIPO,SE5->E5_CLIFOR,SE5->E5_LOJA,SE5->E5_SEQ)

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Apaga os registros de impostos gerados na Baixa                              ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				F070DelTxBx()
				SE1->(dbGoTo(nSalvRec))
			EndIf
		EndIf

		If lIrPjBxCr .and. !__lIrfMR
			F070DelTxBx()
		EndIf

		If __lTemMR // Deleção dos impostos pelo motor de retenção.
			FMRDelImp(SE5->E5_TABORI, SE5->E5_IDORIG)
		Endif

		SE1->(dbGoTo(nSalvRec))

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Gera lan‡amento contabil de estorno                               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cPadrao := "527"    //cancelamento de baixa
		lPadrao := VerPadrao(cPadrao)
		cTpBxCtb := SE5->E5_TIPODOC
		//Condições para ser lançada a linha de estorno, a linha de estorno pode não ser gerada por conta de exclusão de lançamento ou movimentações que são apenas canceladas
		lEstnCtb := nOpcx == 5 .Or. !Empty( cLoteFin )
		lEstnCtb := lEstnCtb .And. ( cTpBxCtb $ "VL|LJ" .Or. ( cTpBxCtb == "BA" .And. !Empty( cLoteFin ) ) )
		// Se Excluir(Cancelamento)- contabiliza ou
		// Canc.Baixa(Estorno) e mv_par04 - contabiliza
		// Canc.Baixa de NCC quando a baixa foi contabilizada, não é possível contabilizar off-line nessa situação
		If ( nOpcx == 6 ) .Or. !MovBcoBx( cMot070 ) .Or. ( nOpcx == 5 .And. MV_PAR04 == 1 );
		 	.Or. ( nOpcx == 5 .And. MV_PAR04 == 2 .And. SE1->E1_TIPO $ MV_CRNEG .And. lCtbBaixa )//->NCC
			If ((lPadrao .And. lCtbBaixa) .OR. nHdlPrv > 0) .and. cMultNat != "1" .and. !FwIsInCallStack("Fa450Can")
				lE1_VALLIQ := lEstnCtb .And. AllTrim(CT5->CT5_VLR01) $ "SE1->E1_VALLIQ|E1_VALLIQ" .And. AllTrim(CT5->CT5_LANPAD) == "527"

				If lBxLoja .AND. SE1->E1_FILORIG <> cFilAnt
			  		cFilBkpLj := cFilAnt
			  		cFilAnt := SE1->E1_FILORIG
			  		SM0->( DbSeek( SM0->M0_CODIGO + cFilAnt ) )
			    Else
			    	cFilBkpLj := ""
			    EndIf

				nHdlPrv := HeadProva(cLote,"FINA070",Substr(cUsuario,7,6),@cArquivo)
				lCtbEst := .T.

				If lUsaFlag .And. !lEstnCtb  // Armazena em aFlagCTB para atualizar no modulo Contabil
					aAdd( aFlagCTB, {"E5_LA", "S", "SE5", SE5->( Recno() ), 0, 0, 0} )
				EndIf

				VALOR := SE5->E5_VALOR

				nTotal += DetProva( nHdlPrv, cPadrao, "FINA070", cLote, /*nLinha*/, /*lExecuta*/, /*cCriterio*/, /*lRateio*/,;
										/*cChaveBusca*/, /*aCT5*/, /*lPosiciona*/, @aFlagCTB, /*aTabRecOri*/, /*aDadosProva*/ )

				If ExistBlock("F070CTC")
					nTotal += ExecBlock("F070CTC",.F.,.F.,{cPadrao,nHdlPrv})
				EndIf

				If lBxLoja .and. !Empty(cFilBkpLj)
					cFilAnt := cFilBkpLj
					SM0->( DbSeek( SM0->M0_CODIGO + cFilAnt ) )
				EndIf
			Endif
		EndIf

		dbSelectArea("SE1")
		DbSetOrder(1)
		dbGoTo( nSalvRec )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Grava valores anteriores da contabilizacao do canc da baixa parcial³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		RecLock("SE1")
		If !AllTrim(SE1->E1_ORIGEM) $ "L|S|T"
			SE1->E1_DESCONT := nSe1Descont
		EndIf

		If lLojPdv
			SE1->E1_DESCONT := 0
			SE1->E1_MULTA   := 0
			SE1->E1_JUROS   := 0
		Else
			SE1->E1_VALLIQ  := nSe1ValLiq
			SE1->E1_DESCONT := nSe1Descont
			SE1->E1_MULTA   := nSe1Multa
			SE1->E1_JUROS   := nSe1Juros
			SE1->E1_CORREC  := nSe1Correc
		EndIf
		SE1->(MsUnlock())

		If lRaRtImp .and. (SE1->E1_VALOR > SE1->E1_SALDO) .And. Empty(SE1->E1_TIPOLIQ)
			aOldBaixaSE5 := aClone(aBaixaSE5)
			aBaixaSE5:= {}
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Soma a proporcionalização de iss e inss ao nValrec ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aBxSE5 := Sel070Baixa( "VL /V2 /BA /RA /CP /LJ /"+MV_CRNEG,cPrefixo, cNum, cParcela,cTipo,@nTotAdto,@lBaixaAbat,cCliente,;
									cLoja,@nVlrBaixa,,@lBxCEC,@lBxLiq,,.T.)
			For x := 1 To Len(aBaixaSE5)
		 		nTotAbat -= aBaixaSE5[x][32]+aBaixaSE5[x][33]
			Next
			aBaixaSE5 := aClone(aOldBaixaSE5)
		EndIf

		//Esta cancelando um titulo com baixa total, a partir da ultima baixa

		nFlxTit := nValRec - nPIS - nCOFINS - nCSLL
		If cPaisLoc == "CHI"
			nFlxTit += nOtrga
		Endif
		If SE1->E1_SALDO == 0
			nFlxTit += nTotAbat
		EndIf
		AtuSldNat(SE1->E1_NATUREZ, dBaixa, SE1->E1_MOEDA, "3", "R", nFlxTit, nValorM2, If(SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG,"+","-"),,FunName(),"SE1",SE1->(Recno()),nOpcx)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Volta titulo para carteira                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Reclock("SE1")
		If SE1->E1_SALDO # 0	//baixa parcial
			If !lExBxAbat .and. nValabt == 0		//existe abatimento baixado pelo titulo originador mesmo assim?
				nTotAbat := 0	//caso nao exista, zerar o valor
			Endif
		Endif

		dDataAnt := Iif(nOpBaixa==Len(aBaixa),Iif(Len(aBaixa)==1,CtoD(""),;
										aBaixaSE5[Len(aBaixa)-1,07]),E1_BAIXA)
		If cPaisLoc<>"BRA"
			nValor := SE1->E1_SALDO+(nValRec-nJuros-nVA-nMulta+nDescont+nTotAbat+nOtrga)
		Else
			IF SE1->E1_MOEDA == 1
				If SE1->E1_SALDO == SE1->E1_VALOR .AND. SE1->E1_ACRESC != SE1->E1_SDACRES
					nValor := SE1->E1_SALDO
				Else
					nValor := SE1->E1_SALDO + ( nValRec - nJuros - nVA - nMulta + nDescont + nTotAbat )
				Endif
			Else
				If cMot070 == "DEV"
					nValor := SE1->E1_SALDO + ((nValRec - nJuros - nVA - IIF(SE1->E1_MOEDA <= 1,nCorrec,0) - nMulta + nDescont + nTotAbat) / IIF(SE5->E5_TXMOEDA <> 0,SE5->E5_TXMOEDA,RecMoeda(SE1->E1_EMISSAO,SE1->E1_MOEDA)))
				Else
					If SE1->E1_MOEDA  <>   nMoedaBco
						If SE1->E1_MOEDA > 1 
							nValor:=ROUND(SE1->E1_SALDO+((nValorM2-nJuros-nVA-Iif(SE1->E1_MOEDA<=1,nCorrec,0)-nMulta+nDescont+nTotAbat) ),2)
						Else
							nValor:=ROUND(SE1->E1_SALDO+((nValRec-nJuros-nVA-Iif(SE1->E1_MOEDA<=1,nCorrec,0)-nMulta+nDescont+nTotAbat) / NoRound(nTxMoeda,5)),2)
						End
					Else
						nValor:=ROUND(SE1->E1_SALDO+((nValRec-nJuros-nVA-Iif(SE1->E1_MOEDA<=1,nCorrec,0)-nMulta+nDescont+nTotAbat)),2)
				   EndIf
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Volta valor original do titulo se cancelamento final das baixas ³
				//³ e n„o houverem compensa‡oes.                                   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

				IF Len(aBaixa) == 1 .and. nTotAdto == 0
				   	If(SE1->E1_TIPO$MVRECANT+"/"+MV_CRNEG)
						aAreaAtu:=GetArea()
						aAreaSE5:=SE5->(GetArea())
						dbSelectArea("SE5")
						dbSetOrder(7)
						If MsSeek(xFilial("SE5")+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO+SE1->E1_CLIENTE+SE1->E1_LOJA)
					    	While(!lComp .And. (xFilial("SE5")+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO +SE1->E1_CLIENTE+SE1->E1_LOJA==;
					    	xFilial("SE5")+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO+SE5->E5_CLIFOR+SE5->E5_LOJA))
								If SE5->E5_SITUACA <> "C" .And. !Empty(SE5->E5_DOCUMEN)
									If SE5->E5_TIPODOC =="BA"
										lComp:=.T.
									Else
										lComp:=.F.
									EndIf
								EndIf
								DbSkip()
							End
						EndIf
						SE5->(RestArea(aAreaSE5))
						RestArea(aAreaAtu)
					EndIf
					If  !lComp .and. !Empty(SE1->E1_NUMBOR)
						nValor := SE1->E1_VALOR
					EndIf
				Endif
			Endif
		Endif

		//Caso seja a ultima baixa a ser cancelada
		//Caso o titulo tenha sofrido baixa onde o valor recebido foi menor que os juros
		//Retorno o saldo total do titulo
		If Empty(dDataAnt) .and. nValor > SE1->E1_VALOR
			nValor := SE1->E1_VALOR
		Endif

		SE1->E1_BAIXA   := dDataAnt
		SE1->E1_SALDO   := Iif(nValor<0,0,nValor)
		If SE1->(FieldPos("E1_SLPLAID")) > 0
			SE1->E1_SLPLAID := Iif(nValor<0,0,nValor)
		EndIf

		// Caso tenha sido chamado do loja faz tratamento especifico
		If (FunName()$"LOJA701|LOJXREC|RPC")
			//salva o Array aBaixaSE5 para recompor se retornar vazio la do loja quando chamado diretamente do remote
			aOldBaixaSE5 := aClone(aBaixaSE5)
			// Alimenta campo E1_VALLIQ com valor da penultima baixa(SE5) parcial caso exista
			SE1->E1_VALLIQ  := SE1ValLiq(E1_PREFIXO,E1_NUM,E1_PARCELA,E1_TIPO,E1_CLIENTE,E1_LOJA)
			If FunName()=="RPC" .And. Empty(aBaixaSE5)  //se estiver vazio recompoe o array aBaixaSe5 salvo
				aBaixaSE5 := aClone(aOldBaixaSE5)
			EndIf
		Else
			If lE1_VALLIQ
				nRegCanSE1 := SE1->(Recno()) //Registro será atualizado após contabilização.
			Else
				SE1->E1_VALLIQ  := 0 // Padrao Financeiro
			EndIf
		EndIf

		If !AllTrim(SE1->E1_ORIGEM) $ "L|S|T"
			SE1->E1_DESCONT := 0
		EndIf

		SE1->E1_LOTE    := Space(Len(E1_LOTE))
		SE1->E1_MULTA   := 0
		SE1->E1_JUROS   := 0
		SE1->E1_CORREC  := 0
		If (SE1->E1_SALDO == SE1->E1_VALOR .AND. EMPTY(SE1->E1_BAIXA))
		    If F070BXCOMP() == 0
				SE1->E1_SDACRES :=SE1->E1_ACRESC
				SE1->E1_SDDECRE :=SE1->E1_DECRESC
			EndIf
		ElseIf lAcreDecre
			SE1->E1_SDACRES := Round(NoRound(xMoeda(nAcresc,nMoedaBco,SE1->E1_MOEDA,dBaixa,3,,nTxMoeda),3),2)
			SE1->E1_SDDECRE := Round(NoRound(xMoeda(nDecresc,nMoedaBco,SE1->E1_MOEDA,dBaixa,3,,nTxMoeda),3),2)
		Endif

		If cPaisLoc == "CHI"
			SE1->E1_STATUS  := Iif(E1_SALDO>0,"A","B")
			SE1->E1_MOVIMEN := Ctod("  /  /  ")
			IIf (cPaisLoc == "CHI",SE1->E1_OTRGA    := 0,.T.)
			IIf (cPaisLoc == "CHI",SE1->E1_CAMBIO   := 0,.T.)
			SE1->E1_TXMOEDA  	:= 0
		Else
			Replace E1_STATUS   With IIF(E1_STATUS != "R",Iif(E1_SALDO >= 0.01,"A","B"),"R")
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Salva os campos na tabela SE1 especifico do Template GEM       ³
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If HasTemplate("LOT") .and. ExistTemplate("GEMSE1Grv")
			ExecTemplate("GEMSE1Grv",.F.,.F.)
		EndIf
		//....
		//   conforme situacao do parametro abaixo, integra com o SIGAGSP ³
		//   MV_SIGAGSP - 0-Nao / 1-Integra
		//   Estorna os lancamento de Orcamentacao
		//    ......
		If GetNewPar("MV_SIGAGSP","0") == "1"
			GSPF220()
		EndIf

		//Integracao Protheus X RM Biblios
		if lRMBibli
			if alltrim(SE1->E1_ORIGEM) == 'L'  .or.  alltrim(upper(SE1->E1_ORIGEM)) == 'S' .or. SE1->E1_IDLAN > 0
				//Executa a funcao para efetuar manutencao nas tabelas do RM Biblios e Replicar a baixa
				ClsProcCan(SE1->(Recno()),'1',"FIN070")
			endif
		endif

		//----------------------------------------------
		// PONTO DE ENTRADA
		//-----------------------------------------------
		If ExistBlock("FA070CAN")
			ExecBlock('FA070CAN',.F.,.F.,nValor)
		Endif

		//--------------------------------------------------
		// Executa funcao do PLS para estornar cobranca de juros no mes seguinte
		//-------------------------------------------------

        If  substr(SE1->E1_ORIGEM,1,3) == "PLS"
            PLS510CJR()
        Endif

		//----------------------------------------------
		// Estorna Comissao
		//----------------------------------------------
		Fa440DeleB(aBaixaSE3,If(MV_PAR05==1,.T.,.F.),;
									If(MV_PAR03==1,.T.,.F.),;
													"FINA070")
		//----------------------------------------------------------------------
		// Localiza na movimenta‡„o banc ria, os registros referentes a baixa
		//----------------------------------------------------------------------
		dbSelectArea("SE5")
		dbSetOrder(7)

		If lE5CM1
			nOldCM1	:= SE5->E5_CM1
		EndIf

		SE5->( dbGoTo(nRecSE5) )
		cChaveSE5 := SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ)
		lMsgBxC := .F.
		If SE5->( dbSeek(xFilial("SE5")+cChaveSE5))

			While !(SE5->(EOF())) .and. (xFilial("SE5")+cChaveSE5 == SE5->(E5_FILIAL+E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ))

				If SE5->(Eof()) .Or. !Empty(SE5->E5_FORNECE)
					SE5->(dbSkip())
					Loop
				EndIf

				If SE5->E5_TIPODOC $ "TR|E2|I2|EI"
					SE5->(dbSkip())
					Loop
				EndIf

				//----------------------------------------------
				// PONTO DE ENTRADA DE TEMPLATE
				//----------------------------------------------
				If lTSE5FI70E
					ExecTemplate('SE5FI70E',.F.,.F.,nOpcx)
				Endif

				//----------------------------------------------
				// PONTO DE ENTRADA
				//----------------------------------------------
				If lSE5FI70E
					ExecBlock('SE5FI70E',.F.,.F.,nOpcx)
				Endif
				//---------------------------------------------------------------------------
				// Se for baixa por lote, independente da rotina que est  se utilizando
				//³(Cancelamento ou Estorno da baixa), gera-se estorno da mesma.
				//---------------------------------------------------------------------------
				If nOpcx == 5 .or. !Empty(cLoteFin)

					If nOpcx == 6
						If !lMsgBxC
							lMsgBxC := .T.
							HELP(" ",1,"VLDBXLOTE" ,,STR0293,2,0) //"A baixa não pode ser excluída por ser em lote. Será realizado o cancelamento da baixa!"
						EndIf
					EndIf

					//---------------------------------------------------------------------------
					// Cancela as baixas gerando um lancamento de estorno no SE5
					// Se for baixa por lote, estorna saldo bancario
					// S¢ faz estorno de baixa tipo BA se a mesma for gerada atraves da
					// baixa por lote( !empty(cLoteFin)), caso contrario ela ‚ apenas
					// cancelada.
					//---------------------------------------------------------------------------
					If SE5->E5_TIPODOC $ "VL|LJ" .OR. ( SE5->E5_TIPODOC == "BA" .AND. !Empty(cLoteFin) )

						If lF070GerAb
							nValRetIR := SE5->E5_VRETIRF
						Endif

						//Posiciona a FK5 para mandar a operação de alteração com base no registro posicionado da SE5

						If SE5->E5_TIPODOC $ "VL|BA|LJ"
							aAreaAnt := GetArea()
							oModelBx := FWLoadModel("FINM010")
							oModelBx:SetOperation(MODEL_OPERATION_UPDATE) //Alteração
							oModelBx:Activate()
							oModelBx:SetValue( "MASTER", "E5_GRV", .T. ) //Habilita gravação SE5
							oSubFKA := oModelBx:GetModel("FKADETAIL")
							oSubFKA:SeekLine({{"FKA_IDORIG",SE5->E5_IDORIG}})

							//E5_OPERACAO 1 = Altera E5_SITUACA da SE5 para 'C' e gera estorno na FK5
							//E5_OPERACAO 2 = Altera E5_TIPODOC da SE5 para 'ES' e gera estorno na FK5
							//E5_OPERACAO 3 = Deleta da SE5 e gera estorno na FK5
							oModelBx:SetValue( "MASTER", "E5_OPERACAO", 2 )
							oModelBx:SetValue( "MASTER", "E5_CAMPOS", "{ {'E5_DTCANBX' , '" + DTOS(dDataBase) +"'} }" )
							oModelBx:SetValue( "MASTER", "HISTMOV", cHistCan070 )
							oModelBx:SetValue( "MASTER", "E5_LA", Iif(lPadrao .And. MV_PAR04 == 1 .And. lCtbBaixa .Or. (lEstnCtb .And. lCtbEst .And. nHdlPrv > 0) , "S" , "N" ))

							If empty(VALOR)
							  VALOR := nValor
							Endif

							If oModelBx:VldData()
								oModelBx:CommitData()

								If lFKDID // Proteção campo criado 12.1.25
									oModelBx:GetModel('FKADETAIL'):SeekLine( { { 'FKA_TABORI', 'FK1' } } )
									For nXVa := 1 To oModelBx:GetModel('FK6DETAIL'):Length() // Ajusta os VAs para ficar apenas um em aberto do mesmo código
										If oModelBx:GetModel('FK6DETAIL'):GetValue("FK6_TPDOC", nXVa) $ "VA"
											FN70VAFKD( oModelBx:GetModel('FK1DETAIL'):GetValue("FK1_IDDOC") , oModelBx:GetModel('FK6DETAIL'):GetValue("FK6_CODVAL", nXVa) )
										EndIf
									Next
								EndIf

								nRecSE5 := oModelBx:GetValue( "MASTER", "E5_RECNO" )

								//Se for cancelamento de baixa feita em lote, então gera registro de estorno na FK5 (referente ao BL)
								IF SE5->E5_TIPODOC == "BA" .AND. !Empty(cLoteFin)
									FA070EstBL( cLoteFin, cHistCan070, cBanco, cAgencia, cConta)
									If Iif(__lF070EAI <> NIL,__lF070EAI, .F. )
										lSaveStatI := INCLUI //Função acima altera a variável INCLUI para .T., pois inclui movimetnação de exclusão na SE5
									EndIf
								Endif

								If lCtbEst .And. lEstnCtb .And. (cTpBxCtb == SE5->E5_TIPODOC .or. SE5->E5_TIPODOC == 'ES')  .and. !FwIsInCallStack("Fa450Can")
									If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
										aAdd( aFlagCTB, {"E5_LA", "S", "SE5", SE5->( Recno() ), 0, 0, 0} )
									EndIf

									If lF070CTC
										nTotal += ExecBlock("F070CTC",.F.,.F.,{cPadrao,nHdlPrv})
									Endif
								EndIf

								// Posiciona no registro de estorno "ES" para o correto funcionamento dos PE F070EST/F070EST2, assim como ocorria no Protheus 11. Retorna posicionamento através "aAreaAnt".
								SE5->(dbGoTo(nRecSE5))

								//---------------------------------------------------------------------------
								// PONTO DE ENTRADA F070EST
								// PE para gravaçoes complementares do cancelamento da baixa
								//---------------------------------------------------------------------------
								IF lF070EST
									ExecBlock("F070EST",.F.,.F.,{nValRetIR})
								Endif

								IF lF070EST2
									ExecBlock("F070EST2",.F.,.F.,{ SE5->E5_TIPODOC , cChave })
								Endif

							Else
								lRet := .F.
								cLog := cValToChar(oModelBx:GetErrorMessage()[4]) + ' - '
								cLog += cValToChar(oModelBx:GetErrorMessage()[5]) + ' - '
								cLog += cValToChar(oModelBx:GetErrorMessage()[6])
								Help( ,,"M10F70C1",,cLog, 1, 0 )
							Endif
							oModelBx:DeActivate()
							oModelBx:Destroy()
							oModelBx := Nil
							RestArea( aAreaAnt )

							If lE1_VALLIQ .And. nRegCanSE1 > 0 .And. !FunName()$"LOJA701|LOJXREC|RPC"
								If SE1->(Recno()) <> nRegCanSE1 //Certifica-se que a SE1 não foi disposicionada
									SE1->(dbGoto(nRegCanSE1))
								EndIf
								SE1->E1_VALLIQ  := 0
							EndIf

							//---------------------------------------------------------------------------
							// Salva os campos na tabela SE5 especifico do Template GEM
							//---------------------------------------------------------------------------
							If lGEMSE5Grv
								ExecTemplate("GEMSE5Grv",.F.,.F.)
							EndIf

							//---------------------------------------------------------------------------
							// Localizacao Portugal - Gera dados para diario contabil
							//---------------------------------------------------------------------------
							If UsaSeqCor()
								AAdd( aDiario, {"SE5",SE5->(Recno()),cCodDiario,"E5_NODIA","E5_DIACTB"} )
							Else
								aDiario := {}
							EndIf
						Else
							//Cancelo os registros de valores acessoriso (Multas, Juros etc)
							RecLock("SE5")
							SE5->E5_SITUACA := "C"
							SE5->E5_HISTOR	:= cHistCan070
							SE5->E5_DTCANBX := dDataBase

							MsUnLock()
						EndIf

					Else
						If lF070HisCan
							cSeqAux := ExecBlock("F070HisCan",.F.,.F.,{SE5->E5_TIPODOC,cChave,cSequencia,cHistCan070,dBaixa,cPadrao,nHdlPrv,aFlagCTB,lPadrao,lCtbBaixa})
							If Valtype(cSeqAux) == "C"
								cSeqCanSe5 := cSeqAux
							Else
								cSeqCanSe5 := SE5->E5_SEQ
							EndIf
						Else
							If SE5->E5_TIPODOC == "V2"
								lAtuSldbco := .F.
							EndIF
							cSeqCanSe5 := SE5->E5_SEQ

							Reclock("SE5")
							If !Empty(SE1->E1_PORTADO)
								SE5->E5_DATA := dDataBase
							EndIf
							SE5->(MsUnlock())

							If SE5->E5_TIPODOC <> "BA"
								cHistCan070 := If(lF070Auto,SE5->E5_HISTOR,cHistCan070)
							Else
								If SE1->E1_TIPO <> "RA "
									cHistCan070 := If(lF070Auto,SE5->E5_HISTOR,cHistCan070)
								Else
									//para tipodoc igual a "BA" referente a titulo tipo "RA" o deve gravar a data de cancelamento no historico
									//pois relatorio finr130 ira considerar a data de cancelamento da baixa para compor saldo retroativo
									cHistCan070 := PADR(If(lF070Auto,SE5->E5_HISTOR,cHistCan070),Len(SE5->E5_HISTOR)-16)+"###["+DTOS(dDatabase)+"]###"
								EndIf
							EndIf

							If SE5->E5_TIPODOC == "BA"
								//Posiciona a FK5 para mandar a operação de alteração com base no registro posicionado da SE5
								aAreaAnt := GetArea()
								oModelBx := FWLoadModel("FINM010")
								oModelBx:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
								oModelBx:Activate()
								oModelBx:SetValue( "MASTER", "E5_GRV", .T. ) //Habilita gravação SE5
								oSubFKA := oModelBx:GetModel( "FKADETAIL" )
								oSubFKA:SeekLine( { { "FKA_IDORIG", SE5->E5_IDORIG } } )

								//E5_OPERACAO 1 = Altera E5_SITUACA da SE5 para 'C' e gera estorno na FK5
								//E5_OPERACAO 2 = Altera E5_TIPODOC da SE5 para 'ES' e gera estorno na FK5
								//E5_OPERACAO 3 = Deleta da SE5 e gera estorno na FK5
								oModelBx:SetValue( "MASTER", "E5_OPERACAO", 1 )
								oModelBx:SetValue( "MASTER", "HISTMOV", cHistCan070 )
								oModelBx:SetValue( "MASTER", "E5_LA", Iif(lPadrao .and. mv_par04 == 1,"S","N") )

								If oModelBx:VldData()
									oModelBx:CommitData()
									nRecSE5 := oModelBx:GetValue("MASTER","E5_RECNO")
								Else
									lRet := .F.
								   	cLog := cValToChar( oModelBx:GetErrorMessage()[4] ) + ' - '
								   	cLog += cValToChar( oModelBx:GetErrorMessage()[5] ) + ' - '
								   	cLog += cValToChar( oModelBx:GetErrorMessage()[6] )
									Help( ,,"M010VLDE2",,cLog, 1, 0 )
								Endif
								oModelBx:DeActivate()
								oModelBx:Destroy()
								oModelBx:= Nil
								RestArea( aAreaAnt )
							ElseIf SE5->E5_TIPODOC != "ES"
								Reclock("SE5")
								SE5->E5_SITUACA := "C"
								SE5->E5_HISTOR	:= cHistCan070
								SE5->E5_DTCANBX := dDataBase
								SE5->( MsUnlock() )
							ElseIf SE5->E5_TIPODOC == "ES" .And. SUBSTR(cHistCan070,1,4) == "LOJ-"
								Reclock("SE5")
								SE5->E5_HISTOR	:= "LOJ-Cancelamento de Baixa"
								SE5->E5_RECPAG	:= "P"
								SE5->( MsUnlock() )
							Endif

							//Cálculo de 4xmil colombia
							//--------------------------------------------------------------------------------------------------
							If cPaisLoc == "COL"
								If FinProcITF( SE5->( Recno() ),1 ) .and. SE1->E1_TIPO $ 'RA '
									FinProcITF( SE5->( Recno() ), 5, , .F.,, )
								EndIf
							End If
							//--------------------------------------------------------------------------------------------------
						EndIf

					Endif

					//---------------------------------------------------------------------------
					// Grava os lancamentos das contas orcamentarias - SIGAPCO
					//---------------------------------------------------------------------------
					PcoDetLan("000004","07","FINA070", .T.)
				Else
					cSeqCanSe5 := SE5->E5_SEQ

					//Posiciona a FK5 para mandar a operação de alteração com base no registro posicionado da SE5

					If SE5->E5_TIPODOC $ "VL|BA|LJ"
						aAreaAnt := GetArea()
						oModelBx := FWLoadModel("FINM010")
						oModelBx:SetOperation(MODEL_OPERATION_UPDATE) //Alteração
						oModelBx:Activate()
						oModelBx:SetValue("MASTER","E5_GRV",.T.) //Habilita gravação SE5
						oSubFKA := oModelBx:GetModel("FKADETAIL")
						oSubFKA:SeekLine({{"FKA_IDORIG",SE5->E5_IDORIG}})

						//E5_OPERACAO 1 = Altera E5_SITUACA da SE5 para 'C' e gera estorno na FK5
						//E5_OPERACAO 2 = Altera E5_TIPODOC da SE5 para 'ES' e gera estorno na FK5
						//E5_OPERACAO 3 = Deleta da SE5 e gera estorno na FK5
						oModelBx:SetValue( "MASTER", "E5_OPERACAO", 3 )
						oModelBx:SetValue( "MASTER", "HISTMOV", cHistCan070 )

						If oModelBx:VldData()
							oModelBx:CommitData()
						Else
							lRet := .F.
						   	cLog := cValToChar(oModelBx:GetErrorMessage()[4]) + ' - '
						   	cLog += cValToChar(oModelBx:GetErrorMessage()[5]) + ' - '
						   	cLog += cValToChar(oModelBx:GetErrorMessage()[6])
							Help( ,,"M10F70C3",,cLog, 1, 0 )
						Endif
						oModelBx:DeActivate()
						oModelBx:Destroy()
						oModelBx := Nil
						RestArea(aAreaAnt)
					Else
						//Cancelo os registros de valores acessoriso (Multas, Juros etc)
						RecLock("SE5")
						dbDelete()
						MsUnLock()
					Endif

                    lExclusao := .T.
                    
                    //---------------------------------------------------------------------------
					// Grava os lancamentos das contas orcamentarias - SIGAPCO
					//---------------------------------------------------------------------------
					PcoDetLan("000004","07","FINA070", .T. )
					PcoDetLan("000012","01","FINA110", .T. )
					If __lTemMR // Deleção dos impostos pelo motor de retenção.
						FMRDelImp(SE5->E5_TABORI, SE5->E5_IDORIG)
					Endif
				EndIf
			SE5->(dbSkip())
			Enddo
		Endif

		SE5->( dbGoTo(nRecSE5) )

		//---------------------------------------------------------------------------
		// Finaliza a gravacao dos lancamentos do SIGAPCO
		//---------------------------------------------------------------------------
		PcoFinLan("000004")

		//---------------------------------------------------------------------------
		// Verifica se existe um cheque gerado para este adiantamento,
		// pois se tiver, dever  ser cancelado
		//---------------------------------------------------------------------------
		If SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG
			dbSelectArea("SEF")
			SEF->( dbSetOrder(3) )
			If SEF->( MsSeek(xFilial()+Substr(cChave,1,TamSX3("EF_PREFIXO")[1]+TamSX3("EF_TITULO")[1]+TamSX3("EF_PARCELA")[1]+TamSX3("EF_TIPO")[1])) )
				While !Eof().and.SubStr(cChave,1,TamSX3("EF_PREFIXO")[1]+TamSX3("EF_TITULO")[1]+TamSX3("EF_PARCELA")[1]+TamSX3("EF_TIPO")[1])==;
					EF_PREFIXO+EF_TITULO+EF_PARCELA+EF_TIPO.AND.EF_FILIAL==xFilial("SEF")
					If SEF->EF_FORNECE == SE1->E1_CLIENTE
						//Verifico se foi gerado cheque para adiantamento na baixa, antes de ser deletado.
						If SEF->EF_TIPO $ MVRECANT+"/"+MV_CRNEG .And. AllTrim(SEF->EF_ORIGEM) == "FINA070"
							lChqAdt := .T.
						EndIf
						Reclock("SEF")
						SEF->( dbDelete() )
						Exit
					Endif
					SEF->( dbSkip())
				End
			Endif
			SEF->( dbSetOrder(1) )
		Endif

		// Limpa o identificador de que o cheque ja foi utilizado em uma baixa.
		// Deve ocorrer antes da atualizacao do saldo bancario, para buscar o
		// valor correto do cheque na funcao "SomaCheqCr"
		dbSelectArea("SEF")
		SEF->( dbSetOrder(3) )
		If SEF->( MsSeek(xFilial("SEF")+Substr(cChave,1,TamSX3("EF_PREFIXO")[1]+TamSX3("EF_TITULO")[1]+TamSX3("EF_PARCELA")[1]+TamSX3("EF_TIPO")[1])) )
			While !Eof().and.SubStr(cChave,1,TamSX3("EF_PREFIXO")[1]+TamSX3("EF_TITULO")[1]+TamSX3("EF_PARCELA")[1]+TamSX3("EF_TIPO")[1])==;
				SEF->EF_PREFIXO+SEF->EF_TITULO+SEF->EF_PARCELA+SEF->EF_TIPO.AND.SEF->EF_FILIAL==xFilial("SEF")
				If SEF->EF_CLIENTE == SE1->E1_CLIENTE .And. SEF->EF_USADOBX == "S" .And. SEF->EF_SEQUENC == cSeqCanSe5
					Reclock("SEF",.F.)
					SEF->EF_USADOBX := " "
					SEF->( MsUnlock() )
					Exit
				Endif
				SEF->(dbSkip())
			EndDo
		Endif
		SEF->(dbSetOrder(1))

		If lExclusao
			dCancSE8 := aBaixaSE5[nOpBaixa,10]	// E5_DTDISPO
		ElseIf dDataBase < aBaixaSE5[nOpBaixa,10]
			dCancSE8 := aBaixaSE5[nOpBaixa,10]
		Else
			dCancSE8 := dDataBase
		EndIf

		//Atualiza saldo Bancario apenas se o controle de movimento bancario na
		//baixa a receber nao for na compensacao do cheque recebido
		If !(FN022SITCB(SE1->E1_SITUACA)[3]) .And. MovBcoBx(cMot070) .And. Empty( cLoteFin ) .And. lAtuSldbco
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Atualiza o saldo banc rio                                         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !(SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG)
				// Controla saldo na compensacao do cheque
				If lSaldoChq
					// Soma o total recebido em cheque
					nSomaCheq := SomaCheqCr(.T.,SE1->E1_PREFIXO, SE1->E1_NUM, SE1->E1_PARCELA, SE1->E1_TIPO, SE1->E1_CLIENTE)
				EndIf
				AtuSalBco(	cBanco,cAgencia,cConta,dCancSE8,Iif( lPccBxCr .And. nValRec - ( nPis + nCofins + nCsll ) == nOldValRec , nOldValRec , nValRec )-nSomaCheq,"-")
			Elseif (SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG) .And. !lChqAdt
				AtuSalBco(cBanco,cAgencia,cConta,dCancSE8,nValRec,"+")
			Endif
		EndIF

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Se for baixa por lote, estorna saldo bancario                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !Empty(cLoteFin)
			AtuSalBco(cBanco,cAgencia,cConta,dCancSE8,nValRec,"-")

			If cPaisLoc $ "ARG|POR|EUA|ANG|COL|MEX"
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Gerar a Movimentacao Bancaria na 2a. Moeda.         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				SA6->( MsSeek(xFilial("SA6")+cBanco+cAgencia+cConta) )
				If !Empty(SA6->A6_MOEDA) .and. ( SA6->A6_MOEDA != SE1->E1_MOEDA )
					SE5->E5_FILIAL  := xFilial("SE5")
					SE5->E5_BANCO   := cBanco
					SE5->E5_AGENCIA := cAgencia
					SE5->E5_CONTA   := cConta
					SE5->E5_DATA    := dDataBase
					SE5->E5_MOEDA   := StrZero(SA6->A6_MOEDA,2)
					SE5->E5_VALOR   := xMoeda( nValRec,nMoedaBco,SA6->A6_MOEDA,dDataBase )
					SE5->E5_NATUREZ := SE1->E1_NATUREZ
					SE5->E5_RECPAG  := "P"
					SE5->E5_TIPO    := cTipo
					SE5->E5_LA      := cLA
					SE5->E5_TIPODOC := "ES"
					SE5->E5_LOTE    := cLoteFin
					SE5->E5_PREFIXO := cPrefixo
					SE5->E5_NUMERO  := cNum
					SE5->E5_PARCELA := cParcela
					SE5->E5_CLIFOR  := cCliente
					SE5->E5_CLIENTE := cCliente
					SE5->E5_LOJA    := cLoja
					SE5->E5_BENEF   := SE1->E1_NOMCLI
					SE5->E5_DTDIGIT := dDataBase
					SE5->E5_MOTBX   := cMot070
					SE5->E5_VLMOED2 := nValorM2
					SE5->E5_HISTOR  := STR0116+cLoteFin //"Canc Baixa Lote "
					SE5->E5_SEQ     := cSequencia
					SE5->E5_DTDISPO := IIF (dDtdispo > dDatabase, dDtDispo, dDataBase)
					SE5->E5_FILORIG := SE1->E1_FILORIG
					AtuSalBco(cBanco,cAgencia,cConta,dCancSE8,nValRec,"-" )
				EndIf
			EndIf

		EndIf

		/* Atualiza o status do titulo no SERASA */
		If cPaisLoc == "BRA"
			If SE1->E1_SALDO > 0
				cChaveTit := xFilial("SE1")	+ "|" +;
							SE1->E1_PREFIXO	+ "|" +;
							SE1->E1_NUM		+ "|" +;
							SE1->E1_PARCELA	+ "|" +;
							SE1->E1_TIPO		+ "|" +;
							SE1->E1_CLIENTE	+ "|" +;
							SE1->E1_LOJA
				cChaveFK7 := FINGRVFK7("SE1",cChaveTit)
				F770BxRen("3","",cChaveFK7)
			Endif
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Gera lan‡amento contabil de estorno                             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF nHdlPrv > 0 .and. lPadrao .And. lCtbBaixa .and. !FwIsInCallStack("Fa450Can")
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Envia para Lancamento Contabil                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			//-- Se for rotina automatica força exibir mensagens na tela, pois mesmo quando não exibe os lançametnos, a tela
			//-- sera exibida caso ocorram erros nos lançamentos padronizados
			If lF070Auto
				lSetAuto := _SetAutoMode(.F.)
				lSetHelp := HelpInDark(.F.)
				If Type('lMSHelpAuto') == 'L'
					lMSHelpAuto := !lMSHelpAuto
				EndIf
			EndIf

			If lBxLoja .AND. SE1->E1_FILORIG <> cFilAnt
		  		cFilBkpLj := cFilAnt
		  		cFilAnt := SE1->E1_FILORIG
		  		SM0->( DbSeek( SM0->M0_CODIGO + cFilAnt ) )
			Else
			    cFilBkpLj := ""
			EndIf

			RodaProva(nHdlPrv,nTotal)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Envia para Lan‡amento Cont bil                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cA100Incl( cArquivo, nHdlPrv, 3 /*nOpcx*/, cLote, Iif(mv_par01==1,.T.,.F.) /*lDigita*/,;
			           Iif(mv_par02==1,.T.,.F.) /*lAglut*/,;
			           /*cOnLine*/, /*dData*/, /*dReproc*/, @aFlagCTB, /*aDadosProva*/, aDiario )
			aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento

			If lBxLoja .and. !Empty(cFilBkpLj)
				cFilAnt := cFilBkpLj
				SM0->( DbSeek( SM0->M0_CODIGO + cFilAnt ) )
			EndIf

			If lF070Auto
				HelpInDark(lSetHelp)
				_SetAutoMode(lSetAuto)
				If Type('lMSHelpAuto') == 'L'
					lMSHelpAuto := !lMSHelpAuto
				EndIf
			EndIf
		EndIF

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Final da prote‡„o via  TTS                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !lFini055 .and. FWHasEAI("FINA070",.T.,,.T.)
			cIntegSeq:=cSequencia//utilizada na integdef. Nao transformar em local.
			ALTERA := .F.
			INCLUI := .F.
			aRetInteg := FwIntegDef( 'FINA070' )
			//Se der erro no envio da integração, então faz rollback e apresenta mensagem em tela para o usuário
			If ValType(aRetInteg) == "A" .AND. Len(aRetInteg) >= 2 .AND. !aRetInteg[1]
				If ! IsBlind()
					Help( ,, "FINA070INTEG",, STR0238 + ": " + STR0069 + " - " + AllTrim( aRetInteg[2] ), 1, 0,,,,,, {STR0239} ) //"Ocorreu um erro inesperado na tentativa de atualização do título: Cancelamento da Baixa ", "Verifique se a integração está configurada corretamente."
				Endif
				DisarmTransaction()
				Return .F.
			Endif
			INCLUI := lSaveStatI
		Endif

		ALTERA := lSaveState

		//numbor
		aAlt := {}
		aadd( aAlt,{ STR0264,'','','',STR0265 +  Alltrim(Transform(nValRec,PesqPict("SE5","E5_VALOR"))) })
		//chamada da Função que cria o Histórico de Cobrança
		DbSelectArea("SE1")
		FinaCONC(aAlt)

	End Transaction

	//--------------------------------------------------
	// Integração SIGAPFS x SIGAFIN
	//-------------------------------------------------
	If FindFunction("JCancBaixa")
		JCancBaixa(SE1->(Recno()), SE5->(Recno()),  dBaixa)
	EndIf

	If !lF070Auto .And. nOpc1 == 1 .AND. AllTrim(SE1->E1_ORIGEM)=="FINI055"
		If FWHasEAI("FINI070A",.T.,,.T.)
			SetRotInteg('FINI070A')
			MsgRun ( STR0234+" "+rTrim(SE1->E1_NUM)+ " " +STR0235,STR0236,{||aRetMsg:=FinI070A()} )//"Atualizando título" "a valor presente..." Valor Presente
			If ValType(aRetMSg[1]) <> "U" .And. !aRetMsg[1]
				If ValType(aRetMsg[2]) <> "U" .And. aRetMsg[2] <> Nil .and. !Empty(aRetMsg[2])
					MsgAlert(STR0237 + CRLF + aRetMsg[2])//"Foi realizada uma tentativa de atualização do título, e foi retornada a seguinte mensagem:"
				Else
					MsgAlert(STR0238 + " " + Rtrim(SE1->E1_NUM)+". "+STR0239)//"Ocorreu um erro inesperado na tentativa de atualização do título " "Verifique as configurações da integração  e tente novamente."
				EndIf
			ElseIf Valtype(aRetMSg[1]) == "U"
				MsgAlert(STR0238 + " " + Rtrim(SE1->E1_NUM) + ". " + STR0239)//"Ocorreu um erro inesperado na tentativa de atualização do título " "Verifique as configurações da integração  e tente novamente."
			Endif
			SetRotInteg('FINA070')
		Else
			MsgAlert(STR0240)//"Para realizar as baixas de integrações como TIN, é necessário cadastrar o adapter da rotina FINI070A - UPDATECONTRACTPARCEL."
		EndIf
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Para utilizar no execblock abaixo                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	VALOR := nMulta
	VALOR2:= nJuros
	VALOR3:= nDescont
	VALOR4:= nCorrec
	ABATIMENTO := nTotAbat

	If ExistTemplate("FA070CA2")
		ExecTemplate("FA070CA2",.F.,.F.)
	Endif

	If ExistBlock("FA070CA2")
		ExecBlock("FA070CA2",.F.,.F.,{nOpcx})
	Endif

	VALOR := 0
	VALOR2:= 0
	VALOR3:= 0
	VALOR4:= 0
	ABATIMENTO := 0

	If lACAtivo .And. cPaisLoc=="BRA"
		SE1->(dbGoTo(nSalvRec)) // Retorna o Posicionamento para a SE1
		//Realiza a consequencias do cancelamento da baixa do titulo no GE
		AcFinCanc2()
	EndIF
	// Baixas geradas pela rotina de baixa de documentos (TMSA880) do TMS, devem cancelar a fatura
	// para que o usuario nao tenha que faze-lo manualmente, pois o titulo eh gerado automaticamente pelo sistema
	// no momento da baixa de um Ctrc, entao o cancelamento da baixa deste titulo deve tambem cancelar
	// a fatura (titulo).
	If Alltrim(SE1->E1_ORIGEM) == "TMSA880"
		Tmsa850Exc("SE1",/*cCampo*/,6,/*aM*/,/*aDocExclui*/,.F.)
	Endif

	//
	// Template GEM - Se todos os titulos foram pagos (E1_SALDO == 0 ) deve atualizar o STATUS do contrato.
	//
	If HasTemplate("LOT") .and. ExistTemplate("GMUpdStatContr")
		ExecTemplate("GMUpdStatContr",.F.,.F.,{SE1->E1_NUM ,SE1->E1_SERIE ,SE1->E1_PREFIXO } )
	EndIf

	// Chamada a função para atualizar as tabelas do AGRO no cancelamento da baixa do título.
	If !lF070Auto .and. SuperGetMv("MV_AGRORI",,.F.) .And. SuperGetMv("MV_SIGAAGR",,.F.)
		OGC120BXNF(nOpcx, nValRec)
	Endif
	
	//Integracao protheus X tin, Trecho incluido para integração e-commerce
	LJ861EC04(SE1->E1_NUM, SE1->E1_PREFIXO, nOpc1, SE1->E1_FILORIG)

	If nOpc1 == 1 .And. SE1->E1_MOEDA > 1 .And. nBaixa == 1
		LimpResid(cChaveSE1, 1, "R", .T.)
	EndIf
EndIF

dbSelectArea("SE5")
SE5->(dbSetOrder(1))
dbSelectArea(cAlias)
dbGoTo(nSalvRec)
dbSetOrder(nOrdem)

If lF070Auto
    dDataBase   := dOldDtCan   
EndIf

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³F070BXCOMP³ Autor ³ TOTVS				    ³ Data ³ 11/06/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Retorna valor de titulos baixados por compensação          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ F070BXCOMP                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F070BXCOMP
Local nValorBx   := 0
Local nValorCxBx := 0
Local nValor     := 0
Local aArea	     := GetArea()
Local aAreaSE5	 := SE5->(GetArea())

DbSelectArea("SE5")
DbSetOrder(10)
DbSeek(xFilial("SE5")+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO+SE1->E1_LOJA)

Do While SE5->(!Eof() .And. TRIM(E5_FILIAL+E5_DOCUMEN) == TRIM(SE1->E1_FILIAL+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO+SE1->E1_LOJA))
	If E5_TIPODOC == "BA"
	    nValorBx += E5_VALOR
	ElseIf E5_TIPODOC == "ES"
		nValorCxBx += E5_VALOR
	EndIf
	DbSkip()
EndDo

nValor :=nValorBx - nValorCxBx
RestArea(aAreaSE5)
RestArea(aArea)

Return (nValor)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fA070TitW ³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Fun‡„o utilizada para Baixa de Titulos - Windows           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fA070Titw()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function fA070TitW(cMarca,nTotal,nHdlPrv,lHdlPrv,lPadrao,cArquivo,cPadrao,nTotLtEZ,aDiario)
Local nOpca
Local lJuros		:= IIF( mv_par05 == 1, .T., .F. )
LOCAL lMovBco  		:= .T.
LOCAL lBaixou  		:= .F.
LOCAL nTolerPg 		:= GetMv("MV_TOLERPG")

LOCAL oDlgLote
LOCAL oTitulo
LOCAL oEmissao
LOCAL oVencRea
LOCAL oNomeCli
LOCAL oHist
LOCAL oSituacao
LOCAL oBaixa
LOCAL oDtCredito
LOCAL oHist070
LOCAL oMotBx
LOCAL oValor
LOCAL oTotAbLiq
Local oProRata
LOCAL oTotAbImp
LOCAL oValorLiq
LOCAL oParciais
LOCAL oMulta
LOCAL oJuros
LOCAL oVA			//Valores Acessorios
LOCAL oValEstr
LOCAL oAcresc
LOCAL oDecresc
LOCAL nDecrescF
LOCAL oCMonet
Local nSalvRec  	:= RecNO( )
LOCAL cParcela
LOCAL cMoeda
LOCAL aMotBx     	:= ReadMotBx()
LOCAL aDescMotBx 	:= {}
Local lFa070MDB  	:= ExistBlock("FA070MDB")
Local lMdbOk     	:= .F.
Local oModSpb
Local aModalSpb 	:= {"1=TED","2=CIP","3=COMP"}
Local lSpbInUse 	:= SpbInUse()
Local nUltLin
Local bSetKey 		:= {||}
Local oMultNat
Local lMultNat 		:= .F.
Local NI
Local oPrefixo
Local oTipo
Local oParcela
Local lPanelFin 	:= IsPanelFin()
Local aButtons 		:= {}
Local oSize
Local a1stRow 		:= {}
Local a2ndRow 		:= {}
Local nBase			:= 0
Local lJurMulDes	:= (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")

//Controla o Pis Cofins e Csll na baixa  (1-Retem PCC na Baixa ou 2-Retem PCC na Emissão(default) )
Local lPccBxCr		:= FPccBxCr(.T.)
Local oPis
Local oCofins
Local oCsll
Local aPcc			:= {}
//Controla IRPJ na baixa
Local lIrPjBxCr		:= FIrPjBxCr(.T.)
Local oIrrf
Local x
LOCAL lBxLiq		:= .F.
LOCAL lBxCEC		:= .F.  //Verificador de existencia de baixa por compensacao entre carteiras
Local aBaixa    	:= {}
LOCAL nVlrBaixa 	:= 0
LOCAL lBaixaAbat	:= .F.
LOCAL nTotAdto		:= 0
Local lGerPCCBD 	:= .F.
Local lExistVA 		:= TableInDic("FKD") .and. TableInDic("FKC")
Local lSDACRVL 		:= SuperGetMv("MV_SDACRVL",.T.,.F.)
Local lSDDECVL		:= .F.
Local lCalcIssBx	:= GetNewPar("MV_MRETISS","1") == "2"  //Retencao do ISS pela emissao (1) ou baixa (2)

PRIVATE aBaixaSE5	:= {}
Private nAcrescF	:= 0
Private nIrrf 		:= 0
PRIVATE nOldIrrf	:= 0
Private nOldPis     := SE1->E1_PIS
Private nOldCofins  := SE1->E1_COFINS
Private nOldCsll    := SE1->E1_CSLL
PRIVATE lRaRtImp  	:= lFinImp .And.FRaRtImp()     //Define se ha retencao de impostos PCC/IRPJ no R.A
PRIVATE cOldVA		:= ""	//Valores Acessorios
Private nOldDescont := 0
Private oBanco
Private oAgencia
Private oConta
Private oDescont
Private oValRec
Private nOldMulta 	:= 0
Private nOldJuros 	:= 0
Private nOldVA 		:= 0

lF415Auto := IIf(Type("lF415Auto")=="U",.F.,lF415Auto)

IF ExistBlock("F070MNAT")
	lMultNat := ExecBlock("F070MNAT",.F.,.F.)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Retorna o Array aDescMotbx contendo apenas a descricao do	³
//³ motivo das Baixas. 						  								³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If len( aDescMotbx ) ==0
	For NI := 1 to Len(aMotBx)
		If Substr(aMotBx[nI],34,01) == "A" .or. Substr(aMotBx[nI],34,01) =="R"
			AADD( aDescMotbx,Substr(aMotBx[nI],07,10))
		EndIf
	Next
EndIf

While (cAliasLote)->(!Eof())
	If (cAliasLote)->E1_OK != cMarca .or. (cAliasLote)->E1_TIPO $ MVABATIM+"/"+MVFUABT //adicionado MVFUABT pois a variável MVABATIM não está retornando FU-
		(cAliasLote)->(dbSKip())
		Loop
	Else
		SE1->(dbGoto((cAliasLote)->RECNOSE1))
		Exit
	EndIf
Enddo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Posiciona Cliente no SA1 		                                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SA1")
SA1->(MsSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA))
dbSelectArea("SE1")
lIrPjBxCr		:= FIrPjBxCr(.T.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Carrega Variaveis da Baixa                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nSalvRec := RecNo()
cTitulo 	:= SE1->E1_PREFIXO + " " + SE1->E1_NUM+ " " + SE1->E1_PARCELA
cParcela := SE1->E1_PARCELA
dEmissao	:= SE1->E1_EMISSAO
dVencRea	:= SE1->E1_VENCREA
cNomeCli := SE1->E1_CLIENTE + " - " + Subst(SA1->A1_NOME,1,40)
cHist		:= SE1->E1_HIST
cSituacao:= SE1->E1_SITUACA + " " + fa070situa()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Sustituidas as linhas acima pelas linhas abaixo para processamento   ³
//³da baixa por lote com os valores definidos na tela de lote.          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
// 0 = Carteira
// F = Carteira Protesto
// G = Carteira Acordo
cBanco	 := Iif( cLoteFin != Space( TamSX3("E1_LOTE")[1] ), cBancolt  , Iif( FN022SITCB(SE1->E1_SITUACA)[1],aCaixaFin[1], SE1->E1_PORTADO ))
cAgencia := Iif( cLoteFin != Space( TamSX3("E1_LOTE")[1] ), cAgencialt, Iif( FN022SITCB(SE1->E1_SITUACA)[1],aCaixaFin[2], SE1->E1_AGEDEP  ))
cConta	 := Iif( cLoteFin != Space( TamSX3("E1_LOTE")[1] ), cContalt  , Iif( FN022SITCB(SE1->E1_SITUACA)[3],aCaixaFin[3], SE1->E1_CONTA   ))

nMoedaBco:= Max(MoedaBco(cBanco,cAgencia,cConta),1)

dBaixa      := CriaVar("E1_BAIXA")
If cPaisLoc == "BRA"
	nTxMoeda 	:= If(SE1->E1_MOEDA > 1, If(SE1->E1_TXMOEDA > 0, SE1->E1_TXMOEDA,RecMoeda(dBaixa,SE1->E1_MOEDA)),0)
Endif
dDtCredito  := dDataBase
cHist070	:= Criavar("E5_HISTOR")		//Inicilizador padrao
If Empty(cHist070)
	cHist070 := STR0007+Space(Len(cHist070)-24)  // "Valor recebido s/ T¡tulo"
Endif
cMotBx		:= ""
nValor		:= SE1->E1_VALOR
nTotAbImp   := 0
nTotAbLiq   := 0
nTotAbat    := SumAbatRec(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_MOEDA,"S",dBaixa,@nTotAbImp)
nValorLiq 	:= 0
nTotAbLiq   := nTotAbat - nTotAbImp
dbGoto(nSalvRec)
nParciais	:= 0//SE1->E1_VALOR-SE1->E1_SALDO
nAcrescF		:= SE1->E1_SDACRES

If ExistBlock("F070ACRE")
	ExecBlock("F070ACRE",.F.,.F.)
Endif

nDecrescF	:= SE1->E1_SDDECRE
nAcresc		:= Round(NoRound(xMoeda(nAcrescF,SE1->E1_MOEDA,nMoedaBco,dBaixa,3,nTxMoeda),3),2)
nDecresc    := Round(NoRound(xMoeda(nDeCrescF,SE1->E1_MOEDA,nMoedaBco,dBaixa,3,nTxMoeda),3),2)
nDescont	:= 0
nMulta		:= 0
nJuros		:= 0
nVa			:= 0 //Valores Acessórios
nCM			:= 0
nValrec		:= Round(Noround(xMoeda(SE1->E1_SALDO-nTotAbat,SE1->E1_MOEDA,nMoedaBco,dBaixa,3,nTxMoeda),3),2)+nMulta+nJuros+nVA-nDescont+nAcresc-nDecresc
nPIS		:= 0
nCOFINS		:= 0
nCSLL		:= 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Para que o valor da baixa parcial nao fique negativo, verifico o saldo³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (SE1->E1_VALOR > SE1->E1_SALDO) .And. Empty(SE1->E1_TIPOLIQ)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Procura pelas baixas deste titulo ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lTipBxCP:=lRaRtImp
	aBaixa := Sel070Baixa( "VL /V2 /BA /RA /CP /LJ /" + MV_CRNEG, SE1->E1_PREFIXO, SE1->E1_NUM, SE1->E1_PARCELA, SE1->E1_TIPO,;
					@nTotAdto, @lBaixaAbat, SE1->E1_CLIENTE, SE1->E1_LOJA, @nVlrBaixa, , @lBxCec, @lBxLiq,,.T.)
	For x := 1 To Len(aBaixaSE5)
		nParciais += aBaixaSE5[x][8]
       	If lPccBxCR .And. lRaRtImp .and. !(aBaixaSE5[x][21]$ "1|2")
		   nParciais += aBaixaSE5[x][18]+aBaixaSE5[x][19]+aBaixaSE5[x][20]+aBaixaSE5[x][30]// somar impostos PCC
		Elseif lIrPjBxCr .And. lRaRtImp
	  		nParciais += aBaixaSE5[x][30]
		Endif
		If lRaRtImp
			nParciais += aBaixaSE5[x][32]+aBaixaSE5[x][33]
			nTotAbat  -= aBaixaSE5[x][32]+aBaixaSE5[x][33]
		Endif

		//Verifica baixas parciais no caso de desconto.
		If ABAIXASE5[x][16] > 0 .and. lSDACRVL
			nParciais += ABAIXASE5[x][16]
		Endif
		//
	Next
	nParciais += nTotAdto
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Soma valor de decrescimo em baixas parciais, para evitar         ³
	//³ diferencas entre valor original e valor recebido                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SE1->E1_SDDECRE <> SE1->E1_DECRESC
		If SE1->E1_SDDECRE = 0
			lSDDECVL := .T.
			If lSDACRVL
				nParciais -= SE1->E1_DECRESC
			Endif
		Else
			If lSDACRVL
				nParciais += ( SE1->E1_DECRESC - SE1->E1_SDDECRE )
			Endif
		Endif
	EndIf
Else
	nParciais := SE1->E1_VALOR - SE1->E1_SALDO
Endif

If	lIrPjBxCr
	nParciais += nIrrf
	nValRec := SE1->E1_VALOR - nParciais
	If !__lIrfMR
		nIrrf:= Iif(cPaisLoc == "BRA",FCaIrBxCR(nValRec),0)
		nOldIrrf := nIrrf
		nIrfBaseC := nValRec
		nIrfBaseR := nValRec
	EndIf
EndIf

// Calcula o desconto e o juros (se houver) e valida a data Idem para Valores Acessorios
fA070Data(@nTxMoeda,.F.)
// Motor de retenção
If __lTemMR
   	aImpos := F070VldImp(nValRec, dBaixa,@lPccBxCr, @lIrPjBxCr, @lCalcIssBx,@__lImpMR)
EndIf

//PCC Baixa CR
If lPccBxCR
	nParciais += nPis + nCofins + nCsll

    If SE1->E1_MOEDA > 1
		nValRec:= xMoeda(SE1->E1_VALOR,SE1->E1_MOEDA,1,dDatabase,3,nTxMoeda)
		nValRec:= nValRec - nParciais
	Else
		nValRec := SE1->E1_VALOR - nParciais
	EndIf

	nOldValRec	:= nValRec
	If dBaixa < dLastPcc
		f070TotMes(dBaixa,.T.,,.F.)
	Else
		nBase	:= FBaseRPCC(nValRec)
		If lJurMulDes
			If nBase-nDescont+nJuros + nVA+nMulta+nAcresc-nDecresc > 0
				nBase 	:= nBase-nDescont+nJuros + nVA+nMulta+nAcresc-nDecresc
			EndIf
		EndIf
		If !Empty(SE1->E1_NUMBOR)
			lGerPCCBD := FGERPCCBOR("R", SE1->(Recno()))
		EndIf

	  	If !__lPccMR .And. SE1->E1_TIPO # MVRECANT .and. !lGerPCCBD //.And. Empty(SE1->E1_NUMBOR)
			aPcc	:= newMinPcc(dBaixa, nBase,SE1->E1_NATUREZ,"R",SA1->A1_COD+SA1->A1_LOJA,,,,,,cMotBx)
			nPis	:= aPcc[2]
			nCofins	:= aPcc[3]
			nCsll	:= aPcc[4]
			//Reestruturacao SE5 - Para gravação das tabelas FK3 e FK4
			nPisCalc	:= nPis
			nPisBaseC	:= nBase
			nPisBaseR 	:= nBase
			nCofCalc	:= nCofins
			nCofBaseC	:= nBase
			nCofBaseR 	:= nBase
			nCslCalc	:= nCsll
			nCslBaseC	:= nBase
			nCslBaseR 	:= nBase
		Endif
	EndIf
	If Type("aDadosRet") = "A" .And. ValType(aDadosRet[1]) == "U"
		aDadosRet := Array(7)
		AFill( aDadosRet, 0 )
	Endif
Endif

fa070val( nValrec, nTxMoeda )
cMoeda 		:= IIF(Empty(SE1->E1_MOEDA),"1",AllTrim(Str(SE1->E1_MOEDA,2)))
cDescMoeda 	:= SubStr(GetMV("MV_SIMB"+cMoeda),1,3)

nOldPis     := nPis
nOldCofins  := nCofins
nOldCsll    := nCsll

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Pr‚-inicializa a modalidade de SPB                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lSpbInUse
	If !Empty(SE1->E1_MODSPB)
		cModSpb := SE1->E1_MODSPB
	Else
	   cModSpb := "1"
	Endif
Endif

//Botao de Cheques no Painel Financeiro
AADD(aButtons, {"LIQCHECK", {|| CadCheqCR(cBanco,cAgencia,cConta,nValRec,dBaixa,1)}, STR0141 }) //"Cheques"

bSetKey := SetKey(VK_F4,{|| If( !SE1->E1_TIPO $ MV_CRNEG,CadCheqCR(cBanco,cAgencia,cConta,nValRec,dBaixa,1),.F.)})
DEFINE MSDIALOG oDlgLote FROM  69,33 TO If(cPaisLoc=="BRA",690,520),581 TITLE "BAIXAS A RECEBER" PIXEL OF oMainWnd  //"Baixas a Receber"

//Faz o calculo automatico de dimensoes de objetos
oSize := FwDefSize():New(.T.,,,oDlgLote )

oSize:lLateral := .F.
oSize:lProp	:= .T. // Proporcional

oSize:AddObject( "1STROW" ,  100, 18, .T., .T. ) // Totalmente dimensionavel
oSize:AddObject( "2NDROW" ,  100, 82, .T., .T. ) // Totalmente dimensionavel

oSize:Process() // Dispara os calculos

a1stRow := {oSize:GetDimension("1STROW","LININI"),;
			oSize:GetDimension("1STROW","COLINI"),;
			oSize:GetDimension("1STROW","LINEND"),;
			oSize:GetDimension("1STROW","XSIZE")}

a2ndRow := {oSize:GetDimension("2NDROW","LININI"),;
			oSize:GetDimension("2NDROW","COLINI"),;
			oSize:GetDimension("2NDROW","LINEND"),;
			oSize:GetDimension("2NDROW","XSIZE")}

@ a1stRow[1] + 000, a1stRow[2] + 000 GROUP oGrp1 TO a1stRow[3], (a1stRow[4]-15) LABEL STR0008 OF oDlgLote PIXEL //"Principal"
@ a2ndRow[1] + 000, a2ndRow[2] + 000 GROUP oGrp2 TO a2ndRow[3], 135 LABEL STR0009 OF oDlgLote  PIXEL //"Dados Gerais"
@ a2ndRow[1] + 000, a2ndRow[2] + 139 GROUP oGrp3 TO a2ndRow[3], (a2ndRow[4]-15) LABEL STR0010 OF oDlgLote  PIXEL //"Valores da Baixa"
oGrp1:oFont := oFontLbl
oGrp2:oFont := oFontLbl
oGrp3:oFont := oFontLbl

//////////////////////////
//Dados do titulo
@ a1stRow[1] + 008, a1stRow[2] + 004 SAY STR0211				SIZE 31,07 OF oDlgLote PIXEL //"Prefixo"
@ a1stRow[1] + 008, a1stRow[2] + 027 MSGET oPrefixo VAR SE1->E1_PREFIXO	SIZE 25,08 OF oDlgLote PIXEL When .F.
@ a1stRow[1] + 008, a1stRow[2] + 060 SAY STR0212 				SIZE 31,07 OF oDlgLote PIXEL //"Número"
@ a1stRow[1] + 008, a1stRow[2] + 085 MSGET oTitulo VAR SE1->E1_NUM		SIZE 70,08 OF oDlgLote PIXEL When .F.
@ a1stRow[1] + 008, a1stRow[2] + 165 SAY STR0213				SIZE 31,07 OF oDlgLote PIXEL //"Parcela"
@ a1stRow[1] + 008, a1stRow[2] + 188 MSGET oParcela VAR SE1->E1_PARCELA	SIZE 25,08 OF oDlgLote PIXEL When .F.
@ a1stRow[1] + 008, a1stRow[2] + 220 SAY STR0214				SIZE 31,07 OF oDlgLote PIXEL //"Tipo"
@ a1stRow[1] + 008, a1stRow[2] + 238 MSGET oTipo VAR SE1->E1_TIPO	F3 "SE1RDO" SIZE 30,08 OF oDlgLote PIXEL HASBUTTON
oTipo:lReadOnly := .T.

@ a1stRow[1] + 020, a1stRow[2] + 004 SAY STR0014 SIZE 22, 07 OF oDlgLote PIXEL //"Cliente"
@ a1stRow[1] + 020, a1stRow[2] + 027 MSGET oNomeCli VAR SE1->E1_CLIENTE F3 "SA1" SIZE 70,08 OF oDlgLote PIXEL HASBUTTON
oNomeCli:lReadOnly := .T.
@ a1stRow[1] + 020, a1stRow[2] + 105 MSGET SA1->A1_NOME SIZE 165,08 OF oDlgLote PIXEL When .F.

@ a1stRow[1] + 032, a1stRow[2] + 004 SAY STR0052 				SIZE 31,07 OF oDlgLote PIXEL //"Natureza"
@ a1stRow[1] + 032, a1stRow[2] + 027 MSGET oNaturez VAR SE1->E1_NATUREZ	F3 "SED" SIZE 70,08 OF oDlgLote PIXEL HASBUTTON
oNaturez:lReadOnly := .T.
@ a1stRow[1] + 032, a1stRow[2] + 105 SAY STR0012 				SIZE 31,07 OF oDlgLote PIXEL //"Emiss„o"
@ a1stRow[1] + 032, a1stRow[2] + 133 MSGET oEmissao VAR dEmissao	SIZE 48,08 OF oDlgLote PIXEL HASBUTTON When .F.
@ a1stRow[1] + 032, a1stRow[2] + 189 SAY STR0013 				SIZE 49,07 OF oDlgLote PIXEL //"Vencto.Atual"
@ a1stRow[1] + 032, a1stRow[2] + 222 MSGET oVencRea VAR dVencRea SIZE 48,08 OF oDlgLote PIXEL HASBUTTON When .F.

//////////////////////////
//Dados Gerais
nUltLin := 10 + a2ndRow[1]
@ nUltLin,005 SAY STR0015 SIZE 39, 07 OF oDlgLote PIXEL //"Hist.Emiss„o"
@ nUltLin,065 MSGET oHist		VAR cHist	SIZE 65, 08 OF oDlgLote PIXEL When .F.

nUltLin += 12
@ nUltLin,005 SAY STR0016 SIZE 35, 07 OF oDlgLote PIXEL //"Situa‡„o"
@ nUltLin,065 MSGET oSituacao	VAR cSituacao	SIZE 65, 08 OF oDlgLote PIXEL When .F.

nUltLin += 12
@ nUltLin,005 SAY STR0023 SIZE 32, 07 OF oDlgLote PIXEL //"Mot.Baixa"

@ nUltLin,065 MSCOMBOBOX oMotBx VAR cMotBx ITEMS aDescMotBx ;
	VALID IIF(lFA070MDB,lMdbOk:=ExecBlock("FA070MDB",.F.,.F.),.T.) ;
	SIZE 56, 10 OF oDlgLote PIXEL

nUltLin += 12
@ nUltLin,005 SAY STR0017 SIZE 32, 07 OF oDlgLote PIXEL //"Banco"
@ nUltLin,065 MSGET oBanco		VAR cBanco		F3 "SA6" SIZE 22, 08 OF oDlgLote PIXEL  HASBUTTON READONLY Valid CarregaSa6(@cBanco,,,.T.)

nUltLin += 12
@ nUltLin,005 SAY STR0018 SIZE 32, 07 OF oDlgLote PIXEL //"Agˆncia"
@ nUltLin,065 MSGET oAgencia 	VAR cAgencia	SIZE 35, 08 OF oDlgLote PIXEL Valid ;
											CarregaSa6(@cBanco,@cAgencia,,.T.) ;
											WHEN ( If(!(FN022SITCB(SE1->E1_SITUACA)[1]),.F.,.T.) .and. MovBcobx(cMotBx, .T.)) .and. ;
										 	If ( cLoteFin == Space(TamSX3("E1_LOTE")[1]), .t., .f. )

nUltLin += 12
@ nUltLin,005 SAY STR0019 SIZE 28, 07 OF oDlgLote PIXEL //"Conta"
@ nUltLin,065 MSGET oConta		VAR cConta		SIZE 65, 08 OF oDlgLote PIXEL Valid ;
											If(CarregaSa6(@cBanco,@cAgencia,@cConta,.T.,,.T.),.T.,oBanco:SetFocus()) ;
											WHEN ( If(!(FN022SITCB(SE1->E1_SITUACA)[3]),.F.,.T.) .and. MovBcobx(cMotBx, .T.)) .and. ;
										 	If ( cLoteFin == Space(TamSX3("E1_LOTE")[1]), .t., .f. )

nUltLin += 12
@ nUltLin, 005 SAY STR0020 SIZE 39, 07 OF oDlgLote PIXEL//"Data Receb."
@ nUltLin, 065 MSGET oBaixa		VAR dBaixa		SIZE 50, 08 OF oDlgLote PIXEL HASBUTTON When F070DtRe() .and. !(Alltrim(SE1->E1_ORIGEM)=="FINI055") Valid fA070Data(@nTxMoeda)

nUltLin += 12
@ nUltLin, 005 SAY STR0021 SIZE 32, 07 OF oDlgLote PIXEL //"Data Cr‚dito"
@ nUltLin, 065 MSGET oDtCredito	VAR dDtCredito	SIZE 50, 08 OF oDlgLote PIXEL HASBUTTON Valid (dDtCredito >= dBaixa  .and. Iif(SuperGetMv("MV_BXDTFIN",,"1") == "2", DtMovFin(dDtCredito,,"2"), .T.)) .or. GetMv("MV_ANTCRED")

nUltLin += 12
@ nUltLin, 005 SAY STR0022 SIZE 32, 07 OF oDlgLote PIXEL //"Hist.Baixa"
@ nUltLin, 065 MSGET oHist070	VAR cHist070	SIZE 65, 08 OF oDlgLote PIXEL Picture "@!" VALID CheckSX3("E5_HISTOR") When VisualSX3("E5_HISTOR")

If cPaisLoc == "BRA"
	nUltLin += 12
	@ nUltLin,005 SAY STR0142 	SIZE 53, 07 OF oDlgLote PIXEL //"Taxa contratada"
	@ nUltLin,0065 MSGET nTxMoeda         SIZE 65, 08 OF oDlgLote PIXEL HASBUTTON Picture PesqPict( "SM2","M2_MOEDA"+AllTrim(Str(SE1->E1_MOEDA))) ;
				 When SE1->E1_MOEDA > 1 Valid Fa070Val(0,nTxMoeda)
Endif
If lSpbInUse
	nUltLin += 12
	@ nUltLin,005 SAY STR0140 SIZE 32, 07 OF oDlgLote PIXEL  //"Modalidade SPB"
	@ nUltLin,065 COMBOBOX oModSPB VAR cModSpb ITEMS aModalSpb SIZE 56, 47 OF oDlgLote PIXEL
Endif
If !__lPyme
	nUltLin += 12
	@ nUltLin,005 SAY STR0173 SIZE 100, 07 OF oDlgLote PIXEL  //"Rateio Mult.Naturezas"
	@ nUltLin,65 CHECKBOX oMultNat VAR lMultNat PROMPT "" SIZE 11,11 OF oDlgLote PIXEL
EndIf

//////////////////////////
//Dados da Baixa
nUltLin := 7 + a2ndRow[1]
@ nUltLin,144 SAY STR0027 + cDescMoeda SIZE 53, 08 OF oDlgLote PIXEL //"Valor Original "
@ nUltLin,204 MSGET oValor 	VAR nValor	SIZE 65, 08 OF oDlgLote PIXEL  HASBUTTON When .F. Picture PesqPict( "SE1","E1_VALOR" )  //"@E 999,999,999,999.99"

If cPaisLoc <> "CHI"
	nUltLin += 12
	@ nUltLin,144 SAY STR0028 SIZE 53, 07 OF oDlgLote PIXEL // "- Abatimentos"
	@ nUltLin,204 MSGET oTotAbLiq	VAR nTotAbLiq  	SIZE 65, 08 OF oDlgLote PIXEL HASBUTTON  When .F.  Picture PesqPict( "SE1","E1_VALOR" )  //"@E 999,999,999,999.99"

	If cPaisLoc == "BRA"
		nUltLin += 12
		@ nUltLin,144 SAY STR0186 SIZE 53, 07 OF oDlgLote PIXEL // "- Impostos"
		@ nUltLin,204 MSGET oTotAbImp  VAR nTotAbImp  SIZE 65, 08 OF oDlgLote PIXEL  HASBUTTON When .F.  Picture PesqPict( "SE1","E1_VALOR" )  //"@E 999,999,999,999.99"

		nValorLiq :=  (SE1->E1_VALOR - nTotAbLiq - nTotAbImp)
		nUltLin += 12
		@ nUltLin,144 SAY STR0187 SIZE 53, 07 OF oDlgLote PIXEL // "Valor Liquido"
		@ nUltLin,204 MSGET oValorLiq VAR nValorLiq     SIZE 65, 08 OF oDlgLote PIXEL HASBUTTON When .F. Picture PesqPict("SE1","E1_VLCRUZ") //"@E 999,999,999,999.99"
	Endif
EndIf
nUltLin += 12
@ nUltLin,144 SAY STR0029 SIZE 53, 07 OF oDlgLote PIXEL //"- Pagtos Parciais"
@ nUltLin,204 MSGET oParciais	VAR nParciais	SIZE 65, 08 OF oDlgLote PIXEL  HASBUTTON When .F.  Picture PesqPict( "SE1","E1_VALOR" )  //"@E 999,999,999,999.99"

nUltLin += 12
@ nUltLin,144 SAY  STR0136 SIZE 53, 07 OF oDlgLote PIXEL //"- Decrescimo"
@ nUltLin,204 MSGET oDecresc VAR Iif(lSDDECVL, SE1->E1_DECRESC,nDecrescF)  SIZE 65, 08 OF oDlgLote PIXEL  HASBUTTON     Picture PesqPict( "SE1","E1_DECRESC" )  When .f.

nUltLin += 12
@ nUltLin,144 SAY  STR0135 SIZE 53, 07 OF oDlgLote PIXEL //"+ Acrescimo"
@ nUltLin,204 MSGET oAcresc VAR nAcrescF  SIZE 65, 08 OF oDlgLote PIXEL  HASBUTTON     Picture PesqPict( "SE1","E1_ACRESC" )  When .f. //"@E 999,999,999,999.99"

nUltLin += 12
@ nUltLin,144 SAY STR0030 SIZE 53, 07 OF oDlgLote PIXEL //"- Descontos"
@ nUltLin,204 MSGET oDescont VAR nDescont  SIZE 65, 08 OF oDlgLote PIXEL HASBUTTON When F070DSC()  Picture PesqPict( "SE1","E1_DESCONT" ) ; //"@E 999,999,999,999.99"
															Valid F70VlDsc()

nOldDescont := nDescont

nUltLin += 12
@ nUltLin,144 SAY STR0101 SIZE 53, 07 OF oDlgLote PIXEL //"+ Multa"
@ nUltLin,204 MSGET oMulta VAR nMulta  SIZE 65, 08 OF oDlgLote PIXEL HASBUTTON Picture PesqPict( "SE1","E1_MULTA" ) ; //"@E 999,999,999,999.99"
															When F070Mul(oMulta) .And. If(SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG .And. !MovBcobx(cMotBx, .T.), .F., .T.);
															Valid Iif(nOldMulta # nMulta, (fA070Val(nMulta,nTxMoeda),nOldMulta := nMulta), .T.)
nOldMulta := nMulta

If cPaisLoc <> "CHI"
	nUltLin += 12
   @ nUltLin,144 SAY STR0031 SIZE 53, 07 OF oDlgLote PIXEL //"+ Tx.Permanenc."
   @ nUltLin,204 MSGET oJuros VAR nJuros   SIZE 65, 08 OF oDlgLote PIXEL HASBUTTON When F070JRS() Picture PesqPict( "SE1","E1_JUROS" ) ; //"@E 999,999,999,999.99"
		   													Valid Iif(nOldJuros # nJuros, (fA070Val(nJuros,nTxMoeda),nOldJuros := nJuros), .T.)
	nOldJuros := nJuros
Else
	nUltLin += 12
   @ nUltLin,144 SAY STR0133 SIZE 53, 07 OF oDlgLote PIXEL //"- Outros Gastos"
   @ nUltLin,204 MSGET oOtrga VAR nOtrga   SIZE 65, 08 OF oDlgLote PIXEL HASBUTTON Picture PesqPict( "SE1","E1_OTRGA" ) ; //"@E 999,999,999,999.99"
   Valid fA070Val(nOtrga)
EndIf
//Controla IRPJ na baixa
If cPaisLoc == "BRA" .And. lIrPjBxCr .And. !__lIrfMR
	nUltLin+=12
	@ nUltLin,144 SAY STR0228  SIZE 53, 07 OF oDlgLote PIXEL  // "- IRRF"
	@ nUltLin,204 MSGET oIrrf VAR nIrrf SIZE 66, 08 OF oDlgLote PIXEL HASBUTTON Picture PesqPict( "SE1","E1_IRRF" ); //"@E 999,999,999,999.99"
													 Valid Iif( nOldIrrf # nIrrf, (fA070Val(nIrrf,nTxMoeda),nOldIrrf := nIrrf), .T.) When nIrrf > 0  //f070ValRec(@nValorRec,nTotAbLiq,nPis,nCofins,nCsll,nIrrf,nIss,nInss)
	nOldIrrf := nIrrf
EndIf

//Pcc Baixa CR
If cPaisLoc == "BRA" .And. lPccBxCR .And. !__lPccMR //1-Retem PCC na Baixa ou 2-Retem PCC na Emissão(default)
   nUltLin +=12
   @ nUltLin,144 SAY STR0216 SIZE 53, 07 OF oDlgLote PIXEL //"- PIS"
   @ nUltLin,204 MSGET oPIS VAR nPIS   SIZE 66, 08 OF oDlgLote PIXEL HASBUTTON  Picture PesqPict( "SE1","E1_PIS" ) ; //"@E 999,999,999,999.99"
		   Valid Iif(nOldPis # nPis, (fA070Val(nPIS,nTxMoeda,.T.),nOldPis := nPis), .T.)
			nOldPis := nPis

   nUltLin +=12
   @ nUltLin,144 SAY STR0217 SIZE 53, 07 OF oDlgLote PIXEL //"- COFINS"
   @ nUltLin,204 MSGET oCOFINS VAR nCOFINS   SIZE 66, 08 OF oDlgLote PIXEL HASBUTTON Picture PesqPict( "SE1","E1_COFINS" ) ; //"@E 999,999,999,999.99"
		   Valid Iif(nOldCofins # nCofins, (fA070Val(nCOFINS,nTxMoeda,.T.),nOldCofins := nCofins), .T.)
			nOldCofins := nCofins

   nUltLin +=12
   @ nUltLin,144 SAY STR0218 SIZE 53, 07 OF oDlgLote PIXEL //"- CSLL"
   @ nUltLin,204 MSGET oCSLL VAR nCSLL   SIZE 66, 08 OF oDlgLote PIXEL HASBUTTON Picture PesqPict( "SE1","E1_CSLL" ) ; //"@E 999,999,999,999.99"
		   Valid Iif(nOldCsll # nCsll, (fA070Val(nCsll,nTxMoeda,.T.),nOldCsll := nCsll), .T.)
			nOldCsll := nCsll
EndIf

//Motor de Retenções
If __lTemMR .And. (__nTotImp > 0 .or. !Empty(cLote))
	nUltLin +=12
	@ nUltLin,144 SAY STR0286	SIZE 53,07 OF oDlgLote PIXEL //"- Retenções"
	@ nUltLin,204 MSGET __oRetMot VAR __nTotImp	SIZE 66, 08 OF oDlgLote PIXEL HASBUTTON Picture PesqPict("SE1","E1_VALLIQ")  ;
	Valid .T. When .F.
EndIf

//Valores Acessorios
If lPodeTVA .and. lExistVA
	nUltLin +=12
	@ nUltLin,144 SAY "+ "+ STR0274		SIZE 53,07 OF oDlgLote PIXEL	//"+ Valores Acessórios"
	@ nUltLin,204 MSGET oVA VAR nVA	SIZE 66, 08 OF oDlgLote PIXEL HASBUTTON Picture PesqPict("FKD","FKD_VALOR") When  .F.
	nOldVA := nVA
Endif

nUltLin += 12
@ nUltLin,144 SAY STR0033 SIZE 53,07 OF oDlgLote PIXEL //"= Valor Recebido"
@ nUltLin,204 MSGET oValRec VAR nValRec SIZE 65, 08 OF oDlgLote PIXEL HASBUTTON Picture PesqPict( "SE1","E1_VALOR" )  ;//"@E 999,999,999,999.99"
			Valid IIF( SE1->E1_MOEDA == 1,;
					( FA070ValRec(oJuros,oMulta,oProRata,oDescont) , nValEstrang := nValRec , oVlEstrang:Refresh()),;
					( oValRec:Refresh() , Fa070ValVR(nTxMoeda) , oVlEstrang:Refresh() , oCM:Refresh()) )

nUltLin += 12
@ nUltLin,144 SAY STR0034+cDescMoeda SIZE 53, 7 OF oDlgLote PIXEL // "Valor "
@ nUltLin,204 MSGET oVlEstrang VAR nValEstrang SIZE 65, 08 OF oDlgLote PIXEL HASBUTTON Picture PesqPict( "SE1","E1_VALOR" )  When SE1->E1_MOEDA > 1  //"@E 999,999,999,999.99"

nUltLin += 12
@ nUltLin,144 SAY STR0032 SIZE 53,07 OF oDlgLote PIXEL // "+ Corr.Monet ria"
@ nUltLin,204 MSGET oCM     VAR nCM		SIZE 65, 08 OF oDlgLote PIXEL  HASBUTTON    Picture PesqPict( "SE1","E1_CORREC" )  ;// "@E 999,999,999,999.99"
												When SE1->E1_MOEDA > 1 .And. (IIf(GetMv("MV_CALCCM") == "S",.T.,.F.))

If lPanelFin
	ACTIVATE MSDIALOG oDlgLote ON INIT FaMyBar(oDlgLote,{||( nOpca := 1,;
						If(lFA070MDB.and. !lMdbOk,lMdbOk:=ExecBlock("FA070MDB",.F.,.F.),.t.) .and. ;
						IIf(UsaSeqCor() , FA070Diario(), .T. ) .and.;
						Fa070But(nOpca,nTolerPg,lMovBco,lJuros,@lBaixou,;
						@cTitulo,@oTitulo,@cParcela,@dEmissao,@oEmissao,;
						@dVencRea,@oVencRea,@cNomeCli,@oNomeCli,@cHist,@oHist,;
						@cSituacao,@oSituacao,@cBanco,@oBanco,@cAgencia,@oAgencia,;
						@cConta,@oConta,@oBaixa,@dDtCredito,@oDtCredito,;
						@cHist070,@oHist070,@cMotBx,@oMotBx,@nValor,@oValor,;
						@nTotAbLiq,@oTotAbLiq,@nTotAbImp,@oTotAbImp,@nParciais,@oParciais,@oDescont,;
						@oMulta,Iif(cPaisLoc <> "CHI",@oJuros,@oOtrga),@oValRec,@oValEstr,@oCMonet,@oDlgLote,;
						cMarca,@nTotal, @nHdlPrv, @lHdlPrv, @lPadrao,@cArquivo,;
						@cPadrao, aDescMotBx,@nAcresc,@oAcresc,@nDecresc,@oDecresc,@nAcrescF,@nDecrescF,;
						aModalSpb,@oModSpb,lSpbInUse,nTxMoeda,@oMultNat,@lMultNat,@nTotLtEZ,@nValorLiq,@oValorLiq,.T.,;
						@oPrefixo,@oParcela,@oTipo,@aDiario,lPccBxCr,@oPis,@oCofins,@oCsll,;
						@nOldDescont,@nOldMulta,@nOldJuros,@nOldPis,@nOldCofins,@nOldCsll, @lIrPjBxCr, @nIrrf,@oIrrf, @nOldIrrf,@oVA))},;
                  {||( nOpca := 0 ,;
						Fa070But(nOpca,nTolerPg,lMovBco,lJuros,@lBaixou,;
						@cTitulo,@oTitulo,@cParcela,@dEmissao,@oEmissao,;
						@dVencRea,@oVencRea,@cNomeCli,@oNomeCli,@cHist,@oHist,;
						@cSituacao,@oSituacao,@cBanco,@oBanco,@cAgencia,@oAgencia,;
						@cConta,@oConta,@oBaixa,@dDtCredito,@oDtCredito,;
						@cHist070,@oHist070,@cMotBx,@oMotBx,@nValor,@oValor,;
						@nTotAbLiq,@oTotAbLiq,@nTotAbImp,@oTotAbImp,@nParciais,@oParciais,@oDescont,;
						@oMulta,Iif(cPaisLoc <> "CHI",@oJuros,@oOtrga),@oValRec,@oValEstr,@oCMonet,@oDlgLote,cMarca,;
						@nTotal, @nHdlPrv, @lHdlPrv, @lPadrao, @cArquivo,@cPadrao,;
						aDescmotBx,@nAcresc,@oAcresc,@nDecresc,@oDecresc,@nAcrescF,@nDecrescF,;
						aModalSpb,@oModSpb,lSpbInUse,nTxMoeda,@oMultNat,@lMultNat,@nTotLtEZ,@nValorLiq,@oValorLiq,.T.,;
						@oPrefixo,@oParcela,@oTipo,@aDiario,lPccBxCr,@oPis,@oCofins,@oCsll,;
						@nOldDescont,@nOldMulta,@nOldJuros,@nOldPis,@nOldCofins,@nOldCsll,@lIrPjBxCr, @nIrrf,@oIrrf, @nOldIrrf,@oVA))},aButtons) CENTERED

Else

	ACTIVATE MSDIALOG oDlgLote ON INIT EnchoiceBar(oDlgLote,{|| ( nOpca := 1,;
						If(lFA070MDB.and. !lMdbOk,lMdbOk:=ExecBlock("FA070MDB",.F.,.F.),.t.) .and. ;
						IIf(UsaSeqCor() , FA070Diario(), .T. ) .and.;
						Fa070But(nOpca,nTolerPg,lMovBco,lJuros,@lBaixou,;
						@cTitulo,@oTitulo,@cParcela,@dEmissao,@oEmissao,;
						@dVencRea,@oVencRea,@cNomeCli,@oNomeCli,@cHist,@oHist,;
						@cSituacao,@oSituacao,@cBanco,@oBanco,@cAgencia,@oAgencia,;
						@cConta,@oConta,@oBaixa,@dDtCredito,@oDtCredito,;
						@cHist070,@oHist070,@cMotBx,@oMotBx,@nValor,@oValor,;
						@nTotAbLiq,@oTotAbLiq,@nTotAbImp,@oTotAbImp,@nParciais,@oParciais,@oDescont,;
						@oMulta,Iif(cPaisLoc <> "CHI",@oJuros,@oOtrga),@oValRec,@oValEstr,@oCMonet,@oDlgLote,;
						cMarca,@nTotal, @nHdlPrv, @lHdlPrv, @lPadrao,@cArquivo,;
						@cPadrao, aDescMotBx,@nAcresc,@oAcresc,@nDecresc,@oDecresc,@nAcrescF,@nDecrescF,;
						aModalSpb,@oModSpb,lSpbInUse,nTxMoeda,@oMultNat,@lMultNat,@nTotLtEZ,@nValorLiq,@oValorLiq,.T.,;
						@oPrefixo,@oParcela,@oTipo,@aDiario,lPccBxCr,@oPis,@oCofins,@oCsll,;
						@nOldDescont,@nOldMulta,@nOldJuros,@nOldPis,@nOldCofins,@nOldCsll, @lIrPjBxCr, @nIrrf,@oIrrf, @nOldIrrf,@oVA))},;
                  {||( nOpca := 0 ,;
						Fa070But(nOpca,nTolerPg,lMovBco,lJuros,@lBaixou,;
						@cTitulo,@oTitulo,@cParcela,@dEmissao,@oEmissao,;
						@dVencRea,@oVencRea,@cNomeCli,@oNomeCli,@cHist,@oHist,;
						@cSituacao,@oSituacao,@cBanco,@oBanco,@cAgencia,@oAgencia,;
						@cConta,@oConta,@oBaixa,@dDtCredito,@oDtCredito,;
						@cHist070,@oHist070,@cMotBx,@oMotBx,@nValor,@oValor,;
						@nTotAbLiq,@oTotAbLiq,@nTotAbImp,@oTotAbImp,@nParciais,@oParciais,@oDescont,;
						@oMulta,Iif(cPaisLoc <> "CHI",@oJuros,@oOtrga),@oValRec,@oValEstr,@oCMonet,@oDlgLote,cMarca,;
						@nTotal, @nHdlPrv, @lHdlPrv, @lPadrao, @cArquivo,@cPadrao,;
						aDescmotBx,@nAcresc,@oAcresc,@nDecresc,@oDecresc,@nAcrescF,@nDecrescF,;
						aModalSpb,@oModSpb,lSpbInUse,nTxMoeda,@oMultNat,@lMultNat,@nTotLtEZ,@nValorLiq,@oValorLiq,.T.,;
						@oPrefixo,@oParcela,@oTipo,@aDiario,lPccBxCr,@oPis,@oCofins,@oCsll,;
						@nOldDescont,@nOldMulta,@nOldJuros,@nOldPis,@nOldCofins,@nOldCsll, @lIrPjBxCr, @nIrrf,@oIrrf, @nOldIrrf,@oVA))},,aButtons ) CENTERED
Endif

SetKey(VK_F4,bSetKey)
Return lBaixou

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fA070OK   ³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Verifica se dados digitados esta OK                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fA070ok()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa070OK(cBanco,cAgencia,cConta,nValRec,dBaixa,nJuros,nCM,nMulta,;
						nDescont,nTotAbat,nTolerPg,lMovBco,aDescMotBx,nAcresc,nDecresc,;
						lSpbInUse,nTxMoeda,nTotLtEZ,nVa)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se nao foi alterado o banco quando for tit. em desconto.     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( FN022SITCB(SE1->E1_SITUACA)[3] .And.;
	 cBanco+cAgencia+cConta!=SE1->E1_PORTADO+SE1->E1_AGEDEP+SE1->E1_CONTA )
	Help(" ",1,"FINA070BCO")
	Return .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se valor da baixa ‚ maior que o valor m ximo a receber       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF SE1->E1_MOEDA == 1 .and. Str(xMoeda(nValRec, SE1->E1_MOEDA, nMoedaBco,dbaixa,7,nTxMoeda),17,2) > Str((xMoeda(SE1->E1_SALDO-nTotAbat,SE1->E1_MOEDA,nMoedaBco,dBaixa,7,nTxMoeda)+Iif(Alltrim(SE1->E1_ORIGEM) == "FINA074",0,nJuros+nVa+nMulta-nDescont-nOtrga+nTolerPg+nAcresc-nDecresc)),17,2)
	Help(" ",1,"ValorMaior")
	Return .F.
ElseIF SE1->E1_MOEDA > 1 .and. Str(xMoeda(nValRec, nMoedaBco,SE1->E1_MOEDA ,dbaixa,7,nTxMoeda),17,2) > Str((xMoeda(SE1->E1_SALDO-nTotAbat,SE1->E1_MOEDA,nMoedaBco,dBaixa,7,nTxMoeda)+Iif(Alltrim(SE1->E1_ORIGEM) == "FINA074",0,nJuros+nVa+nMulta-nDescont-nOtrga+nTolerPg+nAcresc-nDecresc)),17,2)
    Help(" ",1,"ValorMaior")
    Return .F.
Endif

dbSelectArea("SE1")
If Empty( cMotBx )
	cMotBx := aDescMotBx[1]  //"NORMAL"
Endif

IF Empty(dBaixa) .or. (nValRec < 0 ) .or. Empty(cMotBx)
	Help(" ",1,"FA070INV")
	Return .F.
EndIF

If nDescont != Round(xMoeda(SE1->E1_SALDO,SE1->E1_MOEDA,nMoedaBco,dBaixa,3,nTxMoeda),2)
	If (nTotAbat=0.and.nValRec=0).or.(nValRec=0.and.nTotAbat!=SE1->E1_SALDO)
		Help(" ",1,"FA070INV")
		Return .F.
	EndIf
EndIF

If !FA070ValMo(lMovBco)
	Return .F.
EndIF
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se modalidade do SPB é valida.									    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lSpbInUse
	cModSpb := Substr(cModSpb,1,1)
	IF !(SpbTipo("SE1",cModSpb,SE1->E1_TIPO))
		Return .F.
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se data da baixa e valida                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF (dBaixa < SE1->E1_EMISSAO .OR. dBaixa > dDataBase) .and. !GetMv("MV_ANTCRED")
	Help( " ", 1, "DATAERR" )
	Return .F.
Endif
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FA070But  ³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Recarrega Variaveis                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Fa070But()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa070But(nOpca,nTolerPg,lMovBco,lJuros,lBaixou,;
						cTitulo,oTitulo,cParcela,dEmissao,oEmissao,;
						dVencRea,oVencRea,cNomeCli,oNomeCli,cHist,oHist,;
						cSituacao,oSituacao,cBanco,oBanco,cAgencia,oAgencia,;
						cConta,oConta,oBaixa,dDtCredito,oDtCredito,;
						cHist070,oHist070,cMotBx,oMotBx,nValor,oValor,;
						nTotAbLiq,oTotAbLiq,nTotAbImp,oTotAbImp,nParciais,oParciais,oDescont,;
						oMulta,oJuros,oValRec,oValEstr,oCMonet,oDlgLote,cMarca,;
						nTotal, nHdlPrv, lHdlPrv, lPadrao, cArquivo,cPadrao,aDescMotBx,;
						nAcresc,oAcresc,nDecresc,oDecresc,nAcrescF,nDecrescF,;
						aModalSpb,oModSpb,lSpbInUse,nTxMoeda,oMultNat,lMultNat,nTotLtEZ,nValorLiq,oValorLiq,lBxLote,;
						oPrefixo,oParcela,oTipo,aDiario,lPccBxCr,oPis,oCofins,oCsll,;
						nOldDescont,nOldMulta,nOldJuros,nOldPis,nOldCofins,nOldCsll, lIrPjBxCr, nIrrf,oIrrf, nOldIrrf,oVA)

Local nSalvRec
Local lRet			:= .T.
LOCAL lContabiliza	:= (mv_par04 == 1)
Local lOk			:= .F. //Controla se foi confirmada a distribuicao
Local aColsSEV		:= {}
Local aFlagCTB		:= {}
Local lUsaFlag		:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)
Local x
LOCAL lBxLiq		:= .F.
LOCAL lBxCEC		:= .F.  //Verificador de existencia de baixa por compensacao entre carteiras
Local aBaixa		:= {}
LOCAL nVlrBaixa		:= 0
LOCAL lBaixaAbat	:= .F.
LOCAL nTotAdto		:= 0
Local lSaveState	:= ALTERA
Local aAlt			:= {}
Local aPcc			:= {}
Local nBase			:= 0
Local lJurMulDes	:= (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")
Local lGerPCCBD 	:= .F.
Local lExistVA 		:= TableInDic("FKD") .and. TableInDic("FKC")
Local lSDACRVL 		:= SuperGetMv("MV_SDACRVL",.T.,.F.)
Local lSDDECVL	 	:= .F.
Local lCalcIssBx 	:= GetNewPar("MV_MRETISS","1") == "2"  //Retencao do ISS pela emissao (1) ou baixa (2)

DEFAULT nTxMoeda 	:= 0
DEFAULT lBxLote 	:= .F.
DEFAULT lPccBxCr 	:= .F.
DEFAULT lIrPjBxCr 	:= .F.

If Type("aImpos") == "U"
	aImpos := {}
EndIf

// Zerar variaveis para contabilizar os impostos da lei 10925.
VALOR5 := 0
VALOR6 := 0
VALOR7 := 0

If nOpca == 1
	//.....
	//    Conforme situacao do parametro abaixo, integra com o SIGAGSP ³
	//    MV_SIGAGSP - 0-Nao / 1-Integra                   ³
	//    Validacao da Data de Baixa
	//    ......
	If GetNewPar("MV_SIGAGSP","0") == "1"
	   lRet := GSPF040()
	   If !lRet
		  Return lRet
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada de Template para Confirmacao da Baixa       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistTemplate("FA070TIT")
		lRet := ExecTemplate("FA070TIT",.F.,.F.,{nParciais})
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada para Confirmacao da Baixa                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("FA070TIT")
		lRet := ExecBlock("FA070TIT",.F.,.F.,{nParciais})
	Endif

	If !lRet
		Return lRet
	Else
		oDescont:Refresh()
		oMulta:Refresh()
		oJuros:Refresh()
		oValRec:Refresh()
		oAcresc:Refresh()
		oDecresc:Refresh()
		If lPodeTVA .and. lExistVA
			oVA:Refresh()
		EndIf
	EndIf

	If MovBcobx(cMotBx, .T.) .and. If(!FwIsInCallStack("FA450CMP") ,!CarregaSA6(cBanco,cAgencia,cConta,.T.,,.T.),.F.)
		Return .F.
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se data do movimento ‚ menor que data limite de     ³
	//³ movimentacao no financeiro                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SuperGetMv("MV_BXDTFIN",,"1") == "2" .and.!DtMovFin(dDtCredito,,"2")
		Return
	EndIf

	If !Fa070OK(cBanco,cAgencia,cConta,nValRec,dBaixa,nJuros,;
			nCM,nMulta,nDescont,nTotAbat,nTolerPg,lMovBco,aDescMotBx,nAcresc,nDecresc,;
			lSpbInUse,nTxMoeda,,nVA)
		Return .F.
	EndIf
	nValPadrao := nValRec-(nJuros+nVa+Iif(SE1->E1_MOEDA<=1,nCM,0)+nMulta-nDescont+nAcresc-nDecresc)
	If Empty( cMotBx )
		cMotBx := aDescMotBx[1]  //"NORMAL"
	Endif

	cPadrao   := fA070Pad()
	lPadrao   := VerPadrao(cPadrao)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicio da prote‡„o via TTS                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SE1")
	nRegSE1 := Recno()

	If MV_MULNATR .and. lMultNat
		MultNatB("SE1",.F.,STR(mv_par07,1),@lOk,@aColsSEV,@lMultNat)
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicializa a gravacao dos lancamentos do SIGAPCO          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoIniLan("000004")

	Begin Transaction
		aHdlPrv	:= {}
		Aadd(aHdlPrv,{nHdlPrv,cPadrao,aFlagCTB,cArquivo})
		lSaveState := ALTERA
		lBaixou := fA070Grv(lPadrao,Nil,NIl,Nil,Nil,dDtCredito,lJuros,Nil,Nil,nTxMoeda,mv_par08==1,{},aHdlPrv,.F.,lMultNat,, aImpos,__lPccMR,__lIrfMR,__lInsMR,__lIssMR,__lGlosaMr,__lImpMR) //Nil=Arquivo Cnab//Nil=Arquivo Cnab
		ALTERA := lSaveState
		dbSelectArea("SE1")
		dbGoTo(nRegSE1)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Soma nos totalizadores, exceto se a situa‡„o do t¡tulo for:     ³
		//³2 - Cobran‡a Descontada   ou   7 - Cobranca Cau‡„o Descontada   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF !(FN022SITCB(SE1->E1_SITUACA)[3])
			nTotAGer  += nValRec
			nTotADesc += nDescont+nDecresc
			nTotAMul  += nMulta
			nTotAJur  += nJuros+nAcresc
			nTotADesp += Iif(SE1->E1_MOEDA<=1,nCM,0)
		Endif

		// Verifica se esta utilizando multiplas naturezas
		// Chama rotina de gravacao do SEV e SEZ
		If MV_MULNATR .and. lMultNat .and. lOk
			MultNatC("SE1",@nHdlPrv,@nTotal,@cArquivo,lContabiliza,.T.,STR(mv_par07,1),@nTotLtEZ,lOk,aColsSEV,lBaixou)
			lHdlPrv := nHdlPrv > 0
		Endif

		If lBaixou

			/*
			Atualiza o status do titulo no SERASA */
			If cPaisLoc == "BRA"
				If SE1->E1_SALDO <= 0
					cChaveTit := xFilial("SE1") + "|" +;
								SE1->E1_PREFIXO + "|" +;
								SE1->E1_NUM		+ "|" +;
								SE1->E1_PARCELA + "|" +;
								SE1->E1_TIPO	+ "|" +;
								SE1->E1_CLIENTE + "|" +;
								SE1->E1_LOJA
					cChaveFK7 := FINGRVFK7("SE1",cChaveTit)
					F770BxRen("1",TrazCodMot(cMotBx),cChaveFK7)
				Endif
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava os cheques no SEF ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			GravaChqCR(SE5->E5_SEQ,"FINA070")

			//-----------------------------------------------------------
			//Valores Acessorios.
			//-----------------------------------------------------------
			If lPodeTVA .and. lExistVA
				FAtuFKDBx()
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava os lancamentos nas contas orcamentarias SIGAPCO    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			F070PcoDet()
			///numbor
			aAlt := {}
		    aadd( aAlt,{ STR0261,'','','',STR0262 +  Alltrim(cLoteFin) + STR0263 + Alltrim(Transform(SE5->E5_VALOR,PesqPict("SE5","E5_VALOR"))) })
			///chamada da Função que cria o Histórico de Cobrança
			DbSelectArea("SE1")
			FinaCONC(aAlt)

		Endif

		IF lBaixou .and. lContabiliza .and. !lMultNat

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Localizacao Portugal - Gera dados para diario contabil ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If UsaSeqCor()
				AAdd( aDiario, {"SE5",SE5->(Recno()),cCodDiario,"E5_NODIA","E5_DIACTB"} )
			Else
				aDiario := {}
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica qual o Lanc Padr„o que sera utilizado 	  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cPadrao := fa070Pad()
			lPadrao:=VerPadrao(cPadrao)
			IF !lHdlPrv .And. lPadrao
		 		nHdlPrv:=HeadProva(cLote,"FINA070",Substr(cUsuario,7,6),@cArquivo)
				lHdlPrv := .T.
			EndIF
			IF lPadrao .and. lHdlPrv .and. !FwIsInCallStack("Fa450Can")
				VALOR := 0
				ABATIMENTO := Round(NoRound(xMoeda(nTotAbat,SE1->E1_MOEDA,nMoedaBco,dBaixa,3),3),2)

				If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
					aAdd( aFlagCTB, {"E5_LA", "S", "SE5", SE5->( Recno() ), 0, 0, 0} )
				Endif
				nTotal += DetProva( nHdlPrv, cPadrao, "FINA070", cLote, /*nLinha*/, /*lExecuta*/,;
				                    /*cCriterio*/, /*lRateio*/, /*cChaveBusca*/, /*aCT5*/,;
				                    /*lPosiciona*/, @aFlagCTB, /*aTabRecOri*/, /*aDadosProva*/ )

			EndIF

		Endif

		If !lFini055 .and. FWHasEAI("FINA070",.T.,,.T.)
			FwIntegDef( 'FINA070' )
		Endif
		// Integração SIGAPFS x SIGAFIN
		If lBaixou .And. FindFunction("JGrvBaixa")
			lBaixou := JGrvBaixa(SE1->(Recno()), SE5->(Recno()))

			If !lBaixou
				DisarmTransaction()
			EndIf
		EndIf
	End Transaction

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Finaliza a gravacao dos lancamentos do SIGAPCO          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PcoFinLan("000004")

	If ExistBlock ("F070BXLT")
		ExecBlock ("F070BXLT",.F.,.F.,{lBxLote})
	EndIF

	dbSelectArea("SE1")
	dbGoTo(nRegSE1)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
	//³Integracao protheus X tin Baixa por Lote	³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Limpa marca para titulo com baixa abortada.                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea(cAliasLote)
	Begin Transaction
		RecLock (cAliasLote,.F.)
		Replace E1_OK with ""
	End Transaction
Endif

//Posiciono no próximo registro do TRB
(cAliasLote)->(dbSKip())
While (cAliasLote)->(!Eof())
	If (cAliasLote)->E1_OK != cMarca .or. (cAliasLote)->E1_TIPO $ MVABATIM+"/"+MVFUABT //adicionado MVFUABT pois a variável MVABATIM não está retornando FU-
		(cAliasLote)->(dbSKip())
		Loop
	Else
		SE1->(dbGoto((cAliasLote)->RECNOSE1))
		Exit
	EndIf
EndDO

If (cAliasLote)->(Eof())
	oDlgLote:End()
	Return lBaixou
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Posiciona Cliente  no SA1	                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SA1")
SA1->(MsSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA))
dbSelectArea("SE1")
lIrPjBxCr	:= FIrPjBxCr(.T.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Carrega Variaveis da Baixa                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cTitulo		:= SE1->E1_NUM
cParcela	:= SE1->E1_PARCELA
dEmissao	:= SE1->E1_EMISSAO
dVencRea	:= SE1->E1_VENCREA
cNomeCli	:= SE1->E1_CLIENTE + " - " + Subst(SA1->A1_NOME,1,40)
cHist		:= SE1->E1_HIST
cSituacao	:= SE1->E1_SITUACA + " " + fa070situa()
dBaixa		:= CriaVar("E1_BAIXA")
dDtCredito  := dDataBase
cHist070	:= Criavar("E5_HISTOR")		//Inicilizador padrao
If Empty(cHist070)
	cHist070 := STR0007+Space(Len(cHist070)-24)  // "Valor recebido s/ T¡tulo"
Endif
nValor		:= SE1->E1_VALOR
dbSelectArea("SE1")
nSalvRec 	:= Recno()
nTotAbImp   := 0
nTotAbLiq   := 0
nTotAbat		:= SumAbatRec(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_MOEDA,"S",dBaixa,@nTotAbImp)
dbSelectArea("SE1")
dbGoto(nSalvRec)
nDescont    := 0
nMulta      := 0
nJuros      := 0
nCM         := 0
nVa			:= 0 //Valores Acessórios
nAcrescF		:= SE1->E1_SDACRES
If ExistBlock("F070ACRE")
	ExecBlock("F070ACRE",.F.,.F.)
Endif
If AllTrim(Type("cLoteFin")) == "C"
	If !Empty(AllTrim(cLoteFin))
		nTotAbLiq := nTotAbat
	EndIf
EndIf
nDeCrescF := SE1->E1_SDDECRE
nValorLiq := SE1->E1_VALOR - nTotAbLiq - nTotAbImp
nAcresc   := Round(NoRound(xMoeda(nAcrescF,SE1->E1_MOEDA,nMoedaBco,dBaixa,3),3),2)
nDecresc  := Round(NoRound(xMoeda(SE1->E1_SDDECRE,SE1->E1_MOEDA,nMoedaBco,dBaixa,3),3),2)
nValrec   := Round(Noround(xMoeda(SE1->E1_SALDO-nTotAbat,SE1->E1_MOEDA,nMoedaBco,dBaixa,3),3),2)+nMulta+nJuros+nVa-nDescont+nAcresc-nDecresc-nPis-nCofins-nCsll
nPIS      := 0
nCOFINS   := 0
nCSLL	  := 0
nIrrf	  := 0
nParciais := 0
aBaixaSE5 :={}

If __lTemMR .And. __lImpMR
	aImpos := F070VldImp(nValRec, dBaixa,@lPccBxCr, @lIrPjBxCr, @lCalcIssBx,@__lImpMR)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Para que o valor da baixa parcial nao fique negativo, verifico o saldo³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (SE1->E1_VALOR > SE1->E1_SALDO) .And. Empty(SE1->E1_TIPOLIQ)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Procura pelas baixas deste titulo ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lTipBxCP:=lRaRtImp
	aBaixa := Sel070Baixa("VL /V2 /BA /RA /CP /LJ /" + MV_CRNEG, SE1->E1_PREFIXO, SE1->E1_NUM, SE1->E1_PARCELA, SE1->E1_TIPO,;
					@nTotAdto, @lBaixaAbat, SE1->E1_CLIENTE, SE1->E1_LOJA, @nVlrBaixa, , @lBxCec, @lBxLiq,,.T.)
	For x := 1 To Len(aBaixaSE5)
		If aBaixaSE5[x][1]+substr(aBaixaSE5[x][2],1,TamSX3("E1_NUM")[1])+aBaixaSE5[x][3]+aBaixaSE5[x][4]+aBaixaSE5[x][5]+aBaixaSE5[x][6]== SE1->E1_PREFIXO+ SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO+SE1->E1_CLIENTE+SE1->E1_LOJA
			nParciais += aBaixaSE5[x][8]
	        If lPccBxCR .And. lRaRtImp .and. !(aBaixaSE5[x][21]$ "1|2")
			   nParciais += aBaixaSE5[x][18]+aBaixaSE5[x][19]+aBaixaSE5[x][20]+aBaixaSE5[x][30]// somar impostos PCC
			Elseif lIrPjBxCr .And. lRaRtImp
		  		nParciais += aBaixaSE5[x][30]
			Endif
			If lRaRtImp
		 		nParciais += aBaixaSE5[x][32]+aBaixaSE5[x][33]
		 		nTotAbat  -= aBaixaSE5[x][32]+aBaixaSE5[x][33]
			Endif
		Endif

		//Verifica baixas parciais no caso de desconto.
		If ABAIXASE5[x][16] > 0 .and. lSDACRVL
			nParciais += ABAIXASE5[x][16]
		Endif
		//
	Next
	nParciais += nTotAdto
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Soma valor de decrescimo em baixas parciais, para evitar         ³
	//³ diferencas entre valor original e valor recebido                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SE1->E1_SDDECRE <> SE1->E1_DECRESC
		If SE1->E1_SDDECRE = 0
			lSDDECVL := .T.
			If lSDACRVL
				nParciais -= SE1->E1_DECRESC
			Endif
		Else
			If lSDACRVL
				nParciais += ( SE1->E1_DECRESC - SE1->E1_SDDECRE )
			Endif
		Endif
	EndIf
Else
	nParciais 	:= SE1->E1_VALOR-SE1->E1_SALDO
Endif

If	lIrPjBxCr
	nValRec  := SE1->E1_VALOR - nParciais
	If !__lIrfMR
		nIrrf:=Iif(cPaisLoc == "BRA" ,FCaIrBxCR(nValRec),0)
		nOldIrrf := nIrrf
		nIrfBaseC := nValRec
		nIrfBaseR := nValRec
	ElseIf __lTemMR .And. __lIrfMR
		aImpos:= F070VldImp(nValRec, dBaixa)
 	EndIf
EndIf
//PCC Baixa CR
If lPccBxCR
	nParciais += nPis + nCofins + nCsll

    If SE1->E1_MOEDA > 1
		nValRec:= xMoeda(SE1->E1_VALOR,SE1->E1_MOEDA,1,dDatabase,3,nTxMoeda)
		nValRec:= nValRec - nParciais
	Else
		nValRec := SE1->E1_VALOR - nParciais
	EndIf

	nOldValRec	:= nValRec
	If dBaixa < dLastPcc
		f070TotMes(dBaixa,.T.,,.F.)
	Else
		nBase	:= FBaseRPCC(nValRec)
		If !lJurMulDes
			If nBase+nDescont-nJuros-nVa-nMulta-nAcresc+nDecresc > 0
				nBase 	:= nBase+nDescont-nJuros-nVa-nMulta-nAcresc+nDecresc
			EndIf
		EndIf
		If !Empty(SE1->E1_NUMBOR)
			lGerPCCBD := FGERPCCBOR("R", SE1->(Recno()))
		EndIf

	  	If !__lPccMR .And. SE1->E1_TIPO # MVRECANT .and. !lGerPCCBD //.And. Empty(SE1->E1_NUMBOR)
			aPcc	:= newMinPcc(dBaixa, nBase,SE1->E1_NATUREZ,"R",SA1->A1_COD+SA1->A1_LOJA,,,,,,cMotBx)
			nPis	:= aPcc[2]
			nCofins	:= aPcc[3]
			nCsll	:= aPcc[4]
			//Reestruturacao SE5 - Para gravação das tabelas FK3 e FK4
			nPisCalc	:= nPis
			nPisBaseC	:= nBase
			nPisBaseR 	:= nBase
			nCofCalc	:= nCofins
			nCofBaseC	:= nBase
			nCofBaseR 	:= nBase
			nCslCalc	:= nCsll
			nCslBaseC	:= nBase
			nCslBaseR 	:= nBase

			nOldPis     := nPis
			nOldCofins  := nCofins
			nOldCsll    := nCsll
		ElseIf __lTemMR .And. __lPccMR
			aImpos:= F070VldImp(nValRec, dBaixa)
		Endif
	EndIf
Endif

fa070val( nValrec, nTxMoeda )

cMoeda 		:= IIF(Empty(SE1->E1_MOEDA),"1",AllTrim(Str(SE1->E1_MOEDA,2)))
cDescMoeda 	:= SubStr(GetMV("MV_SIMB"+cMoeda),1,3)
lMultNat		:= .F.

IF ExistBlock("F070MNAT")
	lMultNat := ExecBlock("F070MNAT",.F.,.F.)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Trecho incluido para integração e-commerce          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If  LJ861EC01(SE1->E1_NUM, SE1->E1_PREFIXO, .T./*PrecisaTerPedido*/,SE1->E1_FILORIG)
	LJ861EC02(SE1->E1_NUM, SE1->E1_PREFIXO,SE1->E1_FILORIG)
EndIf

fA070Data(@nTxMoeda,.F.) // Calcula o desconto e o juros (se houver) e valida a data
oPrefixo:Refresh()
oTitulo:Refresh()
oParcela:Refresh()
oTipo:Refresh()
oEmissao:Refresh()
oVencRea:Refresh()
oNomeCli:Refresh()
oHist:Refresh()
oSituacao:Refresh()
oBanco:Refresh()
oBanco:SetFocus()
oAgencia:Refresh()
oConta:Refresh()
oBaixa:Refresh()
oDtCredito:Refresh()
oHist070:Refresh()
oMotBx:Refresh()
oMotBx:SetFocus()
oValor:Refresh()
IF cPaisLoc <> "CHI"
	oTotAbLiq:Refresh()
Endif
If cPaisLoc == "BRA"
	oTotAbImp:Refresh()
	oValorLiq:Refresh()
	If lPccBxCr
		nOldPis		:= nPis
		nOldCofins	:= nCofins
		nOldCsll		:= nCsll
		oPis:Refresh()
		oCofins:Refresh()
		oCsll:Refresh()
	Endif
	If lIrPjBxCr
 		oIrrf:Refresh()
 	Endif
Endif
oParciais:Refresh()
oDescont:Refresh()
oMulta:Refresh()
oJuros:Refresh()
If lPodeTVA .and. lExistVA
	oVA:Refresh()		//Valores Acessorios
Endif
oValRec:Refresh()
oAcresc:Refresh()
oDecresc:Refresh()

If !__lPyme
	oMultNat:Refresh()
EndIf

If SE1->E1_MOEDA > 1
	oVlEstrang:Refresh()
	oCM:Refresh()
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Pr‚-inicializa a modalidade de SPB                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lSpbInUse
	If !Empty(SE1->E1_MODSPB)
		cModSpb := SE1->E1_MODSPB
	Else
	   cModSpb := "1"
	Endif
	oModSpb:Refresh()
Endif

nOldDescont := nDescont
nOldMulta 	:= nMulta
nOldJuros	:= nJuros
nOldVA		:= nVa

Return lBaixou

//-------------------------------------------------------------------------
/*/{Protheus.doc} fA070Grava
Grava as baixas em Lote

@author Mauricio Pequim Jr
@since  06/01/2016
@version 12.1.7
/*/
//-------------------------------------------------------------------------
Function fA070Grava(dDtCredito)

LOCAL cArquivo
LOCAL lDigita	:= (mv_par01 == 1)
Local nTotal	:= 0
Local nHdlPrv	:= 0
LOCAL lAglut 	:= (mv_par02 == 1)
Local cPadrao	:= ""
Local lPadrao 	:= .F.
LOCAL nRecSe1	:= 0
LOCAL lContabiliza := (mv_par04 == 1)
Local cLoteOrig	:= ""
Local lHdlPrv 	:= .F.
Local dDataDisp	:= CTOD("//")
Local nRetencao	:= 0
Local nCont		:= 0
Local lSpbInUse	:= SpbInUse()
Local lF070DtCr	:= ExistBlock("F070DTCR")
Local nTotLtEZ	:= 0	//Totalizador da Bx Lote Mult Nat CC
Local nRecSeV	:= 0
Local nRecSeZ	:= 0
Local aDiario	:= {}
Local aFlagCTB	:= {}
Local lUsaFlag	:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/)
Local lTpDesc	:= (cPaisLoc == "BRA") //Verifica campo TPDESC na tabela SE5 (<C>ondicional ou <I>ncondicional)
//***Reestruturação SE5***
Local oModelMvR	:= FWLoadModel("FINM030")
Local oSubFK5	:= oModelMvR:GetModel("FK5DETAIL")
Local oSubFKA	:= oModelMvR:GetModel("FKADETAIL")
Local oModelMvRI   := Nil 
Local oSubFK5Ax	 := Nil 
Local oSubFKAAx	 := Nil 

Local cLog		:= ""
Local cCamposE5	:= ""
Local cQuery := ""
Local cAliasQry := ""

Private n
//***Reestruturação SE5***

DEFAULT dDtCredito := dDataBase

If Type("cTpDesc") == "U"
	cTpDesc:="I"
Endif

// Zerar variaveis para contabilizar os impostos da lei 10925.
VALOR5 := 0
VALOR6 := 0
VALOR7 := 0

//-------------------------------------------------------------------------
// Caso o usuario configure que deseja usar o lote financeiro, o
// sistema becapeia o lote cont bil original e depois o restaura.
//-------------------------------------------------------------------------


cLoteOrig := cLote
If GetMv("MV_LOTEFIN") == "S" .and. !Empty( cLoteFin )
	//-------------------------------------------------------------------------
	// Somente atualiza o lote contabil com o lote financeiro se o tamanho do
	// lote financeiro for menor ou igual ao do lote contabil.
	//-------------------------------------------------------------------------
	If TamSX3("E1_LOTE")[1] > 4 .And. TamSX3("E1_LOTE")[1] <= TamSX3( "CT2_LOTE" )[1]
		cLote := cLoteFin
	EndIf
Endif

//-------------------------------------------------------------------------
// O processo os titulos a serem baixado no lote
//-------------------------------------------------------------------------
dbSelectArea(cAliasLote)
(cAliasLote)->(dbGoTop())

While !(cAliasLote)->(Eof())
	SE1->(dbGoto((cAliasLote)->RECNOSE1))
	Fa070TitW(cMarca,@nTotal,@nHdlPrv,@lHdlPrv,@lPadrao,@cArquivo,@cPadrao,@nTotLtEZ,@aDiario)
EndDo

//-------------------------------------------------------------------------
// Gera saldo banc rio totalizador, quando baixa p/lote
//-------------------------------------------------------------------------
If (nTotAGer > 0 )

	If lF070DtCr		// permite simular outra data base / data credito
		dDtCredito := Execblock("F070DTCR",.F.,.F.,dDtCredito)
	Endif

	//-------------------------------------------------------------------------
	// Grava registro totalizador da movimenta‡„o banc ria
	//-------------------------------------------------------------------------
	If mv_par09 == 1
		If GetNewPar("MV_RETLTBX","1") == "1"		//1=Sim, 2=Nao
			//   Data de disponibilizacao -> considera dias de retencao
			nRetencao  := SA6->A6_RETENCA
			if nRetencao > 0
				For nCont := 1 To nRetencao
					dDtCredito := DataValida(dDtCredito+1,.T.)
				Next nCont
			EndiF
		Endif
	Else
		nRetencao := 0
	EndIf

	//Pega o valor correto do totalizador da baixa em lote
	cQuery := "SELECT SUM(FK1_VALOR) TOTBL FROM " + RetSQLName("FK1")
	cQuery += " WHERE  FK1_FILIAL = '" + FWxFilial("FK1") + "'"
	cQuery += " AND FK1_LOTE = '" + cLoteFin + "'"
	cQuery += " AND FK1_RECPAG = 'R'"
	cQuery += " AND FK1_TPDOC = 'BA'"
	cQuery += " AND D_E_L_E_T_ = ' ' "
	cQuery := ChangeQuery( cQuery )

	cAliasQry := GetNextAlias()
	dbUseArea( .T., "TOPCONN", TcGenQry(,,cQuery), cAliasQry, .F., .T. )
	If ( cAliasQry )->( !EOF() )
		nTotAGer := ( cAliasQry )->TOTBL
	Endif
	( cAliasQry )->( DbCloseArea() )

	cCamposE5 += "{"
	If lTpDesc
		cCamposE5 += "{'E5_TPDESC'  , '" + cTpDesc + "' },"
	Endif
	cCamposE5 += "{'E5_DTDIGIT',StoD('" + DtoS(dDtCredito) + "')}"
	cCamposE5 += ",{'E5_LOTE','" + cLoteFin + "'}"
	cCamposE5 += "}"

	//Inicializo os models
	oModelMvR:SetOperation( MODEL_OPERATION_INSERT ) //Inclusao
	oModelMvR:Activate()
	oModelMvR:SetValue( "MASTER", "E5_GRV", .T. ) //Informa se vai gravar SE5 ou não
	oModelMvR:SetValue( "MASTER", "NOVOPROC", .T. ) //Novo processo
	oModelMvR:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) //Informa os campos da SE5 que serão gravados indepentes de FK5

	If !oSubFKA:IsEmpty()
		//Inclui a quantidade de linhas necessárias
		oSubFKA:AddLine()
		//Vai para linha criada
		oSubFKA:GoLine( oSubFKA:Length() )
	Endif
	oSubFKA:SetValue( "FKA_IDORIG"	, FWUUIDV4() )
	oSubFKA:SetValue( "FKA_TABORI"	, "FK5" )
	If Empty(cNaturLote)
		cNaturLote := FINNATMOV("R")
	Endif
	oSubFK5:SetValue( "FK5_BANCO"	, cBancolt )
	oSubFK5:SetValue( "FK5_AGENCI"	, cAgencialt )
	oSubFK5:SetValue( "FK5_CONTA"	, cContalt )
	oSubFK5:SetValue( "FK5_RECPAG" 	, "R" )
	oSubFK5:SetValue( "FK5_HISTOR"	, STR0130 + cLoteFin )
	oSubFK5:SetValue( "FK5_DATA"	, dDtCredito )
	oSubFK5:SetValue( "FK5_TPDOC"	, "BL" )
	oSubFK5:SetValue( "FK5_LOTE"	, cLoteFin )
	oSubFK5:SetValue( "FK5_VALOR"	, nTotAGer )
	oSubFK5:SetValue( "FK5_NATURE"	, cNaturLote )
	oSubFK5:SetValue( "FK5_FILORI"	, xFilial("SE1") )
	oSubFK5:SetValue( "FK5_DTDISP"	, dDtCredito )
	oSubFK5:SetValue( "FK5_ORIGEM"	, "FINA070" )
	If lSpbInUse
		// Se houver retencao ModSpb = Comp, caso contrario, STR
		oSubFK5:SetValue("FK5_MODSPB"	,IIF(SE5->E5_DTDISPO > dDataBase,"3","1") )
	Endif
	oSubFK5:SetValue("FK5_MOEDA"	,StrZero(nMoedaBco,2) )
	oSubFK5:SetValue("FK5_LA"		,IIf((lContabiliza .And. lPadrao .And. lHdlPrv) .Or. nHdlPrv > 0,'S','') )

	If oModelMvR:VldData()
	    oModelMvR:CommitData()
	Else
	    cLog := cValToChar(oModelMvR:GetErrorMessage()[4]) + ' - '
	    cLog += cValToChar(oModelMvR:GetErrorMessage()[5]) + ' - '
	    cLog += cValToChar(oModelMvR:GetErrorMessage()[6])

	    Help( ,,"M030VLDA1",,cLog, 1, 0 )
	Endif
	oModelMvR:DeActivate()
	oModelMvR:Destroy()
	oModelMvR := Nil

	AtuSalBco( cBancolt, cAgencialt, cContalt, dDtCredito, nTotAGer, "+" )

	If cPaisLoc $ "ARG|POR|EUA|ANG|COL|MEX"
		//-------------------------------------------------------------------------
		// Gerar a Movimentacao Bancaria na 2a. Moeda.
		//-------------------------------------------------------------------------
		nRetencao := SA6->A6_RETENCA
		If !Empty(SA6->A6_MOEDA) .and. ( SA6->A6_MOEDA != SE1->E1_MOEDA )
			AtuSalBco( cBancolt, cAgencialt, cContalt, dDataBase, nTotAGer, "+" )

			If nRetencao > 0
				For nCont := 1 To nRetencao
					dDataDisp := DataValida(dDataDisp+1,.T.)
				Next nCont
			EndIf

			//Inicializo os models
			oModelMvRI := FWLoadModel("FINM030")
			oModelMvRI:SetOperation(MODEL_OPERATION_INSERT) //Inclusao
			oModelMvRI:Activate()
			oModelMvRI:SetValue("MASTER","E5_GRV",.T.) //Informa se vai gravar SE5 ou não
			oModelMvRI:SetValue("MASTER","E5_CAMPOS",cCamposE5) //Informa os campos da SE5 que serão gravados indepentes de FK5

			cCamposE5 := "{{'E5_DTDIGIT',dDataBase}"
			cCamposE5 += ",{'E5_LOTE','" + cLoteFin + "'}}"

			If !oSubFKAAx:IsEmpty()
				//Inclui a quantidade de linhas necessárias
				oSubFKAAx:AddLine()
				//Vai para linha criada
				oSubFKAAx:GoLine( oSubFKA:Length() )
			Endif
			oSubFKAAx:SetValue( 'FKA_IDORIG', FWUUIDV4() )
			oSubFKAAx:SetValue( 'FKA_TABORI', "FK5" )

			oSubFK5Ax:SetValue("FK5_FILIAL"	, cFilial )
			oSubFK5Ax:SetValue("FK5_BANCO"	, cBancolt )
			oSubFK5Ax:SetValue("FK5_AGENCI"	, cAgencialt )
			oSubFK5Ax:SetValue("FK5_CONTA"	, cContalt )
			oSubFK5Ax:SetValue("FK5_RECPAG"	, "R" )
			oSubFK5Ax:SetValue("FK5_HISTOR"	, STR0001 + cLoteFin )
			oSubFK5Ax:SetValue("FK5_DATA"	, dDataBase )
			oSubFK5Ax:SetValue("FK5_TPDOC"	, "BL" )
			oSubFK5Ax:SetValue("FK5_LOTE"	, cLoteFin )
			oSubFK5Ax:SetValue("FK5_VALOR"	, xMoeda( nTotAGer, nMoedaBco, SA6->A6_MOEDA, dDataBase ) )
			oSubFK5Ax:SetValue("FK5_NATURE"	, cNaturLote )
			oSubFK5Ax:SetValue("FK5_FILORI"	, cFilial )
			oSubFK5Ax:SetValue("FK5_DTDISP"	, Iif( Empty(dDtCredito), dDataDisp, dDtCredito ) )
			oSubFK5Ax:SetValue("FK5_MOEDA"	, StrZero( SA6->A6_MOEDA, 2 ) )
			oSubFK5Ax:SetValue("FK5_ORIGEM"	, "FINA070" )

			If oModelMvRI:VldData()
			    oModelMvRI:CommitData()
			Else
			    cLog := cValToChar(oModelMvRI:GetErrorMessage()[4]) + ' - '
			    cLog += cValToChar(oModelMvRI:GetErrorMessage()[5]) + ' - '
			    cLog += cValToChar(oModelMvRI:GetErrorMessage()[6])

			    Help( ,,"M030VLDA1",,cLog, 1, 0 )
			Endif
		EndIf
		oModelMvRI:DeActivate()
		oModelMvRI:Destroy()
		oModelMvRI:= Nil
	Endif

	//-------------------------------------------------------------------------
	// Localizacao Portugal - Gera dados para diario contabil
	//-------------------------------------------------------------------------
	If UsaSeqCor()
		AAdd( aDiario, {"SE5",SE5->(Recno()),cCodDiario,"E5_NODIA","E5_DIACTB"} )
	Else
		aDiario := {}
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
    //³ PONTO DE ENTRADA PARA VALIDACAO APOS A GRAVACAO ³
    //³ DOS CAMPOS DA SE5 NA BAIXA POR LOTE             ³
    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    If ExistBlock("F070VSE5")
       ExecBlock("F070VSE5",.F.,.F.)
    EndIf

EndIf
//-------------------------------------------------------------------------
// Avisa quando totais nao baterem
//-------------------------------------------------------------------------
If Str(nTotGer,16,2) != Str(nTotAGer,16,2)
	Help(" ",1,"TOTGERAL",, STR0137  + Space(1) +;
                            Trans(nTotGer, "@E 99,999,999,999.99") +;
                            Chr(13)+CHR(10) + STR0138 + Space(1) +;
                            Trans(nTotAGer, "@E 99,999,999,999.99"), 4, 0)
ElseIf Str(nTotDesp,16,2) != Str(nTotADesp,16,2)
	Help(" ",1,"TOTDESP" ,, STR0137  + Space(1) +;
   								 Trans(nTotDesp, "@E 99,999,999,999.99") +;
                            Chr(13)+CHR(10) + STR0138 + Space(1) +;
                            Trans(nTotADesp, "@E 99,999,999,999.99"), 4, 0)
ElseIf Str(nTotDesc,16,2) != Str(nTotADesc,16,2)
	Help(" ",1,"TOTDESC" ,, STR0137  + Space(1) +;
                            Trans(nTotDesc, "@E 99,999,999,999.99") +;
                            Chr(13)+CHR(10) + STR0138 + Space(1) +;
                            Trans(nTotADesc, "@E 99,999,999,999.99"), 4, 0)
ElseIf Str(nTotMul,16,2) != Str(nTotAMul,16,2)
	Help(" ",1,"TOTMULT" ,, STR0137  + Space(1) +;
                            Trans(nTotMul, "@E 99,999,999,999.99") +;
                            Chr(13)+CHR(10) + STR0138 + Space(1) +;
                            Trans(nTotAMul, "@E 99,999,999,999.99"), 4, 0)
ElseIf Str(nTotJur,16,2) != Str(nTotAJur,16,2)
	Help(" ",1,"TOTJUROS",, STR0137  + Space(1) +;
 									 Trans(nTotJur, "@E 99,999,999,999.99") +;
                            Chr(13)+CHR(10) + STR0138 + Space(1) +;
                            Trans(nTotAJur, "@E 99,999,999,999.99"), 4, 0)
EndIf

IF ExistBlock("FA070BXL")
   ExecBlock("FA070BXL",.F.,.F.)
ENDIF
//-------------------------------------------------------------------------
//Envia para Lan‡amento Cont bil, se gerado arquivo
//-------------------------------------------------------------------------
IF (lHdlPrv .And. lPadrao .and. lContabiliza) .OR. nHdlPrv > 0 .and. !!FwIsInCallStack("Fa450Can")
	dbSelectArea( "SE1" )
	nRecSe1 := RecNo()
	dbGoBottom()
	dbSkip()

	dbSelectArea( "SEV" )
	nRecSeV := RecNo()
	dbGoBottom()
	dbSkip()

	dbSelectArea( "SEZ" )
	nRecSeZ := RecNo()
	dbGoBottom()
	dbSkip()

	If nTotAGer != 0
		//Contabilizar totalizador exceto o rateado por MultNat C.Custo
		VALOR := nTotaGer - nTotLtEZ
		ABATIMENTO := 0

		If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
			aAdd( aFlagCTB, {"E5_LA", "S", "SE5", SE5->( Recno() ), 0, 0, 0} )
		Endif

		//Contabilizar totalizador dos rateios MultNat com C.Custo
		If nTotLtEZ > 0
			VALOR := nTotLtEZ
			ABATIMENTO := 0

			If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
				aAdd( aFlagCTB, {"E5_LA", "S", "SE5", SE5->( Recno() ), 0, 0, 0} )
			Endif
			nTotal += DetProva( nHdlPrv, cPadrao, "FINA070", cLote, /*nLinha*/, /*lExecuta*/,;
			                    /*cCriterio*/, /*lRateio*/, /*cChaveBusca*/, /*aCT5*/,;
			                    /*lPosiciona*/, @aFlagCTB, /*aTabRecOri*/, /*aDadosProva*/ )
		Endif
	Endif

	RodaProva(nHdlPrv,nTotal)
	cA100Incl( cArquivo, nHdlPrv, 3 /*nOpcx*/, cLote, lDigita, lAglut,;
	           /*cOnLine*/, /*dData*/, /*dReproc*/, @aFlagCTB, /*aDadosProva*/, aDiario )
	aFlagCTB := {}  // Limpa o coteudo apos a efetivacao do lancamento

	dbSelectArea("SE1")
	SE1->(dbGoTo(nRecSe1))

	dbSelectArea("SEV")
	SEV->(dbGoTo(nRecSeV))

	dbSelectArea("SEZ")
	SEZ->(dbGoTo(nRecSeZ))

EndIf
//-------------------------------------
// Restaura o lote contabil original
//-------------------------------------
cLote := cLoteOrig
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ fA070Data³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Fun‡„o utilizada para consistir a Data                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fA070Data()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA070Data(nTxMoeda,lHelp,oDtBaixa,oJuros,oCbx,lReclcJur,oVa,aImpos,lMudouMulta)
Local lRet			:= .T.
Local nSavValRec	:= 0
Local nPos 			:= 0
Local nBase 		:= 0
Local lJurMulDes	:= (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")
Local lBq10925		:= SupergetMv("MV_BQ10925",.F.,"2") == "1"
Local lGerPCCBD 	:= .F.
Local nSaldoT 		:= 0
Local lBxTot 		:= .F.
Local lIrrfBxPj 	:= FIrPjBxCr(.T.)
Local lPccBxCr		:= FPccBxCr(.T.)
Local lFINA070MN 	:= FWIsInCallStack("FA070TIT")
Local lFINA200		:= FunName() == "FINA200" .Or. FwIsInCallStack("fA200Ger")
Local lExistVA 		:= TableInDic("FKD") .and. TableInDic("FKC")
Local lCalcIssBx 	:= GetNewPar("MV_MRETISS","1") == "2"  //Retencao do ISS pela emissao (1) ou baixa (2)
Local nDescAux		:= 0

Default lFDataUse 	:= ExistBlock("FDataUse")
Default __lF070AltV := ExistBlock("F070AltV")
Default lReclcJur 	:= .F.
// Motor de retenção de impostos
Default aImpos		:= {}

Default lMudouMulta := .F.

If Type("lMVGlosa") == "U"
       lMVGlosa     := SuperGetMv("MV_GLOSA",.F.,.F.)
EndIf

// Motor de Retenção de impostos
If __lTemMR
	F070VerImp("2",cFilAnt,SE1->E1_CLIENTE,SE1->E1_LOJA,,.T.,@lIrrfBxPj,@lPccBxCr)
EndIf

If Type('lF070Auto') == 'L' .And. lF070Auto
	If TYPE("nValRec") == "N"
		nSavValRec := nValRec
	ElseIf TYPE("nValRec") == "U"
		If (nPos := aScan(aAutoCab,{|x| x[1] == 'AUTVALREC'})) > 0
			nSavValRec := aAutoCab[nPos][2]
		EndIf
	Endif
Else
	lF070Auto := .F.
Endif

If lFDataUse
	lRetPE := ExecBlock("FDataUse", .F. , .F. )
	If !lRetPE
		Return lRet
	EndIf
EndIf

DEFAULT oDtBaixa := ""
DEFAULT oVA 	 := ""

nCM1		:= If(Type("nCM1") != "N",0,nCM1)
nProRata	:= If(Type("nProRata") != "N",0,nProRata)

lHelp := IIf(lHelp == NIL, .T.,lHelp)


If !Empty(oDtBaixa) .And. (oDtBaixa:lModified) .And. !lMudouMulta
	faLojxRMul(dBaixa)

	If dBaixa > SE1->E1_VENCREAL
		If nOldMulta <> nMulta
			nValRec -= nOldMulta
		EndIf	
		
		nValRec += nMulta
	Else
		nValRec -= nOldMulta
	EndIf

EndIf


IF (dBaixa < SE1->E1_EMISSAO .OR. dBaixa > dDataBase) .and. !GetMv("MV_ANTCRED") .and. lHelp
	Help( " ", 1, "DATAERR" )
	lRet := .F.
Else

	If (dDtCredito < dBaixa) .And. ! GetMv("MV_ANTCRED")
		dDtCredito := dBaixa
	EndIf

	If GetNewPar("MV_BXDTFIN","1") == "2"	//nao permite data de baixa
		If !(DtMovFin(dBaixa,lHelp,"2"))					//menor que MV_DATAFIM
			Return .F.
		Endif
	Endif

	If __lF070AltV
		ExecBlock("F070AltV",.F.,.F.,lHelp)
	Else
		dbSelectArea("SE1")
		If FunName() <> "FINA630" .and. !lFINA200 .And. !( SE1->E1_TIPO $ MVRECANT + "|" + MV_CRNEG )
		   IF (!Empty(oDtBaixa) .AND. oDtBaixa:lModified) .or. Empty(oDtBaixa)
				nDescAux := FaDescFin("SE1",dBaixa,SE1->E1_SALDO-nTotAbat,nMoedaBco)
				nDescont := iIf( nDescAux <> 0 , nDescAux , nDescont )
				If nDescAux == 0 .AND. SE1->E1_DESCFIN <> 0
					nDescont := nDescAux
				EndIf
				nOldDescont := nDescont
			Endif
	  		IF (!Empty(oJuros) .AND. oJuros:lModified) .or. Empty(oJuros).or. oDtBaixa:lModified
				nCM1     := 0
				nProRata := 0

				fa070Juros(nMoedaBco,,,,Iif( lReclcJur , nTxMoeda , Nil ) )

				If nCM1 > 0
					nJuros -= nCM1
				Else
					nDescont += nCM1
				EndIf

				If nProRata > 0
					nJuros -= nProRata
				Else
					nDescont += nProRata
				EndIf

				If lPodeTVA .and. lExistVA
					//-----------------------------------------------------------------------------
					// Cálculo de Valores Acessorios
					//-----------------------------------------------------------------------------
					// Se for baixa MANUAL, o calculo de VA será feito AQUI
					If lFINA070MN
						If !lF070Auto .and. (Empty(cOldVA) .or. (!Empty(oDtBaixa) .AND. oDtBaixa:lModified))
							//Caso se modifique a data de baixa, será refeito o cálculo de VA
							If (!Empty(oDtBaixa) .AND. oDtBaixa:lModified)
								cOldVa := ""
							Endif

							//O Model realiza os cálculos VA
							oModelVA := FWLoadModel("FINA070VA")
							oModelVA:SetOperation( MODEL_OPERATION_UPDATE )
							oModelVA:Activate()
							cOldVA  := oModelVA:GetXMLData()
							oModelVa:Deactivate()
							oModelVa:Destroy()
							oModelVa := NIL
						Elseif !Empty(cOldVa) .and. nVa == 0
							//O Model realiza os cálculos VA
							oModelVA := FWLoadModel("FINA070VA")
							oModelVA:SetOperation( MODEL_OPERATION_UPDATE )
							oModelVA:Activate()
							oModelVA:LoadXMLData( cOldVA )
							FN070VAGrv( oModelVA )
							oModelVa:Deactivate()
							oModelVa:Destroy()
							oModelVa := NIL
						Endif
					Else
						nVa	:= FValAcess(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_TIPO,SE1->E1_CLIENTE,SE1->E1_LOJA,SE1->E1_NATUREZ, /*lBaixados*/,/*cCodVa*/,"R",dBaixa,/*aValAces*/,SE1->E1_MOEDA,nMoedaBco,nTxMoeda)
					Endif
				Endif

				//Quando for uma baixa de cancelamento (Integração TIN x PROTHEUS), não calcular o juros e multa.
				If Type("aAutoCab") == "A"
					If (nPos := aScan(aAutoCab,{|x| x[1] == 'AUTMOTBX'})) > 0
						If aAutoCab[nPos,2] == "TIN" .And. AllTrim(SE1->E1_ORIGEM) == "FINI055" .And. lFini055
							nJuros := 0
							nMulta := 0
						Endif
					Endif
				EndIf
			EndIf
		Endif
	Endif

   	If cPaisLoc = "BRA" .And.  (!Empty(oDtBaixa) .AND. oDtBaixa:lModified)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ SIGAPFS‚ A cotação para baixa dos títulos no módulo jurídico deve ser sempre na cotação diária.  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If UPPER(Alltrim(SE1->E1_ORIGEM)) $ "JURA203"
			nTxMoeda := If(SE1->E1_MOEDA > 1, RecMoeda(dBaixa,SE1->E1_MOEDA), 0)
		Else
			nTxMoeda := If(SE1->E1_MOEDA > 1, If(SE1->E1_TXMOEDA > 0, SE1->E1_TXMOEDA,RecMoeda(dBaixa,SE1->E1_MOEDA)),0)
		EndIf

	ElseIf Type("aTxMoedas") = "A"
		Fa070SetMd(@nTxMoeda,.F.)
	EndIf

   	If  TYPE('lTitLote')<> "U" .AND. lTitLote
   		fa070Val(0,nTxMoeda, (!Empty(oDtBaixa) .And. oDtBaixa:lModified))
   	Else
   		fa070Val(0,nTxMoeda,(!Empty(oDtBaixa) .And. oDtBaixa:lModified .And. dBaixa <> dDataBase))
   	EndIf
 	If ((!Empty(oDtBaixa) .AND. oDtBaixa:lModified ) .OR. (!Empty(oCbx) .AND. oCbx:lModified )) .and. dBaixa >= dLastPcc
		nSaldoT		:= Round(Noround(xMoeda(SE1->E1_SALDO-nTotAbat,SE1->E1_MOEDA,nMoedaBco,dBaixa,3,SE1->E1_TXMOEDA),3),2)+nMulta+nJuros+nVa-nDescont+nAcresc-nDecresc

		nBase	:= FBaseRPCC(nValRec)

		If __lTemMR .And. Len(aImpos) > 0 .And. nBase == 0
			nBase	:= SE1->E1_VALOR - nParciais
		EndIf
		If lJurMulDes
			If nBase+nDescont-nJuros-nVa-nMulta-nAcresc+nDecresc > 0
				nBase 	:= nBase+nDescont-nJuros-nVa-nMulta-nAcresc+nDecresc
			EndIf
		EndIf
		nBase := nBase + If(lIrrfBxPj, nIrrf,0) + If(lPccBxCr, nPis + nCofins + nCsll, 0 )

		If nBase == nSaldoT
			nBase := nBase + nTotAbat
			lBxTot := .T.
		Else
			nBase	:= nBase - (If(lPccBxCr, nPis + nCofins + nCsll, 0 )+If(lIrrfBxPj, nIrrf,0))
		EndIf

		If !Empty(SE1->E1_NUMBOR)
			lGerPCCBD := FGERPCCBOR("R", SE1->(Recno()))
		EndIf

		If __lTemMR
			aImpos := F070VldImp(nBase, dBaixa,@lPccBxCr, @lIrrfBxPj, @lCalcIssBx,@__lImpMR)
		Endif

	  	If !__lPccMR .And. SE1->E1_TIPO # MVRECANT .and. !lGerPCCBD //.And. Empty(SE1->E1_NUMBOR)
			aPcc	:= newMinPcc(dBaixa, nBase,SE1->E1_NATUREZ,"R",SA1->A1_COD+SA1->A1_LOJA,,,,,,cMotBx)
			nPis	:= aPcc[2]
			nCofins	:= aPcc[3]
			nCsll	:= aPcc[4]
			//Reestruturacao SE5 - Para gravação das tabelas FK3 e FK4
			nPisCalc	:= nPis
			nPisBaseC	:= nBase
			nPisBaseR 	:= nBase
			nCofCalc	:= nCofins
			nCofBaseC	:= nBase
			nCofBaseR 	:= nBase
			nCslCalc	:= nCsll
			nCslBaseC	:= nBase
			nCslBaseR 	:= nBase
		Endif

		If !__lIrfMR .And. !lMVGlosa .and. lIrrfBxPj .and. SE1->E1_TIPO # MVRECANT
			nPgParc := nParciais - If(!lJurMulDes,( SE1->E1_ACRESC - SE1->E1_SDACRES),0)
			nBaseIR	:= SE1->E1_BASEIRF - nPgParc
			nIrrf:=FCaIrBxCR(nBaseIR)
			nIrfBaseC := nBaseIR
			nIrfBaseR := nBaseIR
		EndIf
		If nBase> 0
			nValRec := SE1->E1_SALDO
			If !lBq10925
				nValRec := nValRec - ( If(lPccBxCr, nPis + nCofins + nCsll, 0 )  )
			ElseIf FwIsInCallStack( "FA070TIT" ) .And. nOldValRec <> nValRec .And. SE1->E1_VALOR >= nValRec - ( nPis + nCofins + nCsll )//Ao alterar apenas a data de um titulo que retem PCC, o sistema estava deixando de abater o valor do pcc no título
				nValRec -= If(lPccBxCr, nPis+nCofins+nCsll, 0)
			EndIf

			nValRec := nValRec - nDescont + nJuros + nVa + nMulta + nAcresc - nDecresc
			nValRec := nValRec - nTotAbat - If(lIrrfBxPj, nIrrf, 0)
			nOldValRec := nValRec
		EndIf
	EndIf

	If Type('dOldBaixa') == 'D' 
		If dOldBaixa <> dBaixa	// nOldBaixa controle do FINA070
			dOldBaixa := dBaixa
			F070Ret() // "Gatilha" DtCredito com dias do A6_RETENCA
		EndIf
	Else
		F070Ret() // "Gatilha" DtCredito com dias do A6_RETENCA
	EndIf

EndIf
If nSavValRec > 0
	If Type('lF070Auto') == 'L' .And. lF070Auto
		nValRec := nSavValRec
	EndIf
EndIf
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Fa070ValVR³ Autor ³ Antonio Maniero Jr.   ³ Data ³ 13/05/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Fun‡„o utilizada para consistir o valor digitado           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fA070ValVR(Valor)                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa070ValVR(nTxMoeda)
Local nSaveVar
Local nEstOriginal 		:= 0
Local nMoedaBx			:=1
Local lArred			:=	.F.
Local nBsVlEstr			:= 0
Local nSalvRec
Local nOrdSA6
LOCAL lPccBxCr			:= FPccBxCr(.T.)	// Controla o Pis Cofins e Csll na baixa  (1-Retem PCC na Baixa ou 2-Retem PCC na Emissão(default) )
Local lIrPjBxCr			:= FIrPjBxCr(.T.)	// Controla IRPJ na baixa
Local nOutrosValores	:= 0				// Outros valores além do valor do título

If __lTemMR
	F070VerImp("2",cFilAnt,SE1->E1_CLIENTE,SE1->E1_LOJA,,.T.,@lIrPjBxCr,@lPccBxCr)
EndIf

nValTot     := SE1->E1_VLCRUZ
nValEstrang := nValOrig    := SE1->E1_SALDO-nTotAbat
nAcresc     := If(Type("nAcresc") != "N",SE1->E1_SDACRES,nAcresc)
nAcrescf    := If(Type("nAcrescf") != "N",SE1->E1_SDACRES,nAcrescf)
nDecresc    := If(Type("nDecresc") != "N",SE1->E1_SDDECRE,nDecresc)
nDecrescf   := If(Type("nDecrescf") != "N",SE1->E1_SDDECRE,nDecrescf)
If FUNNAME()=="FINA074"
	nMoedaBx:=SE1->E1_MOEDA
Else
	nMoedaBx:=nMoedaBco
EndIf
If cPaisloc<>"BRA"
	nTxMoeda:=Iif(nMoedaBco>0,aTxMoedas[nMoedaBco][2],1)
	nTxMdaOr:=aTxMoedas[SE1->E1_MOEDA][2]
EndIf
If GetMv("MV_SIGAGSP") <> "1"  //Roberto - Integração com o SIGAGSP 0=Não integra 1=Integra
   nAcresc     := Round(NoRound(xMoeda(nAcrescF,SE1->E1_MOEDA,nMoedaBx,dBaixa,3,nTxMoeda),3),MsDecimais(nMoedaBx))
EndIf
nDecresc    := Round(NoRound(xMoeda(SE1->E1_SDDECRE,SE1->E1_MOEDA,nMoedaBx,dBaixa,3,nTxMoeda),3),MsDecimais(nMoedaBx))
DEFAULT nTxMoeda := 0
If Substr(cMotBx,1,3) != "DEV"
	If cPaisLoc <> "BRA"
		nValMoeda1	:= xMoeda(SE1->E1_VALOR-nTotAbat,SE1->E1_MOEDA,nMoedaBx,dBaixa,3,Iif(nTxMdaOr>0,nTxMdaOr,nMoedaBx),nTxMoeda)
		nValMoeda	:= xMoeda(nValOrig,SE1->E1_MOEDA,nMoedaBx,dBaixa,3,Iif(nTxMdaOr>0,nTxMdaOr,nMoedaBx),nTxMoeda)
	Else
		nValMoeda1	:= xMoeda(SE1->E1_VALOR-nTotAbat,SE1->E1_MOEDA,nMoedaBx,dBaixa,3,nTxMoeda)
		nValMoeda	:= xMoeda(nValOrig,SE1->E1_MOEDA,nMoedaBx,dBaixa,3,nTxMoeda)
	EndIf

	nValMoeda1	:= Round(NoRound(nValMoeda1,3),MsDecimais(nMoedaBx))
Else
	If cPaisLoc <> "BRA"
		nValMoeda1	:= xMoeda(SE1->E1_VALOR-nTotAbat,SE1->E1_MOEDA,nMoedaBx,SE1->E1_EMISSAO,3,,nTxMoeda)
		nValMoeda	:= xMoeda(nValOrig,SE1->E1_MOEDA,nMoedaBx,SE1->E1_EMISSAO,3,,nTxMoeda)
	Else
		nValMoeda1	:= xMoeda(SE1->E1_VALOR-nTotAbat,SE1->E1_MOEDA,nMoedaBx,SE1->E1_EMISSAO,3,nTxMoeda)
		nValMoeda	:= xMoeda(nValOrig,SE1->E1_MOEDA,nMoedaBx,SE1->E1_EMISSAO,3,nTxMoeda)
	EndIf

	nValMoeda1	:= Round(NoRound(nValMoeda1,3),MsDecimais(nMoedaBx))
EndIf

If cPaisLoc == "BRA" .And. SE1->E1_MOEDA > 1 .And. SE1->E1_TXMOEDA > 0 .And. nValRec == Round(NoRound(nValMoeda,3),MsDecimais(nMoedaBx))
	lArred	:=	.T.
	nValRec	:=	nValMoeda
Else
	nValMoeda   := Round(NoRound(nValMoeda,3),MsDecimais(nMoedaBx))
Endif


nBsVlEstr := nValEstrang
nOutrosValores := nJuros+nVa+(nCm1+nProRata)+nMulta-nDescont-nOtrga+nAcresc-nDecresc - Iif(lPccBxCr,nPis+nCofins+nCsll,0)-Iif(lIrPjBxCr,nIrrf,0)
If Substr(cMotBx,1,3) == "DEV"
    nValEstrang := Round(NoRound(xMoeda(nValRec,nMoedaBx,SE1->E1_MOEDA,SE1->E1_EMISSAO,3,,nTxMoeda),3),MsDecimais(SE1->E1_MOEDA))
Else
    If SE1->E1_MOEDA == 1 
        nValEstrang := Round(NoRound(xMoeda(nValRec,SE1->E1_MOEDA,nMoedaBx,dBaixa,3,nTxMoeda),3),MsDecimais(SE1->E1_MOEDA))
    Else
        //"Resolver" problemas de arredondamento em moeda 2
        nVlEstRnd := Round(NoRound(xMoeda(nValRec,nMoedaBx,SE1->E1_MOEDA,dBaixa,3,,nTxMoeda),3),MsDecimais(SE1->E1_MOEDA))
        nVlEstNoRd := NoRound(xMoeda(nValRec,nMoedaBx,SE1->E1_MOEDA,dBaixa,3,,nTxMoeda),MsDecimais(SE1->E1_MOEDA))
        If SE1->E1_SALDO == nVlEstRnd .AND. nOutrosValores == 0	// Se saldo igual Round do nValRec
            nValEstrang := nVlEstRnd
        ElseIf SE1->E1_SALDO == nVlEstNoRd .AND. nOutrosValores == 0 // Se saldo igual a noRound do nValRec
            nValEstrang := nVlEstNoRd
        Else // mudou o valor de baixa, faço como o padrão sempre fez
            nValEstrang := Round(NoRound(xMoeda(nValRec,nMoedaBx,SE1->E1_MOEDA,dBaixa,3,,nTxMoeda),3),MsDecimais(SE1->E1_MOEDA))
        EndIf
    EndIf
EndIf
If nOutrosValores == 0 // Vai baixar o título sem nenhum outro valor além do título?
	If Abs(nValEstrang - nBsVlEstr ) == 0.01
		nValEstrang := nBsVlEstr		// Corrigir diferença de 0,01 em conversão de moedas. Exemplo: E1_VALOR = 115890, E1_MOEDA = 2 , Taxa = 0,03348
	EndIf
EndIf

If lArred
	nValMoeda   := Round(NoRound(nValMoeda,3),MsDecimais(nMoedaBx))
	nValRec     := Round(nValRec,MsDecimais(SE1->E1_MOEDA))
Endif
SE5->(DbSetOrder(8))
If cPaisloc<>"BRA" .And. !Empty( SE1->E1_RECIBO )
	SE5->(DbSeek(xFilial("SE5")+SE1->E1_RECIBO+SE1->E1_SERREC))
	While SE5->(!Eof()) .AND. (SE5->E5_FILIAL== xFilial("SE5").AND. SE5->E5_ORDREC==SE1->E1_RECIBO .AND. SE5->E5_SERREC == SE1->E1_SERIE)
		If Alltrim(SE5->E5_ORIGEM) $ "FINA087A|FINA840"
			nSalvRec:= SA6->( Recno() )
			nOrdSA6:=SA6->(IndexOrd())
			SA6->(DbSetOrder(1))
			SA6->(MsSeek(xFilial("SA6")+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA))
			nMoedaBx:= Max(SA6->A6_MOEDA,1)
			lRetMoeda := .T.
			SA6->(DbSetOrder(nOrdSA6))
			SA6->(dbGoto(nSalvRec))
			Exit
		Endif
		SE5->(dbSkip())
	Enddo
Endif
If cPaisLoc<>"BRA" 
    If SE1->E1_MOEDA == 1 
        nValEstrang := Round(NoRound(xMoeda(nValRec,SE1->E1_MOEDA,nMoedaBx,dBaixa,3,nTxMdaOr,nTxMoeda),3),MsDecimais(SE1->E1_MOEDA))
    Else
        //"Resolver" problemas de arredondamento em moeda 2
        nVlEstRnd := Round(NoRound(xMoeda(nValRec,nMoedaBx,SE1->E1_MOEDA,dBaixa,3,nTxMoeda,nTxMdaOr),3),MsDecimais(SE1->E1_MOEDA))
        nVlEstNoRd := NoRound(xMoeda(nValRec,nMoedaBx,SE1->E1_MOEDA,dBaixa,3,nTxMoeda,nTxMdaOr),MsDecimais(SE1->E1_MOEDA))
        If SE1->E1_SALDO == nVlEstRnd // Se saldo igual Round do nValRec
            nValEstrang := nVlEstRnd
        ElseIf SE1->E1_SALDO == nVlEstNoRd // Se saldo igual a noRound do nValRec
            nValEstrang := nVlEstNoRd
        Else // mudou o valor de baixa, faço como o padrão sempre fez
            nValEstrang := Round(NoRound(xMoeda(nValRec,nMoedaBx,SE1->E1_MOEDA,dBaixa,3,nTxMoeda,nTxMdaOr),3),MsDecimais(SE1->E1_MOEDA))
        EndIf
    EndIf
EndIf
nSaveVar := nValEstrang   // Pau de gerenciamento de Memoria (Wilson)
nValLiq     := nValRec-nMulta-nJuros-nVa-nPis-nCofins-nCsll+nDescont-nAcresc+nDecresc+Round(NoRound(xMoeda(nTotAbat,SE1->E1_MOEDA,nMoedaBx,dBaixa,3,nTxMoeda),3),MsDecimais(nMoedaBx))
nEstOriginal := nValEstrang-(xMoeda(nOutrosValores,nMoedaBx,SE1->E1_MOEDA,,,,nTxMoeda))
FA070CORR(nEstOriginal,nTxMoeda) // calcula Correc. Monetaria
nValEstrang := nSaveVar

If !lF415Auto .and. Type('lF070Auto') =='L' .and. !lF070Auto
	oVlEstrang:Refresh()
	oCM:Refresh()
EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ fA070Val ³ Autor ³ Wagner Xavier         ³ Data ³ 26/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Fun‡„o utilizada para consistir o valor digitado           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fA070Val(Valor)                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fA070Val(nVal,nTxMoeda,lRecalcVRec,lMotBx)
Local lRetorno 		:= .T.

Default nTxMoeda 	:= 0
Default lRecalcVRec := .T.
Default lMotBx		:= .F.
Default __F070VDATA := ExistBlock("F070VDATA")

If !lMotBx
	fa070Calc( nTxMoeda, lRecalcVRec )
EndIf

// Utilizado na validacao dos dados
If __F070VDATA
	lRetorno := ExecBlock("F070VDATA",.F.,.F., {nVal,nTxMoeda})
Endif

Return( lRetorno )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ fA070Calc³ Autor ³ Reynaldo Miyashita    ³ Data ³ 15/06/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Recalcula os valores referentes a baixa do titulo a receber³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fA070Calc(nTxMoeda)                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa070Calc(nTxMoeda, lRecalcVRec,lAltlVal,lValRec)
Local nEstOriginal 	:= 0	// Valor Estrangeiro Original para Correcao Monet.
Local nMoedaBx		:= 1
Local x
Local nTxMdaOr		:= 0
Local lPccBxCr		:= FPccBxCr(.T.)
Local lBq10925		:= SupergetMv("MV_BQ10925",.F.,"2") == "1"
Local lIrPjBxCr		:= FIrPjBxCr(.T.)	//Controla IRPJ na baixa
Local nBsVlEstr		:= 0
Local nTotMultas	:= 0
Local lArred		:=	.F.
Local lFINA200		:= FunName() == "FINA200" .Or. FwIsInCallStack("fa200Ger")
Local nA			:=1
Local cMoedaTx		:= ""
Local cAuxMoeda		:=""
Local lCalcIssBx 	:= GetNewPar("MV_MRETISS","1") == "2"  //Retencao do ISS pela emissao (1) ou baixa (2)
Local aOutImp 		:= {}
Local aDadosPar 	:= {}
Local nOutrosValores:= 0

If __lTemMR
	F070VerImp("2",cFilAnt,SE1->E1_CLIENTE,SE1->E1_LOJA,,.T.,@lIrPjBxCr,@lPccBxCr,@lCalcIssBx)
EndIf

DEFAULT nTxMoeda := 0
DEFAULT lRecalcVRec := .T. //-- Adicionado argumento à função para tratamento de Bx Parcial em outra moeda
/*DEFAULT lAltlVal := .F.*/
DEFAULT lValRec := .F.

nMoedaBx	:= If(Type("nMoedaBco") != "N" .or. (cPaisLoc == "ARG" .and. FwIsInCallStack("FINA846") .and. FwIsInCallStack("F074GRAVA") ),SE1->E1_MOEDA,nMoedaBco)
lAutValRec	:= If(Type("lAutValRec") != "L",.F.,lAutValRec)

If Type("nVA") == "U"
	Private nVa := 0
EndIf

If  cPaisLoc <> "BRA" .and. Type("aTxMoedas") == "U"
	 aTxMoedas := {}
	aAdd(aTxMoedas,{"",1,PesqPict("SM2","M2_MOEDA1")})
	For nA:=	2 To MoedFin()
	  cMoedaTx := Str(nA,IIf(nA <= 9,1,2))
	  cAuxMoeda := GetMv( "MV_MOEDA" + cMoedaTx )
	  If ! Empty( cAuxMoeda )
	  	If lF070Auto .And. nA==SE1->E1_MOEDA
			 aAdd( aTxMoedas, {cAuxMoeda, SE1->E1_TXMOEDA, PesqPict("SM2", "M2_MOEDA" + cMoedaTx)} )
		Else
			 aAdd( aTxMoedas, {cAuxMoeda, RecMoeda(dDataBase,nA), PesqPict("SM2", "M2_MOEDA" + cMoedaTx)} )
		Endif
	  Else
		 Exit
	  Endif
   Next
EndIf

If Type("nOdlMoedBco") == "U"
	nOdlMoedBco	 := 1
EndIf

If cPaisLoc <> "BRA"
    If nTxMoeda == 0 
        nTxMoeda := Iif(nMoedaBco > 0, aTxMoedas[nMoedaBco][2],1)
    EndIf
	nTxMdaOr := aTxMoedas[SE1->E1_MOEDA][2]
EndIf

If SE1->E1_APLVLMN == "2"
	lAplVlMin := .F.
Endif

If FunName() == "FINA110"
	nParciais  := 0
	aBaixaSE5 := {}

	cPrefixo   := SE1->E1_PREFIXO
	cNum       := SE1->E1_NUM
	cParcela   := SE1->E1_PARCELA
	cTipo      := SE1->E1_TIPO
	nTotAdto   := 0
	lBaixaAbat := .F.
	cCliente   := SE1->E1_CLIENTE
	cLoja      := SE1->E1_LOJA
	nVlrBaixa  := 0
	lBxCec     := .F.
	lBxLiq     := .F.

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Para que o valor da baixa parcial nao fique negativo, verifico o saldo³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (SE1->E1_VALOR > SE1->E1_SALDO)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Procura pelas baixas deste titulo                                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aBaixa := Sel070Baixa( "VL /V2 /BA /RA /CP /LJ /"+MV_CRNEG,cPrefixo,cNum,cParcela,cTipo,@nTotAdto,@lBaixaAbat,cCliente,cLoja,@nVlrBaixa,,@lBxCec,@lBxLiq)
		For x := 1 To Len(aBaixaSE5)
			nParciais += aBaixaSE5[x][8]
			nTotMultas += aBaixaSE5[x][15]
		Next
		nParciais += nTotAdto
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Soma valor de decrescimo em baixas parciais, para evitar         ³
		//³ diferencas entre valor original e valor recebido                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SE1->E1_SDDECRE <> SE1->E1_DECRESC
			nParciais += ( SE1->E1_DECRESC - SE1->E1_SDDECRE )
			nParciais -= 	nTotMultas
		EndIf

	Else
		nParciais 	:= SE1->E1_VALOR-SE1->E1_SALDO
	Endif
EndIf


nOtrGa		:= If(Type("nOtrGa") != "N",0,nOtrGa)
nDifCambio	:= If(Type("nDifCambio") != "N",0,nDifCambio)
nAcresc		:= If(Type("nAcresc") != "N",SE1->E1_SDACRES,nAcresc)
nAcrescf	:= If(Type("nAcrescf") != "N",SE1->E1_SDACRES,nAcrescf)
nDecresc	:= If(Type("nDecresc") != "N",SE1->E1_SDDECRE,nDecresc)
nDecrescf	:= If(Type("nDecrescf") != "N",SE1->E1_SDDECRE,nDecrescf)

nValTot     := SE1->E1_VLCRUZ

nValEstrang := nValOrig := SE1->E1_SALDO-nTotAbat
nAcresc     := xMoeda(nAcrescF,SE1->E1_MOEDA,nMoedaBx,dBaixa,3,nTxMoeda)
nDecresc    := xMoeda(SE1->E1_SDDECRE,SE1->E1_MOEDA,nMoedaBx,dBaixa,3,nTxMoeda)

If TrazCodMot(cMotBx) == "DEV"
	If cPaisLoc <> "BRA"
		nValMoeda1	:= xMoeda(SE1->E1_VALOR-nTotAbat,SE1->E1_MOEDA,nMoedaBx,SE1->E1_EMISSAO,3,nTxMdaOr,nTxMoeda)
		nValMoeda	:= xMoeda(nValOrig,SE1->E1_MOEDA,nMoedaBx,SE1->E1_EMISSAO,3,nTxMdaOr,nTxMoeda)
	Else
		nValMoeda1	:= xMoeda(SE1->E1_VALOR-nTotAbat,SE1->E1_MOEDA,nMoedaBx,SE1->E1_EMISSAO,3,nTxMoeda)
		nValMoeda	:= xMoeda(nValOrig,SE1->E1_MOEDA,nMoedaBx,SE1->E1_EMISSAO,3,nTxMoeda)
	EndIf
	nValMoeda1  := Round(NoRound(nValMoeda1,3),MsDecimais(nMoedaBx))
Else
    If cPaisLoc <> "BRA"
		nValMoeda1	:= xMoeda(SE1->E1_VALOR-nTotAbat,SE1->E1_MOEDA,nMoedaBx,dBaixa,3,nTxMdaOr,nTxMoeda)
		nValMoeda	:= xMoeda(nValOrig,SE1->E1_MOEDA,nMoedaBx,dBaixa,5,nTxMdaOr,nTxMoeda)
		nValMoeda   := Round(NoRound(nValMoeda,5),4)
	Else
		nValMoeda1	:= xMoeda(SE1->E1_VALOR-nTotAbat,SE1->E1_MOEDA,nMoedaBx,dBaixa,3,nTxMoeda)
        nValMoeda	:= xMoeda(nValOrig,SE1->E1_MOEDA,nMoedaBx,dBaixa,3,nTxMoeda)
	EndIf
	nValMoeda1  := Round(NoRound(nValMoeda1,3),MsDecimais(nMoedaBx))
Endif

If cPaisLoc == "BRA" .And. SE1->E1_MOEDA > 1 .And. SE1->E1_TXMOEDA > 0
	lArred	:=	.T.
Endif

If __lTemMR .and. nValrec <> 0 .and. nValrec < __nTotImp .And. lRecalcVRec
	//Garanto que não vai tentar reter um valor maior que o saldo do título
	aAdd(aOutImp, {"PIS", nPis })
	aAdd(aOutImp, {"COF", nCofins })
	aAdd(aOutImp, {"CSL", nCsll })
	aAdd(aOutImp, {"IRF", nIrrf })
	aAdd(aOutImp, {"ISS", nIss })
	aAdd(aOutImp, {"OUT", nlImpMR })

	aDadosPar 	:= verVrAR(nValrec, aOutImp, __lTemMR, __lImpMR)
	nPis		:= aDadosPar[1]
	nCofins	:= aDadosPar[2]
	nCsll		:= aDadosPar[3]
	nlImpMR 	:= aDadosPar[4]

	__lPropPcc	:= .T.
	__nTotImp	:= (nPis + nCofins + nCsll + nIrrf + nInss + nIss + nlImpMR)

	nValRec := nValMoeda+nMulta+nJuros+nVa+(nCm1+nProRata)-nDescont-nOtrGa+nAcresc-nDecresc-Iif(lPccBxCr,nPis+nCofins+nCsll,0)-Iif(lIrPjBxCr,nIrrf,0)-Iif(lCalcIssBx,nIss,0)-Iif(__lImpMR,nlImpMR,0)
Else
	//-- Quando for chamada pela validação do campo nValRec, não recalcula o valor recebido (baixa parcial)
	If (lRecalcVRec .And. If(cPaisLoc == "BRA",.T.,nValRec==0 ) .And. (!lAutValRec .OR. FwIsInCallStack("BAIXAUTSE1")) ) .OR. (cPaisLoc != "BRA" .AND. nMoedaBco!=nOdlMoedBco .And. !lValRec)
		nValRec := nValMoeda+nMulta+nJuros+nVa+(nCm1+nProRata)-nDescont-nOtrGa+nAcresc-nDecresc-Iif(lPccBxCr,nPis+nCofins+nCsll,0)-Iif(lIrPjBxCr,nIrrf,0)-Iif(lCalcIssBx,nIss,0)-Iif(__lImpMR,nlImpMR,0)
	ElseIf cPaisLoc == "BRA" .And. SE1->E1_MOEDA == 1 .And. SE1->E1_TXMOEDA == 0 .AND. (SA6->A6_MOEDA == 1 .or. SA6->A6_MOEDA == 0)
		If lBq10925 .and. nValRec <> 0 .And. lRecalcVRec
			If (nOldPis <> nPis .and.  nPis < nOldPis) .or. (nOldCofins <> nCofins .and.  nCofins < nOldCofins) .or.(nOldCsll <> nCsll .and.  nCsll < nOldCsll) .or.;
				If(lIrPjBxCr,nOldIrrf <> nIrrf .and.  nIrrf < nOldIrrf,.f.)
				nValRec := nValMoeda-Iif(lPccBxCr,nPis+nCofins+nCsll,0)-Iif(lIrPjBxCr,nIrrf,0)-Iif(lCalcIssBx,nIss,0)-nInss-Iif(__lImpMR,nlImpMR,0)
			Else
				nValRec-= Iif(nOldPis <> nPis, nPis - nOldPis,0)
				nValRec-= Iif(nOldCofins <> nCofins, nCofins - nOldCofins,0)
				nValRec-= Iif(nOldCsll <> nCsll, nCsll -nOldCsll,0)
				If lIrPjBxCr .and. nOldIrrf <> nIrrf
					nValRec-= Iif(nOldIrrf <> nIrrf, nIrrf -nOldIrrf,0)
				Endif
			Endif
	  	Else
			nValRec    := nValRec
	  	Endif
	EndIf
Endif

If nIrrf > 0 .and. cPaisLoc == "BRA" .AND. (SA1->A1_RECIRRF = '2' .or. (SED->ED_RECIRRF = '3' .AND. SA1->A1_RECIRRF = '2') .OR. SED->ED_RECIRRF = '2')
	nValRec += nIrrf
EndIf

nBsVlEstr := nValEstrang
nOutrosValores := nJuros+nVa+(nCm1+nProRata)+nMulta-nDescont-nOtrga+nAcresc-nDecresc - Iif(lPccBxCr,nPis+nCofins+nCsll,0)-Iif(lIrPjBxCr,nIrrf,0)
If Substr(cMotBx,1,3) == "DEV" .and. cPaisLoc == "BRA"
    nValEstrang := Round(NoRound(xMoeda(nValRec,nMoedaBx,SE1->E1_MOEDA,SE1->E1_EMISSAO,3,,nTxMoeda),3),MsDecimais(SE1->E1_MOEDA))
Else
    //tratativa p/ ñ gerar bx parcial na subst. de Tít. PR, qundo o mesmo estiver em moda 2 e c/ taxa da moeda
    If (AllTrim(SE1->E1_TIPO) <> "PR" .OR. SE1->E1_TXMOEDA == 0 .OR. SE1->E1_MOEDA == 1)
        If SE1->E1_MOEDA == 1    
            nValEstrang := Round(NoRound(xMoeda(nValRec,SE1->E1_MOEDA,nMoedaBx,dBaixa,3,nTxMoeda),3),MsDecimais(SE1->E1_MOEDA))
        Else
            //"Resolver" problemas de arredondamento em moeda 2
            nVlEstRnd   := Round(NoRound(xMoeda(nValRec,nMoedaBx,SE1->E1_MOEDA,dBaixa,3,,nTxMoeda),3),MsDecimais(SE1->E1_MOEDA))
            nVlEstNoRd  := NoRound(xMoeda(nValRec,nMoedaBx,SE1->E1_MOEDA,dBaixa,3,,nTxMoeda),MsDecimais(SE1->E1_MOEDA))
            If SE1->E1_SALDO == nVlEstRnd .AND. nOutrosValores == 0 // Se saldo igual Round do nValRec
                nValEstrang := nVlEstRnd
            ElseIf SE1->E1_SALDO == nVlEstNoRd .AND. nOutrosValores == 0 // Se saldo igual a noRound do nValRec
                nValEstrang := nVlEstNoRd
            Else // mudou o valor de baixa, faço como o padrão sempre fez
                nValEstrang := Round(NoRound(xMoeda(nValRec,nMoedaBx,SE1->E1_MOEDA,dBaixa,3,,nTxMoeda),3),MsDecimais(SE1->E1_MOEDA))
            EndIf
        EndIf
    EndIf
EndIf
If nOutrosValores == 0	// Vai baixar o título sem nenhum outro valor além do título?
	If Abs(nValEstrang - nBsVlEstr ) == 0.01
		nValEstrang := nBsVlEstr	// Corrigir diferença de 0,01 em conversão de moedas. Exemplo: E1_VALOR = 115890, E1_MOEDA = 2 , Taxa = 0,03348
	EndIf
EndIf

If lArred
	nValMoeda   := Round(NoRound(nValMoeda,3),MsDecimais(nMoedaBx))
	nValRec     := Round(nValRec,MsDecimais(SE1->E1_MOEDA))
Endif

nEstOriginal := nValEstrang-(xMoeda(nOutrosValores,nMoedaBx,SE1->E1_MOEDA,,,,nTxMoeda))

FA070CORR(nEstOriginal,nTxMoeda)


If !lAltlVal .OR. SE1->E1_MOEDA==1
	If !lFINA200
		nOldValRec := nValRec
	EndIf
EndIf
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fa070Situa³ Autor ³ Vinicius Barreira     ³ Data ³ 13/12/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Displaya a descri‡„o da situa‡„o do titulo                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fA070situa()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA070                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa070Situa()
//SITCOB
Local cDescricao := FN022SITCB(SE1->E1_SITUACA)[9]

Return cDescricao

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ValidaTota³ Autor ³ Wagner Xavier         ³ Data ³ 06/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Verifica se Valor a ser Creditado ‚ valido                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ValidaTotal()                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Gen‚riCco                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ValidaTotal()
LOCAL lRet := .T.
Do Case
Case Empty(cLote)
	lRet := .F.
Case STR((nTotGer-nTotDesp-nTotDesc+nTotMul+nTotJur),17,MsDecimais(1)) != STR(nCredConta,17,MsDecimais(1))
	Help(" ",1,"VLRTOTINV")
	lRet := .F.
EndCase
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MontaTotal³ Autor ³ Valter G. Nogueira Jr.³ Data ³ 04/03/94 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Atualiza o Total geral                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³MontaTotal(oGet)                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Gen‚rico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function MontaTotal(oGet)
nCredConta := nTotGer-nTotDesp-nTotDesc+nTotMul+nTotJur     //subtrai despesa
oGet:refresh()
Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FA070blank³ Autor ³ Wagner Xavier         ³ Data ³ 08/05/92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Limpa as marcacoes do arquivo (E1_OK)                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ FA070blank()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA060                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function fa070Blank()
If !Empty(SE1->E1_NUM)
	Reclock("SE1")
	SE1->E1_OK := "  "
	SE1->(MsUnlock())
Endif

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ButtonoFF ³Autor  ³ Pilar S Albaladejo	  ³ Data ³12.03.97  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Desliga Botao da enchoice bar - WINDOWS						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function ButtonOff(bSet15,bSet24,lOk)
DEFAULT lOk := .t.
IF lOk
	 SetKey(15,bSet15)
	 SetKey(24,bSet24)
Endif
Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa070Pesq ³ Autor ³ Mauricio Pequim Jr	  ³ Data ³23.11.98  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ tela de pesquisa - WINDOWS 										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa070Pesq(oMark, cAlias)

Local nRecno := Recno(), cChaBus // Guardo o RECNO e crio chave

AxPesqui()
dbSetOrder(nIndex+1)					// Busca a chave encontrada por AXPESQUI
cChaBus := &(IndexKey())			// No filtro IndRegua, caso nao encontre
If ! MsSeek(cChaBus)					// Posicione onde estava
	DbGoTo(nRecno)
Endif
oMark:oBrowse:Refresh(.T.)

Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa070Acha ³ Autor ³ Mauricio Pequim Jr	  ³ Data ³23.11.98  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao que realiza a pesquisa - WINDOWS						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico 																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa070Acha(cCampo,oMark)

dbSelectArea("SE1")
MsSeek(xFilial("SE1")+cCampo,.T.)
oMark:oBrowse:Refresh(.T.)
Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³Fa070BDev ³ Autor ³ Andreia Santos        ³ Data ³ 26/11/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Limpa conteudo de Bco/Age/Cta/N.Chque se baixa DEVOLUCAO   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ Fa070bDev()																  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function fa070BDev(oJuros, oMulta, oDescont, oCm, nTxMoeda, oCbx, lMotBx)
Local dBaixa
Local aPcc			:= {}
Local nBase			:= 0
Local lJurMulDes	:= (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")
Local lBq10925		:= SupergetMv("MV_BQ10925",.F.,"2") == "1"
Local lGerPCCBD := .F.
Local lPccBxCr := FPccBxCr(.T.)
Default lMotBx		:= .F.
// Motor de retenção de impostos
If __lTemMR
	F070VerImp("2",cFilAnt,SE1->E1_CLIENTE,SE1->E1_LOJA,,.T.,,@lPccBxCr)
EndIf
lAutValRec := If(Type('lAutValRec') == 'L', lAutValRec, .T.)

If ! MovBcoBx(cMotBx, .T.)
	if !lMotBx
		nJuros		:= 0
		nDescont	:= 0
		nMulta		:= 0
		nCM			:= 0
	Endif
	If !Empty(oCbx) .AND. (oCbx:lModified .Or. !lAutValRec)
		nValRec		:= Round(Noround(xMoeda(SE1->E1_SALDO-nTotAbat,SE1->E1_MOEDA,nMoedaBco,dBaixa,3,SE1->E1_TXMOEDA),3),2)+nMulta+nJuros+nVa-nDescont+nAcresc-nDecresc
	Endif
	cBanco 		:= Space(3)
	cAgencia	:= Space(5)
	cConta 		:= Space(10)
	fA070Data(@nTxMoeda,,,,oCbx)
ElseIf Empty(cBanco)
	If Alltrim(SE1->E1_ORIGEM) $ "LOJA010|LOJXTEF"
		aCaixaLoja  := xCxLoja()
		cPortado    := SE1->E1_PORTADO
		cBanco      := SE1->E1_PORTADO
		cAgencia    := SE1->E1_AGEDEP
		cConta      := SE1->E1_CONTA
	ElseIf !FwIsInCallStack("Fa450cmp")
		// 0 = Carteira
		// F = Carteira Protesto
		// G = Carteira Acordo
		cPortado    := IIF(FN022SITCB(SE1->E1_SITUACA)[1] .and. Empty(cPortado), aCaixaFin[1] , SE1->E1_PORTADO)
		cBanco      := IIF(FN022SITCB(SE1->E1_SITUACA)[1] .and. Empty(cBanco)  , aCaixaFin[1] , SE1->E1_PORTADO)
		cAgencia    := IIF(FN022SITCB(SE1->E1_SITUACA)[1] .and. Empty(cAgencia), aCaixaFin[2] , SE1->E1_AGEDEP )
		cConta      := IIF(FN022SITCB(SE1->E1_SITUACA)[1] .and. Empty(cConta)  , aCaixaFin[3] , SE1->E1_CONTA  )
	Endif
	fA070Data(@nTxMoeda,.F.,,,oCbx) // Calcula o desconto e o juros (se houver) e valida a data
	if !lMotBx
		F070Ret()
	EndIf
Endif

If (!Empty(oCbx) .AND. oCbx:lModified) .and. !lMotBx
	dBaixa      := CriaVar("E1_BAIXA")
	nTxMoeda 	:= If(SE1->E1_MOEDA > 1, If(SE1->E1_TXMOEDA > 0, SE1->E1_TXMOEDA,RecMoeda(dBaixa,SE1->E1_MOEDA)),0)
	If dBaixa < dLastPcc
		f070TotMes(dBaixa,.T.,,,,nTxMoeda)
	Else
		nValRec		:= Round(Noround(xMoeda(SE1->E1_SALDO-nTotAbat,SE1->E1_MOEDA,nMoedaBco,dBaixa,3,SE1->E1_TXMOEDA),3),2)+nMulta+nJuros+nVa-nDescont+nAcresc-nDecresc
		If lBq10925 .and. nValrec == nOldValrec
			nValRec	:= nValRec + (nPis + nCofins + nCsll)
		EndIf
		nBase	:= FBaseRPCC(nValRec)
		If lJurMulDes
			If nBase-nDescont+nJuros+nVa+nMulta+nAcresc-nDecresc > 0
				nBase 	:= nBase-nDescont+nJuros+nVa+nMulta+nAcresc-nDecresc
			EndIf
		EndIf
		If !Empty(SE1->E1_NUMBOR)
			lGerPCCBD := FGERPCCBOR("R", SE1->(Recno()))
		EndIf

	  	If !__lPccMR .And. SE1->E1_TIPO # MVRECANT .and. !lGerPCCBD //.And. Empty(SE1->E1_NUMBOR)
			aPcc	:= newMinPcc(dBaixa, nBase,SE1->E1_NATUREZ,"R",SA1->A1_COD+SA1->A1_LOJA,,,,,,cMotBx)
			nPis	:= aPcc[2]
			nCofins	:= aPcc[3]
			nCsll	:= aPcc[4]
			//Reestruturacao SE5 - Para gravação das tabelas FK3 e FK4
			nPisCalc	:= nPis
			nPisBaseC	:= nBase
			nPisBaseR 	:= nBase
			nCofCalc	:= nCofins
			nCofBaseC	:= nBase
			nCofBaseR 	:= nBase
			nCslCalc	:= nCsll
			nCslBaseC	:= nBase
			nCslBaseR 	:= nBase
		Endif
	EndIf
	If !__lIrfMR
		nIrrf  := IIf(cPaisLoc == "BRA", FCaIrBxCR(SE1->E1_VALOR), 0)
		nIrfBaseC := SE1->E1_VALOR
		nIrfBaseR := SE1->E1_VALOR 
	EndIf
Endif


If Type('lF070Auto') =='U' .OR. !lF070Auto
	oBanco:Refresh()
	oAgencia:Refresh()
	oConta:Refresh()
	If ValType(oJuros) == "O"
		oJuros:Refresh()
	Endif
	If ValType(oDescont) == "O"
		oDescont:Refresh()
	Endif
	If ValType(oMulta) == "O"
		oMulta:Refresh()
	Endif
	If ValType(oCm) == "O"
		oCm:Refresh()
	Endif
Endif
Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³FA070Desc ³ Autor ³ Mauricio Pequim Jr	  ³ Data ³ 13/03/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Alteracao de dados	da baixa											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ F070Desc()			 													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FA070Desc(oDescont)
Local lFa070Dsc	:= ExistBlock("F070DESC")
Local lRet 		:= .T.
Local dBaixa
Local cTxMod		:= If(SE1->E1_MOEDA > 1, If(SE1->E1_TXMOEDA > 0, SE1->E1_TXMOEDA,RecMoeda(dBaixa,SE1->E1_MOEDA)),0)
Local aPcc			:= {}
Local nBase			:= 0
Local lJurMulDes	:= (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")
Local lGerPCCBD := .F.
Local lPccBxCr  := FPccBxCr()

If lFa070Dsc
	lRet := ExecBlock("F070DESC",.F.,.F.,{nDescont})
	If ValType(lRet) <> "L"
		lRet := .T.
	EndIf
Endif

If lRet .And. (!Empty(oDescont) .AND. oDescont:lModified)
	dBaixa      := CriaVar("E1_BAIXA")
	If !nTxMoeda <> cTxMod
		nTxMoeda 	:= If(SE1->E1_MOEDA > 1, If(SE1->E1_TXMOEDA > 0, SE1->E1_TXMOEDA,RecMoeda(dBaixa,SE1->E1_MOEDA)),0)
	EndIf

	If lPccBxCr
		F070CnvPcc(nTxMoeda, SE1->E1_MOEDA)
	Endif

	If dBaixa < dLastPcc
		f070TotMes(dBaixa,.T.,,,,nTxMoeda)
	Else
		If !Empty(SE1->E1_NUMBOR)
			lGerPCCBD := FGERPCCBOR("R", SE1->(Recno()))
		EndIf

	   	If lJurMulDes	.and. SE1->E1_TIPO # MVRECANT .and. !lGerPCCBD //.And. Empty(SE1->E1_NUMBOR)
			nBase	:= FBaseRPCC() // Carrega a base do PCC
			If nBase-nDescont+nJuros+nVa+nMulta+nAcresc-nDecresc > 0
				nBase	:= nBase-nDescont+nJuros+nVa+nMulta+nAcresc-nDecresc
			EndIf
			If !__lPccMR
				aPcc	:= newMinPcc(dBaixa, nBase,SE1->E1_NATUREZ,"R",SA1->A1_COD+SA1->A1_LOJA,,,,,,cMotBx)
				nPis	:= aPcc[2]
				nCofins	:= aPcc[3]
				nCsll	:= aPcc[4]
				//Reestruturacao SE5 - Para gravação das tabelas FK3 e FK4
				nPisCalc	:= nPis
				nPisBaseC	:= nBase
				nPisBaseR 	:= nBase
				nCofCalc	:= nCofins
				nCofBaseC	:= nBase
				nCofBaseR 	:= nBase
				nCslCalc	:= nCsll
				nCslBaseC	:= nBase
				nCslBaseR 	:= nBase
			EndIf
	   	Endif
	EndIf
	If !__lIrfMR .AND. lJurMulDes
		nIrrf := IIf(cPaisLoc == "BRA", FCaIrBxCR(nValRec), 0)
		nIrfBaseC := nValRec
		nIrfBaseR := nValRec
	EndIf
Endif

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³F070Jrs   ³ Autor ³ Mauricio Pequim Jr	  ³ Data ³ 13/03/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Alteracao de dados	da baixa											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ F070Jrs()			 													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F070Jrs()

Local lRet	:= .T.

If	ExistBlock("F070JRS")
	lRet := ExecBlock("F070JRS",.F.,.F.)
Endif

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³F070TxPer ³ Autora³ Andrea V. Santiago	  ³ Data ³ 06/06/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Permite alteracao ou validacao no valor dos juros na baixa  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ F070TxPer()			 													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F070TxPer(oJuros)
Local lRet       	:= .T.
Local lF070TxPer 	:= Existblock("F070TXPER")
Local dBaixa
Local cTxMod		:= If(SE1->E1_MOEDA > 1, If(SE1->E1_TXMOEDA > 0, SE1->E1_TXMOEDA,RecMoeda(dBaixa,SE1->E1_MOEDA)),0)
Local aPcc			:= {}
Local nBase			:= 0
Local lJurMulDes	:= (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")
Local lGerPCCBD		:= .F.
If	lF070TxPer
	lRet := ExecBlock("F070TXPER",.F.,.F.)
Endif

If !Empty(oJuros) .and. oJuros:lModified
	dBaixa      := CriaVar("E1_BAIXA")
	If !nTxMoeda <> cTxMod
		nTxMoeda 	:= If(SE1->E1_MOEDA > 1, If(SE1->E1_TXMOEDA > 0, SE1->E1_TXMOEDA,RecMoeda(dBaixa,SE1->E1_MOEDA)),0)
	EndIf

	If dBaixa < dLastPcc
		f070TotMes(dBaixa,.T.,,,,nTxMoeda)
	Else
		If !Empty(SE1->E1_NUMBOR)
			lGerPCCBD := FGERPCCBOR("R", SE1->(Recno()))
		EndIf

		If lJurMulDes .and. SE1->E1_TIPO # MVRECANT  .and. !lGerPCCBD //.And. Empty(SE1->E1_NUMBOR)
			nBase	:= FBaseRPCC() // Carrega a base do PCC
			If nBase-nDescont+nJuros+nVa+nMulta+nAcresc-nDecresc > 0
				nBase	:= nBase-nDescont+nJuros+nVa+nMulta+nAcresc-nDecresc
			EndIf
			If !__lPccMR
				aPcc	:= newMinPcc(dBaixa, nBase,SE1->E1_NATUREZ,"R",SA1->A1_COD+SA1->A1_LOJA,,,,,,cMotBx)
				nPis	:= aPcc[2]
				nCofins	:= aPcc[3]
				nCsll	:= aPcc[4]
				//Reestruturacao SE5 - Para gravação das tabelas FK3 e FK4
				nPisCalc	:= nPis
				nPisBaseC	:= nBase
				nPisBaseR 	:= nBase
				nCofCalc	:= nCofins
				nCofBaseC	:= nBase
				nCofBaseR 	:= nBase
				nCslCalc	:= nCsll
				nCslBaseC	:= nBase
				nCslBaseR 	:= nBase
			EndIf
		Endif
	EndIf
	If !__lIrfMR .AND. lJurMulDes
		nIrrf := IIf(cPaisLoc == "BRA", FCaIrBxCR(nValRec), 0)
		nIrfBaseC := nValRec
		nIrfBaseR := nValRec
	EndIf
Endif

Return lRet
//-------------------------------------------------------------------
/*/{Protheus.doc} F070ConImp()
Consulta de impostos do Motor de retenções.
@author  Rodrigo Oliveira
@since 23/01/2018
@version 12
/*/
//-------------------------------------------------------------------
Static Function F070ConImp(aImpos)
Local aImpMR As Array
Local nOpcao As Numeric
Local nVlr As Numeric
Local lAltImp as Logical
Default aImpos := {}

//Inicializa variáveis.
aImpMR := Aclone(aImpos)
nOpcao := 1
nVlr := 0
lAltImp := .F.

If Len(aImpMR) > 0
	nVlr := __nTotImp
	nOpcao := FINMRET(aImpMR, 'SE1', .T., @nVlr)

	lAltImp:= F070AltImp(aImpMR)

	//Se houve alguma alteração nos impostos
	If nOpcao != 1 .And. lAltImp

		If __nTotImp > nVlr
			nVlr := (__nTotImp - nVlr)
				nValrec += nVlr
			 __nTotImp -= nVlr
		Else
			nVlr := (nVlr - __nTotImp)
			nValrec -= nVlr
			 __nTotImp += nVlr
		Endif

		aImpos := Aclone(aImpMR)

		//atual variáveis para gravar os vrets
		F070AtuImp(aImpos)

		nOldValRec := nValrec
		nValEstrang := nValrec
		__oRetMot:Refresh()
		oValRec:Refresh()
	EndIf
EndIf

Return Nil

//-------------------------------------------------------------------
/*/{Protheus.doc} F070AltImp()
Verifica se houve alteração no Valor dos impostos.
@author  Jose.Gavetti
@since 24/01/2018
@version 12
/*/
//-------------------------------------------------------------------
Static Function F070AltImp(aImpos As Array)
Local nY As Numeric
Local nImpos As Numeric
Local lAltImp := .F.

Default aImpos := {}


//Inicializa variáveis
nY := 0
nImpos := Len(aImpos)

For nY := 1 To nImpos

	Do Case
		Case aImpos[nY,8] == "PIS" .and.  aImpos[nY,5] <> nPis
			nPIS := aImpos[nY,5]
			lAltImp := .T.
		Case aImpos[nY,8] == "COF" .and. aImpos[nY,5] <> nCofins
			nCofins := aImpos[nY,5]
			lAltImp := .T.
		Case aImpos[nY,8] == "CSL" .and. aImpos[nY,5] <> nCsll
			nCsll := aImpos[nY,5]
			lAltImp := .T.
		Case aImpos[nY,8] == "IRF" .and. aImpos[nY,5] <> nIrrf
			nIrrf := aImpos[nY,5]
			lAltImp := .T.
		Case aImpos[nY,8] == "INSS" .and. aImpos[nY,5] <> nInss
			nInss := aImpos[nY,5]
			lAltImp := .T.
		Case aImpos[nY,8] == "ISS" .and. aImpos[nY,5] <> nIss
			nIss := aImpos[nY,5]
			lAltImp := .T.
	EndCase
Next nY

Return lAltImp

//-------------------------------------------------------------------
/*/{Protheus.doc} F070AtuImp()
Atualiza as variáveis para gravação dos vrets
@author  Jose.Gavetti
@since 24/01/2018
@version 12
/*/
//-------------------------------------------------------------------
Static Function F070AtuImp(aImpos As Array)
Local nZ As Numeric
Local nImpos As Numeric

Default aImpos := {}

//Inicializa variáveis
nZ := 0
nImpos := Len(aImpos)

For nZ := 1 To nImpos

	//Variáveis para gravar os Vrets.
	Do Case
		Case aImpos[nZ,8] == "PIS"
			nPIS := aImpos[nZ,5]
		Case aImpos[nZ,8] == "COF"
			nCofins := aImpos[nZ,5]
		Case aImpos[nZ,8] == "CSL"
			nCsll := aImpos[nZ,5]
		Case aImpos[nZ,8] == "IRF"
			nIrrf := aImpos[nZ,5]
		Case aImpos[nZ,8] == "INSS"
			nInss := aImpos[nZ,5]
		Case aImpos[nZ,8] == "ISS"
			nIss := aImpos[nZ,5]
	EndCase
Next nZ

Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³FA070ValRec³ Autor ³ Adrianne Furtado  	 ³ Data ³ 05/06/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Alteracao de dados da baixa							   	   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA070ValRec()			 								   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070													   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FA070ValRec(oJuros,oMulta,oProRata,oDescont,aVlOringl,aImpos,lAltValor)

Local lFa070VlRec	:= ExistBlock("F070VREC")
Local lRet			:= .T.
Local lPccBxCr		:= FPccBxCr(.T.)
Local lIrPjBxCr		:= FIrPjBxCr(.T.)
Local lProp			:= SuperGetMV("MV_DESCFIN",,"I")=="P"
Local lAtOldRec		:= .T.
Local lBQ10925		:= SuperGetMV("MV_BQ10925",,"2") == "1" .And. !lRaRtImp
Local nRecAltera	:= 0
Local nValOld 		:= 0
Local aPcc			:= {}
Local nBase			:= 0
Local lJurMulDes	:= (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")
LOCAL nTolerPg		:= GetMv("MV_TOLERPG")
Local lGerPCCBD 	:= .F.
Local lCpoValRec	:= ReadVar() == "NVALREC"
Local lVerfcOrg		:= .F.
Local lCalcPcc		:= .T.
Local lCalcIssBx 	:= GetNewPar("MV_MRETISS","1") == "2"  //Retencao do ISS pela emissao (1) ou baixa (2)

// Motor de retenção de impostos
Default aImpos		:= {}
Default lAltValor	:= STR(nValRec,17,2) != STR(nOldValRec,17,2)

If __lTemMR
	F070VerImp("2",cFilAnt,SE1->E1_CLIENTE,SE1->E1_LOJA,,.T.,@lIrPjBxCr,@lPccBxCr)
EndIf
Default aVlOringl := Nil

lVerfcOrg := lAltValor .And. ValType( aVlOringl ) == "A" .And. Len( aVlOringl ) == 8

If Type("nTxMoeda") == "U" .and. cPaisLoc <> "BRA"
    nTxMoeda    := aTxMoedas[SE1->E1_MOEDA][2]
EndIf

IF SE1->E1_MOEDA == 1 .and.  Str(xMoeda(nValRec, SE1->E1_MOEDA, nMoedaBco,dbaixa,7,nTxMoeda),17,2) > Str((xMoeda(SE1->E1_SALDO-nTotAbat,SE1->E1_MOEDA,nMoedaBco,dBaixa,7,nTxMoeda)+Iif(Alltrim(SE1->E1_ORIGEM) == "FINA074",0,nJuros+nVa+nMulta-nDescont-nOtrga+nTolerPg+nAcresc-nDecresc)),17,2)
        Help(" ",1,"ValorMaior")
        Return .F.
ElseIf SE1->E1_MOEDA > 1 .and. Str(xMoeda(nValEstrang, SE1->E1_MOEDA, nMoedaBco,dbaixa,7,nTxMoeda),17,2)  > Str((xMoeda(SE1->E1_SALDO-nTotAbat,SE1->E1_MOEDA,nMoedaBco,dBaixa,7,nTxMoeda)+Iif(Alltrim(SE1->E1_ORIGEM) == "FINA074",0,nJuros+nVa+nMulta-nDescont-nOtrga+nTolerPg+nAcresc-nDecresc)),17,2)
    Help(" ",1,"ValorMaior")
    Return .F.
EndIf

//Valores Acessorios
IF nVA > 0 .and. nValRec-nJuros-nMulta+nDescont+nOtrga-nDifCambio-nTolerPg-nAcresc+nDecresc < nVA
	Help(" ",1,"VLRMENORQVA",,STR0276,1,0)	//"O valor efetivamente recebido é menor que os Valores Acessórios. Por favor, ajuste os Valores Acessórios."
	Return .F.
EndIf

If lIrPjBxCr .And. lAltValor .And. !(lRaRtImp .And. SE1->E1_TIPO $ MVRECANT)
  If !__lIrfMR
	If !lMVGlosa
		nIrrf:= Iif(cPaisLoc == "BRA" ,FCaIrBxCR(nValRec,,.T.,,lAltValor),0)
		nOldIrrf := nIrrf
		nIrfBaseC := nValRec
		nIrfBaseR := nValRec
	EndIf
  ElseIf __lTemMR .And. __lIrfMR
	aImpos := F070VldImp(nValRec, dBaixa)
  EndIf
Endif

If !__lPccMR .and. lMVGlosa
	nPis 	:= nOldPis
	nCofins := nOldCofins
	nCsll 	:= nOldCsll
Endif

If !__lPccMR .and. lMVGlosa
	nPis 	:= nOldPis
	nCofins := nOldCofins
	nCsll 	:= nOldCsll
Endif

If lAltValor .and. !lRaRtImp .and. lPccBxCr .and. nValRec == (SE1->E1_SALDO)
	nRecAltera	:= nValRec
EndIf

If  lAltValor .And. lPccBxCr
	If !lMVGlosa
		If lPccBxCR .and. dBaixa < dLastPcc
			f070TotMes(dBaixa,.T.)
		Else
			nBase	:= FBaseRPCC(nValRec,@lCalcPCC)
			If lJurMulDes
				If nValRec <= nAcresc
					nBase	:= 0
				EndIf
				If nBase+nDescont-nJuros-nVa-nMulta-nAcresc+nDecresc > 0
					nBase 	:= nBase+nDescont-nJuros-nVa-nMulta-nAcresc+nDecresc
				EndIf
			EndIf

			If !Empty(SE1->E1_NUMBOR)
				lGerPCCBD := FGERPCCBOR("R", SE1->(Recno()))
			EndIf

			//No caso do usuário alterar o valor e retornar ao valor originalmente calculado
			If lVerfcOrg .And. aVlOringl[ 1 ] == nValRec .And. aVlOringl[ 5 ] == nJuros .And. aVlOringl[ 6 ] == nMulta .And. aVlOringl[ 7 ] == nDescont
				nPis      := aVlOringl[ 2 ]
				nCofins   := aVlOringl[ 3 ]
				nCsll     := aVlOringl[ 4 ]
				nPisCalc  := nPis
				nPisBaseC := aVlOringl[ 8 ]
				nPisBaseR := aVlOringl[ 8 ]
				nCofCalc  := nCofins
				nCofBaseC := aVlOringl[ 8 ]
				nCofBaseR := aVlOringl[ 8 ]
				nCslCalc  := nCsll
				nCslBaseC := aVlOringl[ 8 ]
				nCslBaseR := aVlOringl[ 8 ]
				If Type( "nOldPis+nOldCofins+nOldCsll" ) == "N"
					nOldPis    := nPis
					nOldCofins := nCofins
					nOldCsll   := nCsll
				EndIf
			ElseIf SE1->E1_TIPO # MVRECANT .and. !lGerPCCBD .and. lCalcPcc//.And. Empty(SE1->E1_NUMBOR)
			  If !__lPccMR
				aPcc	:= newMinPcc(dBaixa, nBase,SE1->E1_NATUREZ,"R",SA1->A1_COD+SA1->A1_LOJA,,,,,,cMotBx)
				nPis	:= aPcc[2]
				nCofins	:= aPcc[3]
				nCsll	:= aPcc[4]
				//Reestruturacao SE5 - Para gravação das tabelas FK3 e FK4
				nPisCalc	:= nPis
				nPisBaseC	:= nBase
				nPisBaseR 	:= nBase
				nCofCalc	:= nCofins
				nCofBaseC	:= nBase
				nCofBaseR 	:= nBase
				nCslCalc	:= nCsll
				nCslBaseC	:= nBase
				nCslBaseR 	:= nBase
				If Type( "nOldPis+nOldCofins+nOldCsll" ) == "N"
					nOldPis    := nPis
					nOldCofins := nCofins
					nOldCsll   := nCsll
				EndIf
			  ElseIf __lTemMR .And. __lPccMR
				aImpos := F070VldImp(nValRec, dBaixa)
			  EndIf
			Endif
		EndIf
		nValOld := nValRec
	EndIf
	If lRaRtImp .And. lAltValor
		nOldValRec := nValRec
		nValRec := nValRec-nPis-nCoFins-nCsll-nIrrf

		If nValRec < 0
			nValRec := nOldValRec
		Endif

		If SE1->E1_MOEDA == 1
			nValEstrang := nValRec // nValEstrang = variavel que contem o valor do campo "valor pago" na baixa
		EndIf

		If lAtOldRec
			nOldValRec	 := nValRec
		EndIf
	ElseIf lAltValor .And. lPccBxCr
		nOldValRec := nValRec
		If lRaRtImp .And. ( lAltValor .And. lPccBxCr )
			nValRec := nValRec-nPis-nCoFins-nCsll-nIrrf
		EndIF
		If nValRec < 0
			nValRec := nOldRec
		EndIf

		If SE1->E1_MOEDA == 1
			nValEstrang := nValRec // nValEstrang = variavel que contem o valor do campo "valor pago" na baixa
		EndIf

		If lBQ10925 .And. (nValRec == SE1->E1_VALOR .OR. (nValRec - nPis - nCofins - nCsll) == SE1->E1_SALDO )
			fa070val( nValrec, nTxMoeda,!lCpoValRec)
		EndIf

		If nValRec != nOldValRec
			nOldValRec := nValRec
		EndIf
	EndIf
Endif

If __lTemMR .And. __lImpMR
	aImpos := F070VldImp(nValRec, dBaixa,@lPccBxCr, @lIrPjBxCr, @lCalcIssBx,@__lImpMR)
Endif

//Recalcula o desconto
If lAltValor .And. lProp
	nDescont := FaDescFin("SE1",dBaixa,nValRec,nMoedaBco)
	nValRec  -= nDescont
Endif

If lFa070VlRec
	lRet := ExecBlock("F070VREC",.F.,.F.,{nValRec})
	If ValType(lRet) <> "L"
		lRet := .T.
	EndIf
EndIf

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³F070DSC	³ Autor ³ Mauricio Pequim Jr	  ³ Data ³ 13/03/00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Alteracao de dados	da baixa											  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ F070DSC()			 													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F070DSC()

Local lRet			:= .T.

If	ExistBlock("F070DSC")
	lRet := ExecBlock("F070DSC",.F.,.F.)
Endif

Return lRet


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Sel070baix³ Autor ³ Wagner Xavier         ³ Data ³ 23/10/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Seleciona Baixas a serem canceladas                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³Sel070Baxia()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Gen‚rico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Sel070Baixa(	cTipoDoc	,cPrefixo	,cNum		,cParcela,;
						cTipo		,nTotAdto	,lBaixaAbat	,cCliente,;
						cLoja		,nVlrBaixa	,lTransf	,lBxCec,;
						lBxLiq	,lSigaloja	, lTipBxCP)
LOCAL __k
LOCAL cTipoBaixa
LOCAL nRecAtu
LOCAL cSequencia
LOCAL lEstornada	:= .f.
LOCAL aBaixa		:= {}
LOCAL cNumero
Local cTipoEst
Local aArea			:= GetArea()
Local nTamE1Parc	:= TamSx3("E1_PARCELA")[1]	// Tamanho do campo parcela
Local cOrdRec := ""
Local cSerRec := ""
Local lBq10925 := SuperGetMv("MV_BQ10925",.F.,"2") == "1"
Local lEstLoj	:= .T. //Varialvel para verificação do estorno proveniente do Varejo
Local lLjRecCanc := FWIsInCallStack("LjRecCancBx")
Local lSDACRVL := SuperGetMv("MV_SDACRVL",.T.,.F.)

If Type("lRaRtImp") == "U" //Forço a criação da vairável caso a mesma não exista
 Private	lRaRtImp  := lFinImp .And. FRaRtImp() //Define se ha retencao de impostos PCC/IRPJ no R.A
EndIf

DEFAULT lTipBxCP	:= .F.
DEFAULT lSigaloja	:= .F.

aBaixaSE5 := Iif(Type("aBaixaSE5") != "A",{},aBaixaSE5)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se funcao foi chamada a partir da trasferˆncia banc ria FINA060 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lTransf := IIF (lTransf == NIL, .F., lTransf)
lBxCec := IIF(lBxCec == NIL,.F.,lBxCec)
lBxLiq := IIF(lBxLiq == NIL,.F.,lBxLiq)

nTotAdto := if( nTotAdto == nil,0,nTotAdto )
lBaixaAbat := if( lBaixaAbat ==nil,.f.,lBaixaAbat)
nVlrBaixa := 0
cParcela	:= Padr(cParcela,nTamE1Parc)

FOR __k := 1 TO Len(cTipoDoc) Step 4

	cTipoBaixa := AllTrim(Substr(cTipoDoc,__k,3 ) )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Procura pela baixas dependendo do Tipodoc passado como parametro      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SE5")
	SE5->(dbSetOrder(2))
	If SE5->(DBSeek(xFilial("SE5")+cTipoBaixa+cPrefixo+cNum+cParcela+cTipo))
		While !SE5->(Eof()) .and. SE5->E5_FILIAL==xFilial("SE5") .and. ;
			SE5->E5_TIPODOC+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO==cTipoBaixa+cPrefixo+cNum+cParcela+cTipo

		If SE1->E1_FILORIG != SE5->E5_FILORIG
			SE5->(dbSkip())
			Loop
		EndIf

		/////////////////////////////////////////////////////////////////////////////////
		//Tratamento para estorno somente dos títulos pertinentes ao FRONTLOJA/TOTVSPDV//
		/////////////////////////////////////////////////////////////////////////////////
		If lLjRecCanc
			lEstLoj := !(AllTrim(SE5->E5_ORIGEM) <> "LOJXREC" .And. AllTrim(SE5->E5_ORIGEM) <> "RPC")
		EndIf

		If SE5->E5_MOTBX $ "FAT#DSD" .or. (SE5->E5_MOTBX $ "STP" .and. FunName() <> "FINA040" .and. !lF070Auto)  .Or. !lEstLoj
			dbSkip()
			Loop
		Endif

		If ("FINA061" $ Subst(SE5->E5_HISTOR,1,7)) .And. SE5->E5_MOTBX $ "PCC_IRF_IMR"
			dbSkip()
			Loop
		Endif

		IF FwIsInCallStack("fa061CANC") .AND. SE5->E5_MOTBX $ "CEC"
			dbSkip()
			Loop
		Endif

		If Alltrim(SE5->E5_HISTOR) = "Bx. Bord. Ac."
			dbSkip()
			Loop
		Endif
		If SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se as baixas sao de adiantamento (NORmal,DEVolucao,DACao)  ³
			//³Caso E5_DOCUMEN nao vazio e cTipoBaixa=="BA", ‚ compensacao e n„o   ³
			//³baixa de titulo de adiantamento.												  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If cTipoBaixa =="VL" .or.( cTipoBaixa =="BA" .and. Empty(SE5->E5_DOCUMEN))
				lBaixaAbat := .t.
			EndIf
			If SE5->E5_SITUACA == "C" .or. SE5->E5_RECPAG != "P" .And. IIf(cpaisloc=="BRA",.T.,IIf(cPaisLoc == "PER",!Empty(SE5->E5_ORDREC),Empty(SE5->E5_ORDREC)))
				SE5->(dbSkip())
				Loop
			EndIf
		Else
			If SE5->E5_SITUACA == "C" .or. If(EmPty(SE5->E5_IDENTEE),SE5->E5_RECPAG != "R",If(SE5->E5_RECPAG == "P",.T.,.F.))  .And. IIf(cpaisloc=="BRA",.T.,IIF(cPaisLoc == "PER",!Empty(SE5->E5_ORDREC),Empty(SE5->E5_ORDREC)))
				SE5->(dbSkip())
				Loop
			EndIF
		Endif

		IF SE5->E5_CLIFOR != cCliente .OR. SE5->E5_LOJA != cLoja
			SE5->(dbSkip())
			Loop
		EndIF
        IF SE5->E5_MOTBX == "LIQ" .and. !Empty(SE5->E5_DOCUMEN)
			lBxLiq	:= .T.
			SE5->(dbSkip())
			Loop
		EndIF

		If cTipoBaixa == "BA" .and. SE5->E5_TIPO $ MVRECANT .and. !Empty(SE5->E5_DOCUMEN) .And. IIf(cpaisloc=="BRA",.T.,IIf(cPaisLoc == "PER",!Empty(SE5->E5_ORDREC),Empty(SE5->E5_ORDREC)))
			dbskip()
			loop
		EndIf

		If lSigaloja
			If TemBxCanc( SE5->E5_PREFIXO + SE5->E5_NUMERO + SE5->E5_PARCELA + SE5->E5_TIPO + SE5->E5_CLIFOR + SE5->E5_LOJA + SE5->E5_SEQ )
				dbSkip()
				Loop
			EndIf
		EndIf

		nRecAtu := SE5->(recno())
		cSequencia	:= SE5->E5_SEQ
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se existe uma baixa cancelada para esta baixa efetuada       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lTransf
				SE5->(DBSeek(xFilial("SE5")+"E2"+cPrefixo+cNum+cParcela+cTipo))
			cTipoEst:= "E2"
		Else
				SE5->(DBSeek(xFilial("SE5")+"ES"+cPrefixo+cNum+cParcela+cTipo))
			cTipoEst := "ES"
		Endif
		While !SE5->(Eof()) .and. SE5->E5_FILIAL== xFilial("SE5") .and. ;
				SE5->E5_TIPODOC+SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO==cTipoEst+cPrefixo+cNum+cParcela+cTipo

			IF SE5->E5_CLIFOR != cCliente .OR. SE5->E5_LOJA != cLoja
				SE5->(dbSkip())
				Loop
			EndIF

			IF SE5->E5_SEQ != cSequencia
				SE5->(dbSkip())
				Loop
			EndIF

			If SE5->E5_MOTBX == "FAT" .or. ( SE5->E5_MOTBX $ "STP" .and. FunName() <> "FINA040")
				dbSkip()
				Loop
			Endif

			//ÚBaixa NormalÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Sera estornado se for exatamente a mesma sequencia, carteira          ³
			//³contraria e nao for um adiantamento ou credito. (Titulo Normal)       ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SE5->E5_SEQ == cSequencia .And. SE5->E5_RECPAG == "P" .and. !E5_TIPO $ MVRECANT+"/"+MV_CRNEG
				lEstornada := .T.
				Exit
			EndIf

			//ÚÄBaixa de AdiantamentoÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Sera estornado se for exatamente a mesma sequencia, carteira          ³
			//³contraria e for um adiantamento ou credito. (Titulo de Credito        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SE5->E5_SEQ == cSequencia .And. SE5->E5_RECPAG == "R" .and. E5_TIPO $ MVRECANT+"/"+MV_CRNEG
				lEstornada := .T.
				Exit
			EndIf
			SE5->( dbSkip() )
		End
		SE5->(dbGoTo(nRecAtu))
		If lEstornada
			lEstornada := .F.
			lBaixaAbat := .F.
			SE5->(dbSkip())
			Loop
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Aten‡„o, o array aBaixaSE5 ‚ o elemento fundamental para que ³
		//³a baixa funcione a contento. Se for necess rio alter -lo,deve³
		//³ser feito com a MAXIMA ATENCAO, pois as variaveis tratadas na³
		//³funcao est„o com posi‡”es fixas dentro do array              ³
		//³Mem¢ria de Calculo do array em quest„o.                      ³
		//³                                                             ³
		//³Informa‡„o        Posicao     Tamanho  					       ³
		//³                                                             ³
		//³Prefixo            01           03  					          ³
		//³Numero             02           12           					 ³
		//³Parcela            03           01						          ³
		//³Tipo               04           03					             ³
		//³Cliente/Fornec     05           06					             ³
		//³Loja               06           02					             ³
		//³Data da baixa      07           08					             ³
		//³Valor              08           15					             ³
		//³Sequencia          09           02					             ³
		//³Data Dispon.       10           08					             ³
		//³Banco              11           03					             ³
		//³Agencia            12           05					             ³
		//³Conta              13           10					             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		If ! lTipBxCP .and. ( cTipoBaixa =="CP" .or. ( SE5->( E5_MOTBX == "CEC" .And. E5_TIPODOC == "BA" ) ) )
			If Alltrim(SE5->E5_MOEDA) == "01" //compensação E5_VALOR SEMPRE MOEDA FORTE E VLMOED2 EM MOEDA DO TITULO
				nTotAdto += SE5->E5_VALOR + If(! EmPty(SE5->E5_IDENTEE) .and. !lBq10925,SE5->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL),0)
				If lSDACRVL .And. SE5->E5_VLDESCO > 0
					nParciais += SE5->E5_VLDESCO
				Endif
			Else
				nTotAdto += SE5->E5_VLMOED2
			Endif

			If SE5->E5_MOTBX == "CEC"
				lBxCEC := .T.
				If FwIsInCallStack("Fa450Can")
					Aadd(aBaixa,SE5->E5_PREFIXO+" "+SE5->E5_NUMERO       +;
					" "+SE5->E5_PARCELA+" "+SE5->E5_TIPO+" "+SE5->E5_CLIFOR +;
					" "+SE5->E5_LOJA+" "+Dtoc(SE5->E5_DATA)       +;
					" "+Transf(SE5->E5_VALOR,"@E 9999,999,999.99")+"   "+SE5->E5_SEQ  )

					Aadd( aBaixaSE5,{	SE5->E5_PREFIXO     , SE5->E5_NUMERO    , SE5->E5_PARCELA   , SE5->E5_TIPO      ,; //1,2,3,4
										SE5->E5_CLIFOR      , SE5->E5_LOJA		, SE5->E5_DATA		, SE5->E5_VALOR     ,; //5,6,7,8
										SE5->E5_SEQ         , SE5->E5_DTDISPO	, SE5->E5_BANCO     , SE5->E5_AGENCIA   ,; //9,10,11,12
										SE5->E5_CONTA       , SE5->E5_VLJUROS	, SE5->E5_VLMULTA	, SE5->E5_VLDESCO   ,; //13,14,15,16
										SE5->E5_VLCORRE     , SE5->E5_VRETPIS	, SE5->E5_VRETCOF	, SE5->E5_VRETCSL   ,; //17,18,19,20
										SE5->E5_PRETPIS	    , SE5->E5_PRETCOF	, SE5->E5_PRETCSL	, SE5->E5_MOEDA     ,; //21,22,23,24
										SE5->E5_TIPODOC     , IIf(SE5->(FieldPos("E5_FORMAPG")) > 0,AllTrim(SE5->E5_FORMAPG),NIL) ,; //25,26
										cOrdRec             , cSerRec           , SE5->E5_MOTBX		,SE5->E5_VRETIRF,SE5->E5_PRETIRF, ; //27,28,29,30,31
										If(lRaRtImp, SE5->E5_PRISS,0)   , If(lRaRtImp, SE5->E5_PRINSS,0),; //32,33
										If(lPropBx, SE5->E5_VRETINS, 0) , If(lPropBx,SE5->E5_VRETISS, 0),SE5->E5_VLMOED2} ) //34,35,36
				EndIf
			Endif
		Else
			nVlrBaixa += SE5->E5_VALOR
			cNumero := SE5->E5_NUMERO+Iif(Len(SE5->E5_NUMERO)==TamSX3("E5_NUMERO")[1],Space(TamSX3("E5_NUMERO")[1]),"")
			Aadd(aBaixa,SE5->E5_PREFIXO+" "+cNumero       +;
			" "+SE5->E5_PARCELA+" "+SE5->E5_TIPO+" "+SE5->E5_CLIFOR +;
			" "+SE5->E5_LOJA+" "+Dtoc(SE5->E5_DATA)       +;
			" "+Transf(SE5->E5_VALOR,"@E 9999,999,999.99")+"   "+SE5->E5_SEQ  )

			If cPaisLoc <> "BRA"
				cOrdRec := SE5->E5_ORDREC
				cSerRec := SE5->E5_SERREC
			Else
				cOrdRec := ""
				cSerRec := ""
			EndIf

			If ! (("FINA061" $ Subst(SE5->E5_HISTOR,1,7)) .And. SE5->E5_MOTBX $ "PCC_IRF_IMR" ) .And. !(Alltrim(SE5->E5_HISTOR) = "Bx. Bord. Ac.")
				Aadd( aBaixaSE5,{	    SE5->E5_PREFIXO	   	, cNumero			, SE5->E5_PARCELA	, SE5->E5_TIPO	  ,;
										SE5->E5_CLIFOR	   	, SE5->E5_LOJA		, SE5->E5_DATA		, SE5->E5_VALOR	  ,;
										SE5->E5_SEQ		   	, SE5->E5_DTDISPO	, SE5->E5_BANCO	    , SE5->E5_AGENCIA ,;
										SE5->E5_CONTA	   	, SE5->E5_VLJUROS	, SE5->E5_VLMULTA	, SE5->E5_VLDESCO ,;
										SE5->E5_VLCORRE		, SE5->E5_VRETPIS	, SE5->E5_VRETCOF	, SE5->E5_VRETCSL ,;
										SE5->E5_PRETPIS		, SE5->E5_PRETCOF	, SE5->E5_PRETCSL	, SE5->E5_MOEDA	  ,;
										SE5->E5_TIPODOC		, AllTrim(SE5->E5_FORMAPG) ,;
										cOrdRec			   	, cSerRec			, SE5->E5_MOTBX		,SE5->E5_VRETIRF,SE5->E5_PRETIRF, ;
										If(lRaRtImp, SE5->E5_PRISS,0)   , If(lRaRtImp, SE5->E5_PRINSS,0),; 
										0,0,SE5->E5_VLMOED2} ) 
	      Endif
		EndIf
		SE5->(dbSkip())
	End
	EndIf
Next __k

RestArea( aArea )

Return( aBaixa )



Static Function Get070Mark()
Local cMarca

cMarca :=GetMark()
While cMarca == "xx"
  cMarca := Getmark()
End
Return cMarca

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³F070SetMd ³ Autor ³ Fernando Machima      ³ Data ³ 09/01/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Mostra a tela de taxas de moeda    								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³F070SetMd()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³FINA070                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fa070SetMd(nTxMoeda,lGetMd)
Local oDlg, nLenMoedas	:= Len(aTxMoedas)
Default lGetMd := .T.

If nLenMoedas > 1 .and. lGetMd
	DEFINE MSDIALOG oDlg From 200,0 TO 362,230 TITLE STR0132 PIXEL
	@ 005,005  To 062,110 OF oDlg PIXEL
	@ 012,010 SAY  aTxMoedas[2][1]  Of oDlg PIXEL
	@ 010,060 MSGET aTxMoedas[2][2] PICTURE aTxMoedas[1][3] Of oDlg PIXEL  HASBUTTON
	If nLenMoedas > 2
	   @ 024,010 SAY  aTxMoedas[3][1]  Of oDlg PIXEL
	   @ 022,060 MSGET aTxMoedas[3][2] PICTURE aTxMoedas[2][3] Of oDlg PIXEL  HASBUTTON
	   If nLenMoedas > 3
	      @ 036,010 SAY  aTxMoedas[4][1]  Of oDlg PIXEL
	      @ 034,060 MSGET aTxMoedas[4][2] PICTURE aTxMoedas[3][3] Of oDlg PIXEL  HASBUTTON
	      If nLenMoedas > 4
	         @ 048,010 SAY  aTxMoedas[5][1]  Of oDlg PIXEL
	         @ 046,060 MSGET aTxMoedas[5][2] PICTURE aTxMoedas[4][3] Of oDlg PIXEL  HASBUTTON
	      Endif
	   Endif
	Endif
	DEFINE SButton FROM 064,80 TYPE 1 Action (oDlg:End() ) ENABLE OF oDlg  PIXEL

   ACTIVATE MSDialog oDlg CENTERED

EndIf

If nLenMoedas > 1
	If SE1->E1_MOEDA > 1 .Or. cPaisLoc<>"BRA"  // somente se o titulo original for em moeda diferente de 1
		nTxMoeda := aTxMoedas[SE1->E1_MOEDA][2]
	EndIf
    nDifCambio := ((SE1->E1_VALOR * aTxMoedas[SE1->E1_MOEDA][2]) - SE1->E1_VLCRUZ)
    If SE1->E1_MOEDA == nMoedabco .and. cPaisLoc<>"BRA" .and. nDifCambio < 0 
		nDifCambio:= 0
	Endif 
Endif

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³CadCheqCR ºAutor  ³Claudio D. de Souza º Data ³  18/04/02   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Permite a digitacao dos cheques recebidos contas a receber º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Fina040/Fina070                                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function CadCheqCR(cBanco,cAgencia,cConta,nValRec,dData,nChamada,aColsSEF,lTela)
Local oDlg
Local aOldHead := If(Type("aHeader")=="A",aClone(aHeader),{})
Local aOldCols := {}
Local oGet
Local nOpca
Local aArea 	:= GetArea()
Local aAreaSef	:= SEF->(GetArea())
Local aOldRotina
Local aBut070	:=	If(GetMv("MV_CMC7FIN") == "S",;
							{{'COLINC',{||	F070CmC7(oGet,.T.,;
												aCols[oGet:nAt][1],aCols[oGet:nAt][2],aCols[oGet:nAt][3],;
											  	aCols[oGet:nAt][4],aCols[oGet:nAt][5],aCols[oGet:nAt][6],;
											  	aCols[oGet:nAt][7],aCols[oGet:nAt][8],aCols[oGet:nAt][9],;
											  	aCols[oGet:nAt][10],aCols[oGet:nAt][11],aCols[oGet:nAt][12])},STR0167,STR0180}},; //"Ler cheques" //"CMC7"
							Nil)
Local oFnt
Local nX
Local lColsSEF := .F.
Local aCpoaCols:={}
Local lUSADOBX := .T.
Local lPanelFin := IsPanelFin()
Local lPaisBRA    := (cPaisLoc == "BRA")
Local cFunname	:= FUNNAME()

If Type("aRotina")=="A"
	aOldRotina := aClone(aRotina)
Endif

DEFINE FONT oFnt	NAME "Arial" Size 10,15

DEFAULT nChamada := 2
DEFAULT cBanco   := Space(TamSx3("EF_BANCO")[1])
DEFAULT cAgencia := Space(TamSx3("EF_AGENCIA")[1])
DEFAULT cConta	  := Space(TamSx3("EF_CONTA")[1])
DEFAULT nValRec  := 0
DEFAULT dData	  := dDataBase
DEFAULT lTela	  := .T.


PRIVATE oQtdCheq		:= nil
PRIVATE nQtdCheq 		:= 0
PRIVATE oVlrNomCheq	:= nil
PRIVATE nVlrNomCheq  := 0
PRIVATE oVlRefBxChq	:= nil
PRIVATE nVlRefBxChq  := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o motivo de baixa permite informar cheque ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Type("cMotBx") == "C" .And. !ChqMotBx(cMotBx)
	Help( " ", 1, "CHQNOPER" )
	Return .F.
EndIf

If aColsSEF <> Nil
	lColsSEF := .T.
	aOldCols := If(Type("aCols")=="A",aClone(aCols),{})
	If ( Type("aColsSEF") == "A" .And. Len(aColsSEF) > 0 )
		aCols:= aClone(aColsSEF)
	Else
		aCols:= {}
	EndIf
EndIf

SetKey(VK_F4,{||})

#DEFINE USADO CHR(0)+CHR(0)+CHR(1)

aHeader := {}
aRotina := {{"","", 0 , 3}}

If nChamada == 3
	// Caso seja igual a 3 (Alteracao), monta o cabecalho sem a validacao de "aCols[n][13]!='Sim'" para edicao dos campos.
	Aadd( aHeader, { STR0145, "EF_BANCO"	, "@!", TamSx3("EF_BANCO")[1]	, 0, "aCols[n][13]!='Sim' .And. NaoVazio(M->EF_BANCO)"	 , USADO, "C",, "V" ,,,} )
	Aadd( aHeader, { STR0146, "EF_AGENCIA"	, "@!", TamSx3("EF_AGENCIA")[1], 0, "aCols[n][13]!='Sim' .And. NaoVazio(M->EF_AGENCIA)", USADO, "C",, "V" ,,,} )
	Aadd( aHeader, { STR0147, "EF_CONTA" 	, "@!", TamSx3("EF_CONTA")[1], 0, "aCols[n][13]!='Sim' .And. NaoVazio(M->EF_CONTA)"	 , USADO, "C",, "V" ,,,} )
	Aadd( aHeader, { STR0148, "EF_NUM"		, "@!", TamSx3("EF_NUM")[1], 0, "aCols[n][13]!='Sim' .And. NaoVazio(M->EF_NUM)"		 , USADO, "C",, "V" ,,,} )
	Aadd( aHeader, { STR0163, "EF_VALOR"	, "@E 999,999,999.99"	, 15, 2, "Fa070TotCheq(1) .And. Positivo(M->EF_VALOR) .And. NaoVazio(M->EF_VALOR)", USADO, "N",, "V" ,,,} )
	If lPaisBRA
		Aadd( aHeader, { STR0149, "EF_VALORBX"	, "@E 999,999,999.99"	, 15, 2, "Fa070TotCheq(2) .And. Positivo(M->EF_VALORBX) .And. NaoVazio(M->EF_VALORBX)", USADO, "N",, "V" ,,,} )
 	Endif
	Aadd( aHeader, { STR0150, "EF_EMITENT"	, "@!", TamSx3("EF_EMITENT")[1], 0, "aCols[n][13]!='Sim' .And. NaoVazio(M->EF_EMITENT)"	, USADO, "C",, "V" ,,,} )
	Aadd( aHeader, { STR0151, "EF_DATA"		, "@!", 8, 0, "NaoVazio(M->EF_DATA) .And. M->EF_DATA <= aCols[n][9]"	, USADO, "D",, "V" ,,,} )

	If FunName() == "FINA220"
		Aadd( aHeader, { STR0152, "EF_VENCTO"	, "@!", 8, 0, "NaoVazio(M->EF_VENCTO) .And. M->EF_VENCTO >= aCols[n][8] .and. Fn220ChP()", USADO, "D",, "V" ,,,} )
	else
	Aadd( aHeader, { STR0152, "EF_VENCTO"	, "@!", 8, 0, "NaoVazio(M->EF_VENCTO) .And. M->EF_VENCTO >= aCols[n][8]", USADO, "D",, "V" ,,,} )
	endif

	Aadd( aHeader, { STR0153, "EF_CPFCNPJ"	, "@!", TamSx3("EF_CPFCNPJ")[1], 0, "aCols[n][13]!='Sim' .And. (Empty(M->EF_CPFCNPJ) .OR. Cgc(M->EF_CPFCNPJ))"	, USADO, "C",, "V" ,,,} )
	Aadd( aHeader, { STR0154, "EF_TEL"		, "@!", TamSx3("EF_TEL")[1] , 0, "aCols[n][13]!='Sim'"	, USADO, "C",, "V" ,,,} )
	Aadd( aHeader, { STR0155, "EF_HIST"		, "@!", TamSx3("EF_HIST")[1], 0,"aCols[n][13]!='Sim'", USADO, "C",, "V" ,,,} )
	Aadd( aHeader, { STR0157, "EF_CHCAD"	, "", 3, 0, ".F.", USADO, "C",, "V" ,,,} )
Else
	// Monta o cabecalho com validacao.
	Aadd( aHeader, { STR0145, "EF_BANCO"	, "@!", TamSx3("EF_BANCO")[1]	, 0, "aCols[n][13]!='Sim' .And. NaoVazio(M->EF_BANCO)"	 , USADO, "C",, "V" ,,, /*"Empty(aCols[n][1])"*/} )
	Aadd( aHeader, { STR0146, "EF_AGENCIA"	, "@!", TamSx3("EF_AGENCIA")[1], 0, "aCols[n][13]!='Sim' .And. NaoVazio(M->EF_AGENCIA)", USADO, "C",, "V" ,,, /*"Empty(aCols[n][2])"*/} )
	Aadd( aHeader, { STR0147, "EF_CONTA" 	, "@!", TamSx3("EF_CONTA")[1], 0, "aCols[n][13]!='Sim' .And. NaoVazio(M->EF_CONTA)"	 , USADO, "C",, "V" ,,, /*"Empty(aCols[n][3])"*/} )
	Aadd( aHeader, { STR0148, "EF_NUM"		, "@!", TamSx3("EF_NUM")[1], 0, "aCols[n][13]!='Sim' .And. NaoVazio(M->EF_NUM)"		 , USADO, "C",, "V" ,,, } )
	Aadd( aHeader, { STR0163, "EF_VALOR"	, "@E 999,999,999.99"	, 15, 2, "aCols[n][13]!='Sim' .And. Fa070TotCheq(1) .And. Positivo(M->EF_VALOR) .And. NaoVazio(M->EF_VALOR)", USADO, "N",, "V" ,,,} )
	If lPaisBRA
		Aadd( aHeader, { STR0149, "EF_VALORBX"	, "@E 999,999,999.99"	, 15, 2, "Fa070TotCheq(2) .And. Positivo(M->EF_VALORBX) .And. NaoVazio(M->EF_VALORBX) .And. M->EF_VALORBX <= aCols[n][5]", USADO, "N",, "V" ,,,} )
	Endif
	Aadd( aHeader, { STR0150, "EF_EMITENT"	, "@!", TamSx3("EF_EMITENT")[1], 0, "aCols[n][13]!='Sim' .And. NaoVazio(M->EF_EMITENT)"	, USADO, "C",, "V" ,,,} )
	Aadd( aHeader, { STR0151, "EF_DATA"		, "@!", 8, 0, "aCols[n][13]!='Sim' .And. NaoVazio(M->EF_DATA) .And. M->EF_DATA <= aCols[n][9]"	, USADO, "D",, "V" ,,,} )

	If FunName() == "FINA220"
		Aadd( aHeader, { STR0152, "EF_VENCTO"	, "@!", 8, 0, "aCols[n][13]!='Sim' .And. NaoVazio(M->EF_VENCTO) .And. M->EF_VENCTO >= aCols[n][8] .and. Fn220ChP()", USADO, "D",, "V" ,,,} )
	else
	Aadd( aHeader, { STR0152, "EF_VENCTO"	, "@!", 8, 0, "aCols[n][13]!='Sim' .And. NaoVazio(M->EF_VENCTO) .And. M->EF_VENCTO >= aCols[n][8]", USADO, "D",, "V" ,,,} )
	endif

	Aadd( aHeader, { STR0153, "EF_CPFCNPJ"	, "@!", TamSx3("EF_CPFCNPJ")[1], 0, "aCols[n][13]!='Sim' .And. (Empty(M->EF_CPFCNPJ) .OR. Cgc(M->EF_CPFCNPJ))"	, USADO, "C",, "V" ,,,} )
	Aadd( aHeader, { STR0154, "EF_TEL"		, "@!", TamSx3("EF_TEL")[1] , 0, "aCols[n][13]!='Sim'"	, USADO, "C",, "V" ,,,} )
	Aadd( aHeader, { STR0155, "EF_HIST"		, "@!", TamSx3("EF_HIST")[1], 0, "aCols[n][13]!='Sim'"	, USADO, "C",, "V" ,,,} )
	Aadd( aHeader, { STR0157, "EF_CHCAD"	, "", 3, 0, ".F.", USADO, "C",, "V" } )
Endif
	Aadd( aHeader, { "Sequencia",            "EF_SEQUENC"	, "", TamSx3("EF_SEQUENC")[1], 0, ".F.", USADO, "C",, "V" ,,,} )

If lUSADOBX
	Aadd( aHeader, { "Usado em outra baixa", "EF_USADOBX"	, "", 3, 0, ".F.", USADO, "C",, "V" ,,,} )
Endif

If (Type("aCols") == "A" .And. Empty(aCols)) .Or. Type("aCols") != "A"
	aCols := {}
	Aadd(aCols,Array(Len(aHeader)+1))
	Aeval(aHeader, { |e,nX|	If(e[8] == "D", aCols[1][nX] := dData,;
									If(e[8] == "N", aCols[1][nX] := 0    ,;
									If(e[8] == "C" .And. !Empty(e[1])    ,;
								   	aCols[1][nX] := Space(e[4])       ,;
										aCols[1][nX] := "")))})
	If nChamada == 1 .Or. nChamada == 3 // 1 = Baixa de titulos ou 3 = Alteracao pelo FINA040
		dbSelectArea("SEF")
		DbSetOrder(3)
		MsSeek(xFilial("SEF")+SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO))
	Endif
	If (nChamada == 1 .Or. nChamada == 3) .And. !Eof()
		aCols := {}
			While SEF->(!Eof()) .And. xFilial("SEF")==SEF->EF_FILIAL .And. SEF->EF_CART == "R" .And.;
				SEF->(EF_PREFIXO+EF_TITULO+EF_PARCELA+EF_TIPO) == SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO)

				If lPaisBRA
					Aadd(aCols, {	SEF->EF_BANCO,;
									 	SEF->EF_AGENCIA,;
									 	SEF->EF_CONTA,;
									 	SEF->EF_NUM,;
									 	SEF->EF_VALOR,;
									 	SEF->EF_VALORBX,;
									 	SEF->EF_EMITENT,;
									 	SEF->EF_DATA,;
									 	SEF->EF_VENCTO,;
									 	SEF->EF_CPFCNPJ,;
									 	SEF->EF_TEL,;
									 	SEF->EF_HIST,;
									 	'Sim',;
									 	SEF->EF_SEQUENC})

				Else
					Aadd(aCols, {	SEF->EF_BANCO,;
							 	SEF->EF_AGENCIA,;
							 	SEF->EF_CONTA,;
							 	SEF->EF_NUM,;
							 	SEF->EF_VALOR,;
							 	SEF->EF_EMITENT,;
							 	SEF->EF_DATA,;
							 	SEF->EF_VENCTO,;
							 	SEF->EF_CPFCNPJ,;
							 	SEF->EF_TEL,;
							 	SEF->EF_HIST,;
							 	'Sim',;
							 	SEF->EF_SEQUENC})
				Endif

			// Totalizadores de cheques cadastrados
			nVlrNomCheq += SEF->EF_VALOR
			If lPaisBRA
				nVlRefBxChq += SEF->EF_VALORBX
			Endif
			nQtdCheq 	++

			// Grava o identificador de que o cheque ja foi utilizado na baixa, devido as
			// baixas parciais, pois nas baixas futuras esses cheques nao podem mais serem utilizados
			// na geracao do movimento bancario
			If lUSADOBX
				Aadd(aCols[Len(aCols)], If(SEF->EF_USADOBX == "S", STR0246, STR0245) ) //"sim","não"
			Endif
			If Alltrim(SE1->E1_ORIGEM) == "FINA460" .And. cFunname == "FINA040"
				Aadd(aCols[Len(aCols)], .f.)
			Else
				Aadd(aCols[Len(aCols)], IF( lUSADOBX, ( SEF->EF_USADOBX == 'S' ), .f.) )
			EndIf

			SEF->(DbSkip())
		End
	Else
		SA1->(dbSetOrder(1))
		SA1->(MsSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA))
		aCols[1][1]  := Space(TamSx3("EF_BANCO")[1])
		aCols[1][2]  := Space(TamSx3("EF_AGENCIA")[1])
		aCols[1][3]  := Space(TamSx3("EF_CONTA")[1])
		aCols[1][5]  := nValRec
      If cPaisLoc =="BRA"
			aCols[1][6]  := nValRec
			aCols[1][7]  := SA1->A1_NOME
			aCols[1][10] := SA1->A1_CGC
			aCols[1][11] := Pad(AllTrim(SA1->A1_DDD)+" "+AllTrim(SA1->A1_TEL),TamSx3("EF_TEL")[1])
		Else
			aCols[1][6]  := SA1->A1_NOME
			aCols[1][9] := SA1->A1_CGC
			aCols[1][11] := Pad(AllTrim(SA1->A1_DDD)+" "+AllTrim(SA1->A1_TEL),TamSx3("EF_TEL")[1])
		EndIf
		aCols[1][Len(aCols[1])] := .F. // Indica que a linha nao esta deletada
		IF ExistBlock("F070DCHQ")
			If lPaisBRA
				aCpoaCols:={	"EF_BANCO",;
								 	"EF_AGENCIA",;
								 	"EF_CONTA",;
								 	"EF_NUM",;
								 	"EF_VALOR",;
								 	"EF_VALORBX",;
								 	"EF_EMITENT",;
								 	"EF_DATA",;
								 	"EF_VENCTO",;
								 	"EF_CPFCNPJ",;
								 	"EF_TEL",;
								 	"EF_HIST"}
			Else
				aCpoaCols:={	"EF_BANCO",;
								 	"EF_AGENCIA",;
								 	"EF_CONTA",;
								 	"EF_NUM",;
								 	"EF_VALOR",;
								 	"EF_EMITENT",;
								 	"EF_DATA",;
								 	"EF_VENCTO",;
								 	"EF_CPFCNPJ",;
								 	"EF_TEL",;
								 	"EF_HIST"}
			Endif
			aCols := ExecBlock("F070DCHQ",.f.,.f.,{aCpoaCols,aCols})
	    EndIf
	Endif
	SEF->(RestArea(aAreaSef))
	RestArea(aArea)
Endif

If (cFunname == "FINA040" .Or. (cFunname == "FINA740" .And. !Empty(aCols) .And. Type("M->E1_CLIENTE") <> "U")) .and. cPaisLoc =="BRA" .and. nChamada <> 3
	SA1->(dbSetOrder(1))
	SA1->(MsSeek(xFilial("SA1")+M->E1_CLIENTE+M->E1_LOJA))
	aCols[1][7]  := SA1->A1_NOME
	aCols[1][10] := SA1->A1_CGC
	aCols[1][11] := Pad(AllTrim(SA1->A1_DDD)+" "+AllTrim(SA1->A1_TEL),TamSx3("EF_TEL")[1])
Endif

If lTela

	aSize := MSADVSIZE()
	DEFINE MSDIALOG oDlg TITLE STR0156 From aSize[7],0 To aSize[6],aSize[5] OF oMainWnd PIXEL   //"Cheques recebidos"
	oDlg:lMaximized := .T.

	oPanel := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,15,15,.T.,.T. )
	oPanel:Align := CONTROL_ALIGN_BOTTOM

	@ 002,  10 SAY STR0183 	OF oPanel PIXEL // "Qtde. Cheques "
	@ 002,  50 SAY oQtdCheq VAR nQtdCheq PICTURE "@E 999,999" PIXEL OF oPanel FONT oFnt COLOR CLR_HBLUE
	@ 002,  90 SAY STR0184 	OF oPanel 	PIXEL // "Valor nominal dos cheques "
	@ 002, 160 SAY oVlrNomCheq VAR nVlrNomCheq PICTURE  "@E 999,999,999,999.99" PIXEL OF oPanel FONT oFnt COLOR CLR_HBLUE
	@ 002, 230 SAY STR0185	OF oPanel PIXEL // "Valor ref. a baixa dos cheques "
	@ 002, 310 SAY oVlRefBxChq VAR nVlRefBxChq PICTURE  "@E 999,999,999,999.99" PIXEL OF oPanel FONT oFnt COLOR CLR_HBLUE

	oGet := MsNewGetDados():New(16, 0, 080, 396,GD_INSERT + GD_UPDATE + GD_DELETE ,"CadCheqLOk(.T.)","CA070TudOk",,Iif(lPaisBRA,{"EF_BANCO","EF_AGENCIA","EF_CONTA","EF_NUM","EF_VALOR","EF_VALORBX","EF_EMITENT","EF_DATA","EF_TEL","EF_CPFCNPJ","EF_VENCTO","EF_HIST"},{"EF_BANCO","EF_AGENCIA","EF_CONTA","EF_NUM","EF_VALOR","EF_EMITENT","EF_DATA","EF_TEL","EF_CPFCNPJ","EF_VENCTO","EF_HIST"}),, 999,,,"Fa070ChqDel",,@aHeader,@aCols,, )

	oGet:oBrowse:Align := CONTROL_ALIGN_ALLCLIENT

	FA070AtuTT() //Atualiza totais

	If lPanelFin
		ACTIVATE MSDIALOG oDlg ON INIT FaMyBar(oDlg,;
															 {||nOpca:=1,If(oGet:TudoOk(),oDlg:End(),nOpca := 0)},;
															 {||nOpca:=0,(aCols := {},oDlg:End())},aBut070)
	Else
		If Len(aCols) > 0
			ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,;
																 {||nOpca:=1,If(oGet:TudoOk(),oDlg:End(),nOpca := 0)},;
																 {||nOpca:=0,(aCols := {},oDlg:End())},,aBut070)
		Else
			If Len(aCols) > 0
				ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,;
																	 {||nOpca:=1,If(oGet:TudoOk(),oDlg:End(),nOpca := 0)},;
																	 {||nOpca:=0,(aCols := {},oDlg:End())},,aBut070)
			Else
				ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,;
																	 {||nOpca:=1,If(oGet:TudoOk(),oDlg:End(),nOpca := 0)},;
																	 {||nOpca:=0,(aCols := {},oDlg:End())},,)
			EndIf
		EndIf
	Endif
aCols      := aClone(oGet:aCols)
EndIf

aHeader	:= aClone(aOldHead)

If lColsSEF
	aColsSEF:= aClone(aCols)
	aCols := aClone(aOldCols)
EndIf

If aOldRotina != Nil
	aRotina := aClone(aOldRotina)
Endif
RestArea(aArea)

SetKey(VK_F4,{|| If( !SE1->E1_TIPO $ MV_CRNEG,CadCheqCR(cBanco,cAgencia,cConta,nValRec,dData,1),.F.)})

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³CadCheqLOkºAutor  ³Claudio D. de Souza º Data ³  16/04/02   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valida a linha da GetDados dos Cheques recebidos           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Fina070                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function CadCheqLOk(lLin)
Local lRet := .T.
Local nX
Local aAreaSef
Local lResp := .T.
Local nPos := 0

nSomaCheq := 0

Default lLin :=.T.
If !aTail(aCols[n])
	// Valida todas as colunas da GetDados
	For nX := 1 To Len(aCols[n])-1
		If Empty(aCols[n][nX]) .And. !Empty(aHeader[nX][1]) .And. !AllTrim(aHeader[nX][2])$"EF_HIST/EF_TEL/EF_CHCAD/EF_CPFCNPJ/EF_USADOBX/EF_SEQUENC"
			lRet := .F.
			HELP(" ",1,"NVAZIO",,aHeader[nX][1],4,0)
			Exit
		Endif
		If cPaisLoc=="BRA" .And. aCols[n][5] < aCols[n][6] // Valor nominal menor que o valor ref. a baixa
			IW_MsgBox(STR0170,STR0144,"STOP")  //"Valor ref. a baixa não pode ser maior que o valor nominal"
			lRet := .F.
			Exit
		Endif
	Next
Endif
// Verifica se o cheque nao esta cadastrado tanto em aCols quanto no SEF
If lRet
	nInd := aScan(aCols, {|e| e[1]+e[2]+e[3]+e[4] == aCols[n][1]+aCols[n][2]+aCols[n][3]+aCols[n][4] })
	If nInd > 0 .And. nInd != n .And. !aTail(aCols[n])
		Help ( " ", 1, "CHEQJAEXIST" )
		lRet := .F.
	Endif
	DbSelectArea("SEF")
	aAreaSef := SEF->(GetArea())
	DbSetOrder(6)
	If lRet .And. MsSeek(xFilial("SEF")+aCols[n][1]+aCols[n][2]+aCols[n][3]+aCols[n][4]+SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO))
		Help ( " ", 1, "CHEQJAEXIST" )
		lRet := .F.
	Endif
	If cPaisLoc=="BRA" .And. lRet .And.  aCols[n][5]< F070TOTCH(aCols[n][1],aCols[n][2],aCols[n][3],aCols[n][4],iif(cPaisLoc == "BRA",aCols[n][6],0), If(!Empty(SE1->E1_CLIENTE), SE1->E1_CLIENTE, M->E1_CLIENTE)) .and. "MV_CMC7FIN" == "S"
		Help ( " ", 1, "CHEQJAEXIST" )
		lRet := .F.
	EndIf
	SEF->(RestArea(aAreaSef))
Endif
If lRet
	If Type("aCols") == "A" // Soma os cheques
		nSomaCheq := 0
		nVlrNomCheq := 0
		nQtdCheq		:= 0
		nVlRefBxChq	:= 0
		nPos := Ascan(aHeader, {|x| x[2] == "EF_USADOBX" })
		For nX := 1 To Len(aCols)
			if (Len(aCols[nX]) > 15) .and. (aCols[nX][nPos] = STR0246)
			  aCols[nX][Len(aHeader)+1] := .T. // Se o cheque foi usado mantem deletado.
			endif
			If !aTail(aCols[nX]) .And. (Len(aCols[nX]) < 16 .Or. aCols[nX][nPos] != STR0246)
				nVlrNomCheq += aCols[nX][5]
                If cPaisLoc == "BRA"
					nSomaCheq 	+= aCols[nX][6]
					nVlRefBxChq += aCols[nX][6]
				EndIf
				nQtdCheq 	++
			Endif
		Next

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ponto de entrada que permite ao usuario somente validar o total dos cheques no botao OK ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	    If ExistBlock("F070VCHL") .and. lLin
	       lResp := ExecBlock("F070VCHL",.F.,.F.)
	    Endif
	    If lResp
		   // Se o total dos cheques nao conferir com o total baixado, nao permite a inclusao
		   If !GdDeleted() .And. nSomaCheq > 0
		      If Type("nValRec")=="N" .And. Str(nSomaCheq,17,2) > Str(nValRec,17,2)
			     Help ( " ", 1, "CHEQBXNBAT" )
				 lRet := .F.
			  Endif
  		   Endif
  		Endif

  	Endif
Endif
If lRet
	If Type("oVlrNomCheq") == "O"
		oVlrNomCheq:Refresh()
	Endif
	If Type("oQtdCheq") == "O"
		oQtdCheq:Refresh()
	Endif
	If Type("oVlRefBxChq") == "O"
		oVlRefBxChq:Refresh()
	Endif
Endif

If  lRet .And. ExistBlock("F070CLOK")
	lRet := ExecBlock("F070CLOK",.F.,.F.)
Endif

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³GravaChqCRºAutor  ³Claudio D. de Souza º Data ³  18/04/02   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Grava cheque no SEF a partir de aCols na carteira a receberº±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Fina040/Fina070                                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function GravaChqCR(cSeqBaixa,cOrigem,aColsSEF,aSeqSe5,lBaixou,aFormPg)

Local nX			:= 0
Local aArea		:= GetArea()
Local aAreaSef	:= SEF->(GetArea())
Local aOldCols	:= {}
Local lPaisBRA	:= (cPaisLoc == "BRA")
Local lRMClass	:= GetNewPar("MV_RMCLASS", .F.)
Local lSaldoChq	:= GetMv("MV_SLDBXCR") == "C"

DEFAULT cSeqBaixa := ""
DEFAULT cOrigem 	:= ""
DEFAULT aSeqSe5   := {}
DEFAULT lBaixou 	:= .F.
DEFAULT aFormPg	:= {}

If aColsSEF <> Nil
	aOldCols := If(Type("aCols")=="A",aClone(aCols),{})
	If ( Type("aColsSEF") == "A" .And. Len(aColsSEF) > 0 )
		aCols:= aClone(aColsSEF)
	Else
		aCols:= {}
	EndIf
EndIf

//Se os cheques foram incluídos no FINA040 e o usuário não clicar no botão de cheque na hora da baixa,
//então será carregado o aCols com os cheques para fazer a gravação da sequencia da baixa, conforme os
//movimentos gerados no SE5.
If lBaixou .And. Empty(aColsSEF) .And. Type("cMotBx") == "C" .And. ChqMotBx(cMotBx)
	CadCheqCR(Nil,Nil,Nil,Nil,Nil,1,Nil,.F.)
EndIf

If Type("aCols") == "A"
	DbSelectArea("SEF")
	DbSetOrder(6)
	For nX := 1 To Len(aCols)
		// Se o cheque nao estiver deletado, os dados forem validos e nao existir no SEF
		If(VALTYPE(aCols[nX][Len(aCols[1])]) == 'L') .and.	!aCols[nX][Len(aCols[1])] .And.;
			!Empty(aCols[nX][1])			.And.;
			!Empty(aCols[nX][2])			.And.;
			!Empty(aCols[nX][3])			.And.;
			!Empty(aCols[nX][4])			.And.;
			!Empty(aCols[nX][5])			.And.;
			!Empty(aCols[nX][6])			.And.;
			!Empty(aCols[nX][7])			.And.;
			!Empty(aCols[nX][8])			.And.;
			!Empty(aCols[nX][9])
	  		If !MsSeek(xFilial("SEF")+"R"+aCols[nX][1]+aCols[nX][2]+aCols[nX][3]+aCols[nX][4]+SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO))
		  		RecLock("SEF",.T.)
		  		SEF->EF_FILIAL		:= xFilial("SEF")
		  		SEF->EF_BANCO		:= aCols[nX][1]
		  		SEF->EF_AGENCIA	:= aCols[nX][2]
		  		SEF->EF_CONTA		:= aCols[nX][3]
		  		SEF->EF_NUM			:= aCols[nX][4]
		  		SEF->EF_VALOR		:= aCols[nX][5]
				If lPaisBRA
			  		SEF->EF_VALORBX	:= aCols[nX][6]
			  		SEF->EF_EMITENT	:= aCols[nX][7]
			  		SEF->EF_DATA		:= aCols[nX][8]
			  		SEF->EF_VENCTO		:= aCols[nX][9]
			  		SEF->EF_CPFCNPJ	:= aCols[nX][10]
			  		SEF->EF_TEL			:= aCols[nX][11]
			  		SEF->EF_HIST		:= aCols[nX][12]
				Else
			  		SEF->EF_EMITENT	:= aCols[nX][6]
			  		SEF->EF_DATA		:= aCols[nX][7]
			  		SEF->EF_VENCTO		:= aCols[nX][8]
			  		SEF->EF_CPFCNPJ	:= aCols[nX][9]
			  		SEF->EF_TEL			:= aCols[nX][10]
			  		SEF->EF_HIST		:= aCols[nX][11]

			 	Endif
				SEF->EF_CLIENTE	:= SE1->E1_CLIENTE
				SEF->EF_LOJACLI	:= SE1->E1_LOJA
		  		SEF->EF_PREFIXO	:= SE1->E1_PREFIXO
				SEF->EF_TITULO		:= SE1->E1_NUM
				SEF->EF_PARCELA	:= SE1->E1_PARCELA
				SEF->EF_TIPO		:= SE1->E1_TIPO
				If lSaldoChq .And. Len(aSeqSe5) > 0
					SEF->EF_SEQUENC := aSeqSe5[nX]
				Else
					SEF->EF_SEQUENC := cSeqBaixa
				Endif
				SEF->EF_CART		:= "R"
				SEF->EF_ORIGEM		:= cOrigem
				SEF->EF_FILORIG		:= cFilAnt
				// Grava o identificador de que o cheque ja foi utilizado na baixa, devido as
				// baixas parciais, pois nas baixas futuras esses cheques nao podem mais serem utilizados
				// na geracao do movimento bancario
				If cOrigem != "FINA040"
					SEF->EF_USADOBX := "S"
				Endif

				If lRMClass .and. FunName() == "FINA220"
					SEF->EF_LTCXA  := cLoteCx
					SEF->EF_NOPER  := nTrans
					SEF->EF_TITULO := SEF->EF_NUM
				EndIF
				SEF->(MsUnlock())
			Else
				RecLock("SEF",.F.)
				//Grava os valores alteraveis
				SEF->EF_VALOR	:= aCols[nX][5]
				If lPaisBRA
			  		SEF->EF_VALORBX	:= aCols[nX][6]
			  		SEF->EF_DATA	:= aCols[nX][8]
			  		SEF->EF_VENCTO	:= aCols[nX][9]
			  		SEF->EF_HIST	:= aCols[nX][12]
				Else
			  		SEF->EF_DATA	:= aCols[nX][7]
					SEF->EF_VENCTO	:= aCols[nX][8]
			  		SEF->EF_HIST	:= aCols[nX][11]

			 	Endif
		  		If lSaldoChq .And. Len(aSeqSe5) > 0 .And. aSeqSe5[nX] != Replicate("0",TamSX3("E5_SEQ")[1])
					SEF->EF_SEQUENC := aSeqSe5[nX]
				Endif
				// Grava o identificador de que o cheque ja foi utilizado na baixa, devido as
				// baixas parciais, pois nas baixas futuras esses cheques nao podem mais serem utilizados
				// na geracao do movimento bancario
				If cOrigem != "FINA040" .And. IIF(lPaisBRA,aCols[nX][15] == STR0245,aCols[nX][14] == STR0245)
					SEF->EF_USADOBX := "S"
				Endif
				SEF->(MsUnlock())
			Endif
			aadd(aFormPg	,{	"CH"					,;	//Forma de Pagamento
								aCols[nX][5]			,;	//Valor
								Dtos(   aCols[nX][9])	,;	//Data do Pagamento
								aCols[nX][4]			,;	//Numero do Cheque
								aCols[nX][1]			,;	//Banco
								aCols[nX][2]			,;	//Agencia
								aCols[nX][3]			,;	//Conta Corrente
								aCols[nX][7]			})	//Nome do Terceiro
		EndIf
	Next
	SEF->(RestArea(aAreaSef))
	RestArea(aArea)
Endif

If aColsSEF <> Nil
	aCols    := aClone(aOldCols)
	aColsSEF := {}
Else
	aCols := {}
EndIf

Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ F070CMC7 ³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 28/08/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Programa destinado a efetuar a leitura de cheques a partir ³±±
±±³          ³ do equipamento CMC7 e alimentar a rotina de baixa          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F070CMC7(oGet,lGetDados,EF_BANCO,EF_AGENCIA,EF_CONTA,EF_NUM,EF_VALOR,;
						EF_VALORBX,EF_EMITENT,EF_DATA,EF_VENCTO,EF_CPFCNPJ,EF_TEL,EF_HIST)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaracao de Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local nDiasVcto := 0
Local lContinua	:= .T.
Local nNumCH		:= 1			// Numeral do cheque (qual cheque esta sendo lido. Se primeiro, segundo etc)
Local aCMC7			:= {}			//Array que guardara os dados do cheque vindos da leitora
Local aCmc7Tc 		:= {}			// Armazena o retorno da funcao F460Cmc7Tc
Local nX			:= 2            // Variavel para comparar com o tamanho do aCols
Local lContLeit		:= .T.			// Verifica se a leitura (teclado) acabou ou nao
Local nPosBanco		:= aScan( aHeader,{|z| Alltrim(Upper(z[2]))=="EF_BANCO" })		// Captura no aHeader o campo do banco
Local nPosAgen		:= aScan( aHeader,{|z| Alltrim(Upper(z[2]))=="EF_AGENCIA" })	// Captura no aHeader o campo da agencia
Local nPosConta		:= aScan( aHeader,{|z| Alltrim(Upper(z[2]))=="EF_CONTA" }) 	// Captura no aHeader o campo da conta
Local nPosCheque	:= aScan( aHeader,{|z| Alltrim(Upper(z[2]))=="EF_NUM" })		// Captura no aHeader o campo do nro. do cheque
Local nPosValor 	:= aScan( aHeader,{|z| Alltrim(Upper(z[2]))=="EF_VALOR" })	 	// Captura no aHeader o campo do valor
Local nPosValorBx 	:= aScan( aHeader,{|z| Alltrim(Upper(z[2]))=="EF_VALORBX" })	// Captura no aHeader o campo do valor da baixa
Local nPosEmitente	:= aScan( aHeader,{|z| Alltrim(Upper(z[2]))=="EF_EMITENT" })	// Captura no aHeader o campo do emitente
Local nPosData		:= aScan( aHeader,{|z| Alltrim(Upper(z[2]))=="EF_DATA"	 })		// Captura no aHeader o campo da data
Local nPosVencto	:= aScan( aHeader,{|z| Alltrim(Upper(z[2]))=="EF_VENCTO" })	// Captura no aHeader o campo do vencimento
Local nPosCpfCnpj 	:= aScan( aHeader,{|z| Alltrim(Upper(z[2]))=="EF_CPFCNPJ" })	// Captura no aHeader o campo do cpf/cnpj
Local nPosTel		:= aScan( aHeader,{|z| Alltrim(Upper(z[2]))=="EF_TEL" })		// Captura no aHeader o campo do telefone
Local nPosHist	 	:= aScan( aHeader,{|z| Alltrim(Upper(z[2]))=="EF_HIST" })		// Captura no aHeader o campo do historico
Local nPosChCad 	:= aScan( aHeader,{|z| Alltrim(Upper(z[2]))=="EF_CHCAD" })		// Captura no aHeader o campo do cheque
Local nPosUsado	:= aScan( aHeader,{|z| Alltrim(Upper(z[2]))=="EF_USADOBX" })		// Captura no aHeader o campo do Usado na baixa
Local nPosSeq		:= aScan( aHeader,{|z| Alltrim(Upper(z[2]))=="EF_SEQUENC" })
Local lPrimeiro 	:= .T.		// Controla se é o primeiro cheque
Local aCpaCols
Local lPaisBRA    := (cPaisLoc == "BRA")
Local lF070VENCT := ExistBlock("F070VENCTO")

Private nHdlCMC7  := ReadCMC7()[1]		// Abertura da porta
Private lUsaCmC7	 := .T.		// Necessario para funcionamento das funcoes de leitura
DEFAULT lGetDados := .T.

M->EF_DATA 		:= If(EMPTY(EF_DATA)  ,ddatabase,EF_DATA)
M->EF_VENCTO	:= If(EMPTY(EF_VENCTO),ddatabase,EF_VENCTO)

If Len(aCols) > 1 .or. (Len(aCols)>0 .And. AllTrim(aCols[1,nPosCheque]) <> "")
	lPrimeiro := .F.
EndIf

If nHdlCMC7 < 0 // Publica, alterada pela OpenCmc7
	lContinua := .F.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Leitura do cheque utilizando leitor via teclado.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    While lContLeit
		aCmc7Tc := {}
		aCmc7Tc	:= F460Cmc7Tc()
		If Len( aCmc7Tc ) > 0
			M->EF_BANCO		:= aCmc7Tc[1]
			M->EF_AGENCIA	:= aCmc7Tc[3]
			M->EF_CONTA		:= aCmc7Tc[4]
			M->EF_NUM		:= aCmc7Tc[2]

			If !lPrimeiro
				Aadd( aCols, Array(Len(aHeader)+1) )
				aCols[Len(aCols),nPosChCad] 	:= STR0245			// Cheque Cadastrado
				aCols[Len(aCols),8] 			:= dDataBase			//
				aCols[Len(aCols),9] 			:= dDataBase			//
				n := Len(aCols)
			EndIf
			If aCols != Nil
				n := Len(aCols)
			EndIf
			If lGetDados .AND. F070GetChq( aCmc7Tc,		@EF_BANCO,		@EF_AGENCIA,	@EF_CONTA,		@EF_NUM,	@M->EF_DATA,;
											@M->EF_VENCTO,	@M->EF_EMITENT,	@M->EF_VALOR,	@M->EF_CPFCNPJ,	@M->EF_TEL,	@M->EF_HIST,;
											lGetDados )
				//Pesquisa se cheque ja foi lido anteriormente (Banco/Agencia/Conta/Nro.Cheque)
				If aScan(aCols,{|x| AllTrim(x[1])+AllTrim(x[2])+AllTrim(x[3])+AllTrim(x[4])== ;
					AllTrim(aCmc7Tc[1])+AllTrim(aCmc7Tc[3])+AllTrim(aCmc7Tc[4])+AllTrim(aCmc7Tc[2]) }) = 0
					// Verifica se a primeira linha está preenchida (banco, agencia, conta) e sobrescreve
					If !Empty(aCols[1][nPosBanco]) .And. !Empty(aCols[1][nPosAgen]) .And. !Empty(aCols[1][nPosConta]) .AND. lPrimeiro
						aCols[1,nPosBanco]		:= aCmc7Tc[1]		// Banco
						aCols[1,nPosAgen]		:= aCmc7Tc[3]		// Agencia
						aCols[1,nPosConta]		:= aCmc7Tc[4]		// Conta
						aCols[1,nPosCheque]		:= aCmc7Tc[2]		// Cheque
						aCols[1,nPosValor]		:= M->EF_VALOR		// Valor
						If lPaisBRA
							aCols[1,nPosValorBx]		:= M->EF_VALOR		// Valor da Baixa
						Endif
						aCols[1,nPosEmitente]	:= M->EF_EMITENT	// Emitente
						aCols[1,nPosData]		:= M->EF_DATA		// Data
						aCols[1,nPosVencto]		:= M->EF_VENCTO		// Vencimento
						aCols[1,nPosCpfCnpj]	:= M->EF_CPFCNPJ	// CPF ou CNPJ
						aCols[1,nPosTel] 		:= M->EF_TEL		// Telefone
						aCols[1,nPosHist]		:= M->EF_HIST		// Historico
						aCols[1,nPosChCad] 		:= STR0245			// Cheque Cadastrado
						aCols[1,nPosSeq]			:= Nil 				//
						aCols[1,nPosUsado]			:= STR0245				//
						aCols[1,Len(aHeader)+1]	:= .F.				// Garante que a linha e' valida
						lPrimeiro 				:= .F.				// Verifica se o cheque e' o primeiro
					Else
						aCols[Len(aCols),nPosBanco]		:= aCmc7Tc[1]		// Banco
						aCols[Len(aCols),nPosAgen]		:= aCmc7Tc[3]		// Agencia
						aCols[Len(aCols),nPosConta]		:= aCmc7Tc[4]		// Conta
						aCols[Len(aCols),nPosCheque]	:= aCmc7Tc[2]		// Cheque
						aCols[Len(aCols),nPosValor]		:= M->EF_VALOR		// Valor
						If lPaisBRA
							aCols[Len(aCols),nPosValorBx]	:= M->EF_VALOR		// Valor da Baixa
						Endif
						aCols[Len(aCols),nPosEmitente]	:= M->EF_EMITENT	// Emitente
						aCols[Len(aCols),nPosData]		:= M->EF_DATA		// Data
						aCols[Len(aCols),nPosVencto]	:= M->EF_VENCTO		// Vencimento
						aCols[Len(aCols),nPosCpfCnpj]	:= M->EF_CPFCNPJ	// CPF ou CNPJ
						aCols[Len(aCols),nPosTel] 		:= M->EF_TEL		// Telefone
						aCols[Len(aCols),nPosHist]		:= M->EF_HIST		// Historico
						aCols[Len(aCols),nPosChCad] 	:= STR0245			// Cheque Cadastrado
						aCols[Len(aCols),nPosSeq]			:= Nil 				//
						aCols[Len(aCols),nPosUsado]			:= STR0245				//
						aCols[Len(aCols),Len(aHeader)+1]			:= .F. 				//
						lPrimeiro 				:= .F.
					Endif
				Else
					aDel(aCols,Len(aCols))
        			aSize(aCols,Len(aCols)-1)
	        		IW_MsgBox(STR0158,STR0144,"STOP")	//""Cheque já Incluído ! Será Desprezado.""###"Atenção"

	        	Endif
	        Else
				If !lPrimeiro
					aCpaCols := aClone(aCols)
					aCols	:= Array(Len(aCpaCols)-1)
					ACOPY( aCpaCols, aCols , 1, Len(aCpaCols)-1,1)
					n := Len(aCols)
				EndIf
	        Endif

	    	If !IW_MsgBox(STR0159,STR0156,"YESNO")	//"Deseja incluir mais cheques?"###"Cheques recebidos"
	    		lContLeit := .F.
	    	Endif

	    	If lF070VENCT
				nDiasVcto := ExecBlock("F070VENCTO", .F., .F. )
			Else
				nDiasVcto := 30
			Endif
			M->EF_VENCTO += nDiasVcto

		ElseIf !IW_MsgBox(STR0159,STR0156,"YESNO")	//"Deseja incluir mais cheques?"###"Cheques recebidos"
    		lContLeit := .F.
    	Endif
		Loop
	Enddo
Endif

If ExistBlock("F070CMC7") 	// Se existir o PE F070CMC7, a leitura dos dados
									// ficara sob responsabilidade deste PE.
	ExecBlock("F070CMC7", .F., .F. )
	Return
Endif

While lContinua
	aCmc7 		:= {}
	aCmc7 		:= LjLeCmc7(nNumCH) // Exemplo: { "745", "900201 ", "0030", "30049113", "018" }
	M->EF_VALOR	:= 0
	If Len(aCmc7) > 0
		M->EF_BANCO		:= aCmc7[1]
		M->EF_AGENCIA	:= aCmc7[3]
		M->EF_CONTA		:= aCmc7[4]
		M->EF_NUM		:= aCmc7[2]
		If lGetDados .And. F070GetChq(aCmC7,@EF_BANCO,@EF_AGENCIA,@EF_CONTA,@EF_NUM,@M->EF_DATA,@M->EF_VENCTO,@M->EF_EMITENT,@M->EF_VALOR,@M->EF_CPFCNPJ,@M->EF_TEL,@M->EF_HIST,lGetDados)
			//Pesquisa se cheque ja foi lido anteriormente (Banco/Agencia/Conta/Nro.Cheque)
			If aScan(aCols,{|x|	AllTrim(x[1])+AllTrim(x[2])+AllTrim(x[3])+AllTrim(x[4])== ;
										AllTrim(aCmc7[1])+AllTrim(aCmc7[3])+AllTrim(aCmc7[4])+AllTrim(aCmc7[2]) }) = 0 .And. !aTail(aCols[n])
				//Caso não esteja preenchido as informacoes de banco, agencia, conta e numero
				// do cheque, atualizar a linha do acols posicinado (N).
				If Empty(aCols[n][1]) .And. Empty(aCols[n][2]) .And. Empty(aCols[n][3]) .And. Empty(aCols[n][4])
				   aCols[n][01] := aCmc7[1]
				   aCols[n][02] := aCmc7[3]
				   aCols[n][03] := aCmc7[4]
				   aCols[n][04] := aCmc7[2]
				   aCols[n][05] := M->EF_VALOR
				   If cPaisLoc == "BRA"
					   aCols[n][06] := M->EF_VALOR
				   Endif
				   aCols[n][07] := M->EF_EMITENT
				   aCols[n][08] := M->EF_DATA
				   aCols[n][09] := M->EF_VENCTO
				   aCols[n][10] := M->EF_CPFCNPJ
				   aCols[n][11] := M->EF_TEL
				   aCols[n][12] := M->EF_HIST
				   aCols[n][13] := STR0245
				Else
					Aadd(aCols,{aCmc7[1],		aCmc7[3],		aCmc7[4],	aCmc7[2],		M->EF_VALOR,;
								M->EF_VALOR,	M->EF_EMITENT,	M->EF_DATA,	M->EF_VENCTO,	M->EF_CPFCNPJ,;
								M->EF_TEL,		M->EF_HIST,		STR0245,		NIL})
					AADD(aCols[Len(aCols)],.F.)	// controle de delecao
				Endif
			Else
				IW_MsgBox(STR0158,STR0144,"STOP")  //"Cheque já Incluído ! Será Desprezado."###"Atenção"
			Endif
			If !IW_MsgBox(STR0159,STR0156,"YESNO")  //"Deseja incluir mais cheques?"###"Cheques recebidos"
				Exit
			EndIf
			If lF070VENCT
				nDiasVcto := ExecBlock("F070VENCTO", .F., .F. )
			Else
				nDiasVcto := 30
			Endif
			M->EF_VENCTO += nDiasVcto
			nNumCH++
		Endif
		lContinua := lGetDados
	Else
		// Pergunta se deseja sair da leitura somente se estiver na GetDados
		IF !lGetDados .Or. IW_Msgbox(STR0160,STR0144,"YESNO")  //"Encerra leitura de Cheques ?"###"Atenção" //"Encerra leitura de Cheques ?"###"Atenção"
			Exit
		Endif
	Endif
End
If lGetDados
	n:= Len(aCols)
Endif
If ValType(oGet)=="O"
	oGet:aCols:= aclone(aCols)
	oGet:ForceRefresh()
	oGet:lNewLine := .F.
Endif

FA070AtuTT() //Atualiza totais

Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³F070GetChq³ Autor ³ Claudio D. de Souza   ³ Data ³ 28/08/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Entrada de dados do cheque   										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ F460GetChq(ExpA1,ExpD1,ExpN1)										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ aCmc7=Array contendo dados do cheque (vindos da leitora)	  ³±±
±±³          ³ EF_BANCO=Codigo do banco, por referencia						  ³±±
±±³          ³ EF_AGENCIA=Codigo da agencia, por referencia					  ³±±
±±³          ³ EF_AGENCIA=Codigo da agencia, por referencia					  ³±±
±±³          ³ EF_CONTA=Codigo da conta, por referencia					     ³±±
±±³          ³ EF_NUM=Numero do Cheque, por referencia					     ³±±
±±³          ³ EF_DATA=Data do cheque, por referencia					  		  ³±±
±±³          ³ EF_VENCTO=Vencto. do cheque, por referencia					  ³±±
±±³          ³ EF_EMITENT=Emitente do cheque, por referencia				  ³±±
±±³          ³ EF_VALOR=Valor nominal, por referencia					  		  ³±±
±±³          ³ EF_CPFCNPJ=Cpf/Cnpj do cheque, por referencia				  ³±±
±±³          ³ EF_HIST=Historico do cheque, por referencia			  		  ³±±
±±³          ³ lGetDados=.T. se estiver chamando da GetDados				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070, FINA040 e FINA191											  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function F070GetChq(aCmC7,EF_BANCO,EF_AGENCIA,EF_CONTA,EF_NUM,EF_DATA,;
									EF_VENCTO,EF_EMITENT,EF_VALOR,EF_CPFCNPJ,EF_TEL,EF_HIST,;
									lGetDados)
Local lCorrige := .F.
Local lRet := .F.
Local nOpca := 0
Local oDlg
Local aValid 	:= {}
Local aPicture := {}
Local oBanco
Local cValid

// Pequisa um determinados campo no SX3 e retorna o conteudo desejado do dicionario.
Local bSx3		:= { |cCampo,cCampoSx3|	SX3->(DbSetOrder(2)), SX3->(MsSeek(cCampo)),;
													SX3->(DbSetOrder(1)), SX3->&(cCampoSx3) }

If lGetDados .And. Type("aHeader")=="A"
	cValid := StrTran(aHeader[1][6],"aCols[n][12]!='Sim'",".T.")
	Aadd(aValid, {"Banco"	, "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"Banco"	, aHeader[1][3]})
	cValid := StrTran(aHeader[2][6],"aCols[n][12]!='Sim'",".T.")
	Aadd(aValid, {"Agencia"	, "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"Agencia"	, aHeader[2][3]})
	cValid := StrTran(aHeader[3][6],"aCols[n][12]!='Sim'",".T.")
	Aadd(aValid, {"Conta"	, "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"Conta"	, aHeader[3][3]})
	cValid := StrTran(aHeader[4][6],"aCols[n][12]!='Sim'",".T.")
	Aadd(aValid, {"Numero"	, "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"Numero"	, aHeader[4][3]})
	cValid := StrTran(aHeader[5][6],"aCols[n][13]!='Sim'",".T.")
	Aadd(aValid, {"Valor"	, "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"Valor"	, aHeader[5][3]})
	cValid := StrTran(aHeader[8][6],"aCols[n][12]!='Sim'",".T.")
	Aadd(aValid, {"Emissao"	, "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"Emissao"	, aHeader[8][3]})
	cValid := StrTran(aHeader[9][6],"aCols[n][13]!='Sim'",".T.")
	cValid := StrTran(cValid, ".And. aCols[n][9] >= aCols[n][8]","")
	Aadd(aValid, {"Vencto"	, "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"Vencto"	, aHeader[9][3]})
	cValid := StrTran(aHeader[7][6],"aCols[n][13]!='Sim'",".T.")
	Aadd(aValid, {"Emitente", "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"Emitente", aHeader[7][3]})
	cValid := StrTran(aHeader[10][6],"aCols[n][13]!='Sim'",".T.")
	Aadd(aValid, {"CPF/CNPJ", "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"CPF/CNPJ", aHeader[10][3]})
	cValid := StrTran(aHeader[12][6],"aCols[n][13]!='Sim'",".T.")
	Aadd(aValid, {"OBS"		, "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"OBS", aHeader[12][3]})
	cValid := StrTran(aHeader[11][6],"aCols[n][13]!='Sim'",".T.")
	Aadd(aValid, {"Telefone", "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"Telefone", aHeader[11][3]})
Else
	cValid := Eval(bSx3,"EF_BANCO","X3_VALID")
	Aadd(aValid, {"Banco"	, "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"Banco"	, Eval(bSx3,"EF_BANCO","X3_PICTURE")})
	cValid := Eval(bSx3,"EF_AGENCIA","X3_VALID")
	Aadd(aValid, {"Agencia"	, "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"Agencia"	, Eval(bSx3,"EF_AGENCIA","X3_PICTURE")})
	cValid := Eval(bSx3,"EF_CONTA","X3_VALID")
	Aadd(aValid, {"Conta"	, "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"Conta"	, Eval(bSx3,"EF_CONTA","X3_PICTURE")})
	cValid := Eval(bSx3,"EF_NUM","X3_VALID")
	Aadd(aValid, {"Numero"	, "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"Numero"	, Eval(bSx3,"EF_NUM","X3_PICTURE")})
	cValid := Eval(bSx3,"EF_VALOR","X3_VALID")
	Aadd(aValid, {"Valor"	, "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"Valor"	, Eval(bSx3,"EF_VALOR","X3_PICTURE")})
	cValid := Eval(bSx3,"EF_DATA","X3_VALID")
	Aadd(aValid, {"Emissao"	, "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"Emissao"	, Eval(bSx3,"EF_DATA","X3_PICTURE")})
	cValid := Eval(bSx3,"EF_VENCTO","X3_VALID")
	Aadd(aValid, {"Vencto"	, "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"Vencto"	, Eval(bSx3,"EF_VENCTO","X3_PICTURE")})
	cValid := Eval(bSx3,"EF_EMITENT","X3_VALID")
	Aadd(aValid, {"Emitente", "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"Emitente", Eval(bSx3,"EF_EMITENT","X3_PICTURE")})
	cValid := Eval(bSx3,"EF_CPFCNPJ","X3_VALID")
	Aadd(aValid, {"CPF/CNPJ", "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"CPF/CNPJ", Eval(bSx3,"EF_CPFCNPJ","X3_PICTURE")})
	cValid := Eval(bSx3,"EF_HIST","X3_VALID")
	Aadd(aValid, {"OBS", "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"OBS", Eval(bSx3,"EF_HIST","X3_PICTURE")})
	cValid := Eval(bSx3,"EF_TEL","X3_VALID")
	Aadd(aValid, {"Telefone", "{||"+If(Empty(cValid),".T.",cValid)+"}"})
	Aadd(aPicture, {"Telefone", Eval(bSx3,"EF_TEL","X3_PICTURE")})
Endif

While .T.
	nOpca := 0

	DEFINE MSDIALOG oDlg FROM	38,16 TO 347,550 TITLE  STR0161 PIXEL   //"Dados do cheque"
	@ 003, 004 TO 120, 265 OF oDlg  PIXEL
	@ 010, 011 SAY STR0145		OF oDlg PIXEL  //"Banco"
	@ 020, 011 MSGET oBanco VAR aCmc7[1]	WHEN lCorrige .Or. "?" $ aCmc7[1] ;
														VALID Eval(&(aValid[1][2])) PICTURE aPicture[1][2] SIZE 17, 11 OF oDlg PIXEL
	@ 010, 038 SAY STR0146	OF oDlg PIXEL  //"Agência"
	@ 020, 038 MSGET aCmc7[3]	WHEN lCorrige .Or. "?" $ aCmc7[3] ;
										VALID Eval(&(aValid[2][2])) PICTURE aPicture[2][2] SIZE 30, 11 OF oDlg PIXEL
	@ 010, 078 SAY STR0147		OF oDlg PIXEL   //"Conta"
	@ 020, 078 MSGET aCmc7[4]	WHEN lCorrige .Or. "?" $ aCmc7[4];
										VALID Eval(&(aValid[3][2])) PICTURE aPicture[3][2] SIZE 37, 11 OF oDlg PIXEL
	@ 010, 125 SAY STR0162	SIZE 46, 7 OF oDlg PIXEL  //"Número do Cheque"
	@ 020, 125 MSGET aCmc7[2]	WHEN lCorrige .Or. "?" $ aCmc7[2];
										VALID Eval(&(aValid[4][2])) PICTURE aPicture[4][2] SIZE 40, 11 OF oDlg PIXEL
	@ 010, 175 SAY STR0163	OF oDlg PIXEL	 //"Valor Nominal"
	@ 020, 175 MSGET M->EF_VALOR VALID Eval(&(aValid[4][2])) PICTURE aPicture[5][2] Size 60,11  OF oDlg PIXEL
	@ 035, 011 SAY STR0164 OF oDlg PIXEL	 //"Data de Emissão"
	@ 045, 011 MSGET M->EF_DATA VALID Eval(&(aValid[6][2])) PICTURE aPicture[6][2] SIZE 60,11 OF oDlg PIXEL
	@ 035, 078 SAY STR0165 OF oDlg PIXEL	 //"Data de Vencto"
	@ 045, 078 MSGET M->EF_VENCTO  VALID Eval(&(aValid[7][2])) PICTURE aPicture[7][2] SIZE 60,11 OF oDlg PIXEL

	@ 060, 011 SAY STR0150 OF oDlg PIXEL //"Emitente"
	@ 070, 011 MSGET M->EF_EMITENT SIZE 140,11 VALID Eval(&(aValid[8][2])) PICTURE aPicture[8][2] OF oDlg PIXEL

	@ 060, 175 SAY STR0166 OF oDlg PIXEL	 //"CNPJ/CPF"
	@ 070, 175 MSGET M->EF_CPFCNPJ VALID Eval(&(aValid[9][2])) PICTURE If(Empty(aPicture[9][2]),"99999999999999",aPicture[9][2])SIZE 50,11 OF oDlg PIXEL

	@ 085, 011 SAY STR0155 OF oDlg PIXEL	 //"Observações"
	@ 095, 011 MSGET M->EF_HIST VALID Eval(&(aValid[10][2])) PICTURE If(Empty(aPicture[10][2]),"@!",aPicture[10][2]) SIZE 140,11 OF oDlg PIXEL

	@ 085, 175 SAY STR0154 OF oDlg PIXEL	 //"Telefone"
	@ 095, 175 MSGET M->EF_TEL  VALID Eval(&(aValid[11][2])) PICTURE If(Empty(aPicture[11][2]),"@!",aPicture[11][2]) SIZE 50,11 OF oDlg PIXEL

	DEFINE SBUTTON FROM 130, 175 TYPE 1 ACTION (nOpca:=1,oDlg:End())ENABLE OF oDlg PIXEL
	DEFINE SBUTTON FROM 130, 205 TYPE 2 ACTION (nOpca:=2,oDlg:End())ENABLE OF oDlg PIXEL
	DEFINE SBUTTON FROM 130, 235 TYPE 5 ACTION (nOpca:=3,lCorrige:=.T.,oBanco:SetFocus()) ENABLE OF oDlg PIXEL

	ACTIVATE MSDIALOG oDlg CENTERED

	If nOpca == 1  // Confirma Dados do Cheque
		M->EF_BANCO		:= aCmc7[1]
		M->EF_AGENCIA	:= aCmc7[3]
		M->EF_CONTA		:= aCmc7[4]
		M->EF_NUM		:= aCmc7[2]
	   lRet := .T.
		lCorrige := .F.
		Exit
	ElseIf nOpca == 2 	// Finaliza inclusao de cheques
		lRet := .F.
		lCorrige := .F.
		Exit
	ElseIf nOpca == 3   // Edita dados do cheque
		aCmc7[1] := PADR(aCmc7[1],3," ")
		aCmc7[3] := PADR(aCmc7[3],4," ")
		aCmc7[4] := PADR(aCmc7[4],8," ")
		aCmc7[2] := PADR(aCmc7[2],6," ")
		lCorrige := .T.
	Endif
End
Return(lRet)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³F070Liq³ Autor ³ Wagner Xavier   ³          Data ³ 30/12/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Permite a manipulacao do juros apos o valor liquido		     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function fa070Liq(oJuros,oValRec,oPanel2)

LOCAL lfa070Liq := Existblock("fcalcjur")
LOCAL lF070IRBX := Existblock("F070IRBX")

If lF070IRBX
	nTotAbImp := Execblock("F070IRBX", .F., .F., {nValRec, nTotAbImp})
	oPanel2:Refresh()
Endif

IF lfa070Liq
	nJuros := Execblock("fcalcjur",.f.,.f.)
	oJuros:refresh()
	oValRec:refresh()
Endif
Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³F070Ret   ³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 10/02/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Tratamento de retencao na data de credito					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ F070Ret(ExpC1,ExpD4) 						              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpD1 = Data de Credito Atual                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070 													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F070Ret()
Local j
Local cFunName	:= AllTrim( Upper( FunName() ) )	// Nome da Rotina
Local lConsRet	:= .T.								// Considera retancao bancaria

// Determina se a rotina considera retencao bancaria, se esta funcao foi
// chamada por outro programa sempre considera.
If	( cFunName $ "FINA070*FINA740" .AND. mv_par09 <> 1 ) .OR.;
	( cFunName == "FINA110" .AND. mv_par07 <> 1 )

	lConsRet	:= .F.
EndIf

If !( cFunName $ "FINA070*FINA740" ) .OR. lConsRet

	SA6->(MsSeek(xFilial("SA6")+cBanco+cAgencia+cConta))	

	If SA6->(!Eof()) .AND. SA6->A6_RETENCA > 0 .AND. (FN022SITCB(SE1->E1_SITUACA)[2] .OR. FN022SITCB(SE1->E1_SITUACA)[1]) //SE1->E1_SITUACA $ "12347"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza data vencto real c/reten‡„o Banc ria³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dDtCredito := dBaixa
		For j:=1 To SA6->A6_RETENCA
			dDtCredito := DataValida(dDtCredito+1,.T.)
		Next j
	Endif

Endif

Return .T.


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FA070Pes  ³ Autor ³ Rafael Rodrigues      ³ Data ³ 04/09/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Cria uma pesquisa personalizada para usar campos virtuais.  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Gestao Educacional                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FA070Pes(cAlias, nReg, nOpc)
local nOpcA
local oDlg, oOrdem, oChave, oBtOk, oBtCan, oBtPar
local cExpChave := ""
local cChave	:= Space(255)
local aOrdens	:= {}
local aBlocks	:= {}
local nOrder	:= 1

static cOrdem

SIX->( dbSetOrder(1) )
SIX->( MsSeek(cAlias) )

while SIX->( !eof() .and. INDICE == cAlias )

	aAdd( aOrdens, Capital( SIXDescricao() ) )
	aAdd( aBlocks, &("{ || "+cAlias+"->(dbSetOrder("+Str(nOrder,2,0)+")), "+cAlias+"->(MsSeek(xFilial('"+cAlias+"')+Rtrim(cChave))) }") )

	nOrder++

	SIX->( dbSkip() )
end

aAdd( aOrdens, Capital( STR0177 ) )	// "Nome do Aluno"
aAdd( aBlocks, &("{ || "+cAlias+"->(dbSetOrder(2)), "+cAlias+"->(MsSeek(xFilial('"+cAlias+"')+Posicione('JA2',3,xFilial('JA2')+Rtrim(cChave),'JA2_CLIENT')))}") )

aAdd( aOrdens, Capital( STR0178 ) )	// "Incrição do Candidato"
aAdd( aBlocks, &("{ || "+cAlias+"->(dbSetOrder(1)), "+cAlias+"->(MsSeek(xFilial('"+cAlias+"')+RTrim(Posicione('JA1',1,xFilial('JA1')+Rtrim(cChave),'JA1_PRFTIT')+Posicione('JA1',1,xFilial('JA1')+Rtrim(cChave),'JA1_NUMTIT')+Posicione('JA1',1,xFilial('JA1')+Rtrim(cChave),'JA1_PARTIT')+Posicione('JA1',1,xFilial('JA1')+Rtrim(cChave),'JA1_TIPTIT'))))}") )

define msDialog oDlg title STR0001 from 00,00 TO 100,500 pixel

@ 005, 005 combobox oOrdem var cOrdem items aOrdens size 210,08 of oDlg pixel
@ 020, 005 msget oChave var cChave size 210,08 of oDlg pixel

define sButton oBtOk  from 05,218 type 1 action (nOpcA := 1, oDlg:End()) enable of oDlg pixel
define sButton oBtCan from 20,218 type 2 action (nOpcA := 0, oDlg:End()) enable of oDlg pixel
define sButton oBtPar from 35,218 type 5 when .F. of oDlg pixel

activate msdialog oDlg center

if nOpcA == 1

	for nOrder := 1 to len(aOrdens)
		if aOrdens[ nOrder ] == cOrdem
			cExpChave := (cAlias)->(IndexKey(nOrder))
			if "DTOS" $ cExpChave .Or. "DTOC" $ cExpChave
				cChave := ConvData( cExpChave, cChave )
			endif
			Eval( aBlocks[ nOrder ] )
		endif
	next i

endif

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³FA070Aca  ³ Autor ³ Rafael Rodrigues      ³ Data ³ 07/11/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Realiza as consequencias de uma baixa de titulo com o modulo³±±
±±³          ³Gestao Educacional ativo.                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³FA070Aca( <cPrf>, <cNum>, <cParc>, <cTipo> )                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC01: Prefixo do Titulo Baixado (OPCIONAL)                ³±±
±±³          ³ExpC02: Numero do Titulo Baixado  (OPCIONAL)                ³±±
±±³          ³ExpC03: Parcela do Titulo Baixado (OPCIONAL)                ³±±
±±³          ³ExpC04: Tipo do Titulo Baixado    (OPCIONAL)                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FA070Aca( cPrf, cNum, cParc, cTipo, lShowLog )

ACFina070( cPrf, cNum, cParc, cTipo, lShowLog )

Return
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³F070VlLt  ³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 09/10/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Verificação do valor de marcacao dos titulos para Bx. Lote  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³F070VlLt(ExpN1) 								                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 = Valor total dos titulos selecionados               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070 																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F070VlLt(nValor)
Local lRet := .T.

If nValor <= 0
	Help(" ",1,"VL_LOTE")
	lRet := .F.
Endif

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CalcJrDev ºAutor  ³Nilton Pereira      º Data ³  04/12/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³Calcula os juros devido e nao pago de um titulo a receber   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºSintaxe   ³CalcJrDev ( <cPrefixo> , <cNum> , <cParcela>, <cTipo> )     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ ExpC01: Prefixo do Titulo (OPCIONAL)                       º±±
±±º          ³ ExpC02: Numero do Titulo                                   º±±
±±º          ³ ExpC03: Parcela do Titulo                                  º±±
±±º          ³ ExpC04: Tipo do Titulo Baixado                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Financeiro                                                 º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function CalcJrDev(cPrefixo,cNum,cParcela,cTipo)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Declaracao de variaveis                                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local nVlrBaixa   := 0
Local lBxCEC      := .F.
Local lBaixaAbat  := .F.
Local aBaixa      := {}
Local cCliente    := ""
Local cLoja       := ""
Local nTotAdto    := 0
Local nValPago    := 0
Local nJurTit     := 0
Local nMoeda      := 1
Local nValBas     := 0
Local nJurPago    := 0
Local x           := 0
Local nTxMoeda	  := 0

Private aBaixaSE5 := {}

dbSelectArea("SE1")
dbSetOrder(1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica a existencia ou nao do titulo a receber              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !MsSeek(xFilial()+cPrefixo+cNum+cParcela+cTipo) .And.;
	(SE1->E1_PORCJUR  == 0) .And. (SE1->E1_BAIXA < DataValida(SE1->E1_VENCTO,.T.))
	MsgAlert("Titulo a Receber nao encontrado ou sem juros !")
	Return
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Carrega as informacoes do titulo posicionado                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cCliente    := SE1->E1_CLIENTE
cLoja       := SE1->E1_LOJA
nDias       := SE1->E1_BAIXA - SE1->E1_VENCTO
nValor      := SE1->E1_VALOR
dVecto      := SE1->E1_VENCTO
dVencRea    := SE1->E1_VENCREA
nPerJur     := SE1->E1_PORCJUR
dEmissao    := SE1->E1_EMISSAO
nTxMoeda 	:= If(SE1->E1_MOEDA > 1, If(SE1->E1_TXMOEDA > 0, SE1->E1_TXMOEDA,RecMoeda(dBaixa,SE1->E1_MOEDA)),0)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Seleciona as baixas do titulo para calculo dos juros          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aBaixa := Sel070Baixa( "VL /V2 /BA /RA /CP /LJ /"+MV_CRNEG,cPrefixo, cNum, cParcela,cTipo,@nTotAdto,@lBaixaAbat,cCliente,cLoja,@nVlrBaixa,,@lBxCEC)

For x:= 1 To Len(aBaixaSE5)
	nValBas  := SE1->E1_VALOR - nValPago
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Calcula os juros para cada baixa encontrada para o titulo     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If x == 1
		nJurTit  += FaJuros(nValor,nValBas,dVecto,0,nPerJur,nMoeda,dEmissao,aBaixaSE5[x][7],nTxMoeda,,dVencRea, "SE1")
	Else
		nJurTit  += FaJuros(nValor,nValBas,dVecto,0,nPerJur,nMoeda,dEmissao,aBaixaSE5[x][7],nTxMoeda,aBaixaSE5[x-1][7],dVencRea, "SE1")
	Endif
	nValPago += aBaixaSE5[x][08] - aBaixaSE5[x][14] - aBaixaSE5[x][15] + aBaixaSE5[x][16]
	nJurPago += aBaixaSE5[x][14]
Next

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Faz calculo dos juros pagos/recebidos, informando a diferenca ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nJurDev := nJurTit - nJurPago

Return nJurDev

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ f070AltBco   ³ Autor ³ Leonardo Ruben     	³ Data ³ 02/12/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica moeda        para o banco escolhido/alterado          ³±±
±±³          ³ Somente paises localizados                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function f070AltBco(nTxMoeda, oJuros, oMulta, oDescont, oCm, oBanco, nValRec, oTxMoeda)
Local lRet := .T.
Local lPccBxCr  := FPccBxCr()
Local lIrPjBxCr := FIrPjBxCr()
Local nMoedaBx  := Max(SE1->E1_MOEDA, 1)
Local nBaseVR   := nValRec
Local nTxMdaOr  := 0

DEFAULT oBanco := ""

If (cBanco+cAgencia+cConta == SA6->A6_COD+SA6->A6_AGENCIA+SA6->A6_NUMCON)
	nMoedaBco := Max( SA6->A6_MOEDA, 1)
	If cPaisLoc <> "BRA"
		If nMoedaBco == nMoedaBx
			nTxMoeda := 1
        ElseIf nMoedaBco > 1 .AND. SE1->E1_MOEDA = 1
            If aTxMoedas[SE1->E1_MOEDA][2] <> nMoedaBco
                nTxMoeda:=aTxMoedas[SE1->E1_MOEDA][2]
            Else
                nTxMoeda := RecMoeda(dBaixa,nMoedaBco)
            EndIf
		Else
            If aTxMoedas[SE1->E1_MOEDA][2] <> nMoedaBco
                nTxMoeda:=aTxMoedas[SE1->E1_MOEDA][2]
            Else
                nTxMoeda := RecMoeda(dBaixa,SE1->E1_MOEDA)
            EndIf
		EndIf
		nTxMdaOr:=aTxMoedas[SE1->E1_MOEDA][2]
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ SIGAPFS‚ A cotação para baixa dos títulos no módulo jurídico deve ser sempre na cotação diária.  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If UPPER(Alltrim(SE1->E1_ORIGEM)) $ "JURA203"
			nTxMoeda := If(SE1->E1_MOEDA > 1, RecMoeda(dBaixa,SE1->E1_MOEDA), 0)
		ElseIf nMoedaBco == nMoedaBx
			nTxMoeda := 1
        ElseIf nMoedaBco > 1 .AND. SE1->E1_MOEDA = 1
            nTxMoeda := RecMoeda(dBaixa,nMoedaBco)
        Else
			nTxMoeda := If(SE1->E1_MOEDA > 1, If(SE1->E1_TXMOEDA > 0, SE1->E1_TXMOEDA,RecMoeda(dBaixa,SE1->E1_MOEDA)),0)
		EndIf

		nTxMdaOr := If(SE1->E1_MOEDA > 1, If(SE1->E1_TXMOEDA > 0, SE1->E1_TXMOEDA,RecMoeda(dBaixa,SE1->E1_MOEDA)),0)
	Endif

	nBsVlEstr := SE1->E1_SALDO - nTotAbat
	nOutrosValores := nJuros+nVa+(nCm1+nProRata)+nMulta-nDescont-nOtrga+nAcresc-nDecresc - Iif(lPccBxCr,nPis+nCofins+nCsll,0)-Iif(lIrPjBxCr,nIrrf,0)
    If SE1->E1_MOEDA == 1
        nValEstrang:=  xMoeda(nValRec,SE1->E1_MOEDA,nMoedaBco,dBaixa,5,nTxMdaOr,nTxMoeda)
    Else
        //"Resolver" problemas de arredondamento em moeda 2
        nVlEstRnd   := Round(NoRound(xMoeda(nValRec,nMoedaBco,SE1->E1_MOEDA,dBaixa,5,nTxMdaOr,nTxMoeda),3),MsDecimais(SE1->E1_MOEDA))
        nVlEstNoRd  := NoRound(xMoeda(nValRec,nMoedaBco,SE1->E1_MOEDA,dBaixa,5,nTxMdaOr,nTxMoeda),MsDecimais(SE1->E1_MOEDA))
        If SE1->E1_SALDO == nVlEstRnd .AND. nOutrosValores == 0 // Se saldo igual Round do nValRec
            nValEstrang := nVlEstRnd
        ElseIf SE1->E1_SALDO == nVlEstNoRd .AND. nOutrosValores == 0 // Se saldo igual a noRound do nValRec
            nValEstrang := nVlEstNoRd
        Else // mudou o valor de baixa, faço como o padrão sempre fez
            nValEstrang := Round(NoRound(xMoeda(nValRec,nMoedaBco,SE1->E1_MOEDA,dBaixa,5,nTxMdaOr,nTxMoeda),3),MsDecimais(SE1->E1_MOEDA))
        EndIf
	EndIf	
	If nOutrosValores == 0	// Vai baixar o título sem nenhum outro valor além do título?
		If Abs(nValEstrang - nBsVlEstr ) == 0.01
			nValEstrang := nBsVlEstr	// Corrigir diferença de 0,01 em conversão de moedas. Exemplo: E1_VALOR = 115890, E1_MOEDA = 2 , Taxa = 0,03348
		EndIf
	EndIf

	oValRec:Refresh()

	If Type("oTxMoeda") == "O"
		oTxMoeda:Refresh()
	Endif

    If Type("oVlEstrang") == "O" .and. oVlEstrang:lModified
        oVlEstrang:Refresh()
	Endif

	nEstOriginal := nValEstrang-(xMoeda(nOutrosValores,1,SE1->E1_MOEDA,,,,nTxMoeda))
    If (!EMPTY(oDescont) .AND. oDescont:lModified) .OR. EMPTY(oDescont)
		nDescont := FaDescFin("SE1",dBaixa,SE1->E1_SALDO-nTotAbat,nMoedaBco)
	EndIf
	IF (!Empty(oJuros) .AND. oJuros:lModified) .or. Empty(oJuros)
		fa070Juros(nMoedaBco)
	EndIf

	If (!Empty(oBanco) .AND. (oBanco:lModified))
		FA070CORR(nEstOriginal,nTxMoeda)
    endIF

	If cPaisLoc == "BRA"
		oJuros:Refresh()
		oMulta:Refresh()
		oDescont:Refresh()
		If Type("oCm") == "O"
			oCm:Refresh()
		Endif
	Endif
EndIf

//Ponto de entrada para validacao do Banco
If ExistBlock("F070KCO")
	lRet := ExecBlock("F070KCO",.F.,.F.,{cBanco,cAgencia,cConta})
Endif

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³Fa080ValEs³ Autor ³ Claudio D. de Souza   ³ Data ³ 17.09.03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Validacao do valor recebido em moeda estrangeira			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ Fa080ValEstrang(	nValEstrang,nTxMoeda,nValRec,dBaixa, 	  ³±±
±±³			 ³ 						oValRec,oTxMoeda,nJuros,nMulta,nDescont, ³±±
±±³			 ³ 						nOtrga,nEstOriginal)			  				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070  																  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
*/
Static Function Fa070ValEstrang(	nValEstrang,nTxMoeda,nValRec,dBaixa,oValRec,oTxMoeda,;
											nJuros,nMulta,nDescont,nOtrga,nEstOriginal,oVlEstrang)
Local nTxMdaOr := 0
Local lPccBxCr 	:= FPccBxCr()
Local lIrPjBxCr	:= FIrPjBxCr()
If cPaisLoc<>"BRA"
	nTxMdaOr:=Iif(nMoedaBco>0,aTxMoedas[nMoedaBco][2],1)
EndIf

If Type("nTxMoeda") == "U" .and. cPaisLoc <> "BRA"
    nTxMoeda    := aTxMoedas[SE1->E1_MOEDA][2]
EndIf

If nTxMoeda > 0 .And. oVlEstrang:lModified
	// Converte o valor em moeda estrangeira para identificar o valor total do pagto.
	If cPaisLoc <> "BRA"
		nValRec := xMoeda(nValEstrang,SE1->E1_MOEDA,nMoedaBco,dBaixa,3,nTxMoeda,nTxMdaOr)
	Else
		nValRec := xMoeda(nValEstrang,SE1->E1_MOEDA,nMoedaBco,dBaixa,3,nTxMoeda)
	EndIf
	// Verifica a taxa utilizada
	nTxMoeda := nValRec/nValEstrang
	// Atualiza os objetos
	If cPaisLoc=="BRA" .AND. Type("oTxMoeda") == "O"
		oTxMoeda:Refresh()
	EndIf
	oValRec:Refresh()
	// Calcula a correcao monetaria
	nEstOriginal := nValEstrang-(xMoeda(nJuros+nVa+(nCm1+nProRata)+nMulta-nDescont-nOtrga+nAcresc-nDecresc - Iif(lPccBxCr,nPis+nCofins+nCsll,0)-Iif(lIrPjBxCr,nIrrf,0),nMoedaBco,SE1->E1_MOEDA,,,,nTxMoeda))
	FA070CORR(nEstOriginal,nTxMoeda)
Endif

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Fa070LoteFin ³ Autor ³ Claudio Donizete   	³ Data ³ 27/04/05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cria trava para lote financeiro na baixa por lote, para        ³±±
±±³          ³ dois usuarios nao utilizem o mesmo numero de lote.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ FINA070                                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fa070LoteFin(cLoteFin,cChaveLbn)
Local lRet := .T.
Local cChave

//-- Parametros da Funcao LockByName() :
//   1o - Nome da Trava
//   2o - usa informacoes da Empresa na chave
//   3o - usa informacoes da Filial na chave
cChave := "CRBXLOTE"+cLoteFin
If !LockByName(cChave,.T.,.F.)
	//-- Se Ja estiver reservado retorna .F. pois nao pode executar a Rotina
	MsgAlert(STR0181,STR0182) // "Existe outro usuário utilizando este mesmo número de lote. Não é permitida a baixa por lote com mesmo número por dois usuários" ## "Atenção"
	lRet := .F.
Else
	cChaveLbn := cChave
EndIf

Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Fa070TotCheq ³ Autor ³ Claudio Donizete   	³ Data ³ 31/08/05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Totaliza valores dos cheques recebidos                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ FINA070 e FINA040                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa070TotCheq(nCampo)
Local nX

nVlrNomCheq := 0
nQtdCheq		:= 0
nVlRefBxChq	:= 0

For nX := 1 To Len(aCols)
	If !aTail(aCols[nX])
		nVlrNomCheq += If(nCampo == 1 .And. nX == n,&(ReadVar()), aCols[nX][5]) // VALOR NOMINAL
		If cPaisLoc == "BRA"
			nVlRefBxChq += If(nCampo == 2 .And. nX == n,&(ReadVar()), aCols[nX][6]) // VALOR REF. BAIXA
		Endif
		nQtdCheq 	++
	Endif
Next
If Type("oVlrNomCheq") == "O"
	oVlrNomCheq:Refresh()
Endif
If Type("oQtdCheq") == "O"
	oQtdCheq:Refresh()
Endif
If Type("oVlRefBxChq") == "O"
	oVlRefBxChq:Refresh()
Endif

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Fa070ChqDel  ³ Autor ³ Claudio Donizete   	³ Data ³ 31/08/05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Trata tecla DEL na inclusao de cheques recebidos				   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ FINA070 e FINA040                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Fa070ChqDel
STATIC __nExeDel

If AllTrim(FunName()) == "FINA040"
	MsgAlert(STR0270)//Para exclusão do cheque acesse a rotina: Cadastro de Cheques Recebidos
	Return .F.
Else
	If __nExeDel == Nil
		__nExeDel := 0
	Endif

	__nExeDel++
	// Como esta rotina eh chamada duas vezes pela exclusao na GetDados, controlar
	// as chamadas para nao ocorrer erro nos calculos dos dados do rodape
	If (__nExeDel%2)==0 .And. aCols[n][Len(aCols[n])] .And. nVlrNomCheq > 0	// Acrescentado para corrigir bug
		Return .T.
	Endif

	If !aTail(aCols[n])	// Registro deletado -> eh o contrario pois pressionou <DEL> e o arquivo ainda esta com Flag trocado
		nVlrNomCheq -= aCols[n][5] // VALOR NOMINAL
		If cPaisLoc == "BRA"
			nVlRefBxChq -= aCols[n][6] // VALOR REF. BAIXA
		Endif
		nQtdCheq 	--
	Else
		nVlrNomCheq += aCols[n][5] // VALOR NOMINAL
		If cPaisLoc == "BRA"
			nVlRefBxChq += aCols[n][6] // VALOR REF. BAIXA
		Endif
		nQtdCheq 	++
	EndIf

	If Type("oVlrNomCheq") == "O"
		oVlrNomCheq:Refresh()
	Endif
	If Type("oQtdCheq") == "O"
		oQtdCheq:Refresh()
	Endif
	If Type("oVlRefBxChq") == "O"
		oVlRefBxChq:Refresh()
	Endif
EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Fa070Visual³ Autor ³ Fernando Machima      ³ Data ³ 29/11/05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Rotina de Visualização de Baixa a receber                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fa070Visual()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA070                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function fa070Visual(cAlias,nReg,nOpcx)

AxVisual(cAlias,nReg,nOpcx)

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³F070Mul   ³ Autor ³ Ricardo A. Canteras	  ³ Data ³ 12/01/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Validacao do campo de Multa da baixa								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ F070Mul()			 													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F070Mul(oMulta)

Local lRet		:= .T.
Local dBaixa
Local cTxMod	:= If(SE1->E1_MOEDA > 1, If(SE1->E1_TXMOEDA > 0, SE1->E1_TXMOEDA,RecMoeda(dBaixa,SE1->E1_MOEDA)),0)
Local aPcc		:= {}
Local lJurMulDes	:= (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")
Local lGerPCCBD		:= .F.
Local nBase			:= 0
If	ExistBlock("F070MUL")
	lRet := ExecBlock("F070MUL",.F.,.F.)
Endif

If (!Empty(oMulta) .AND. oMulta:lModified)
	dBaixa      := CriaVar("E1_BAIXA")
	If !nTxMoeda <> cTxMod
		nTxMoeda 	:= If(SE1->E1_MOEDA > 1, If(SE1->E1_TXMOEDA > 0, SE1->E1_TXMOEDA,RecMoeda(dBaixa,SE1->E1_MOEDA)),0)
	EndIf
	If dBaixa < dLastPcc
		f070TotMes(dBaixa,.T.,,,,nTxMoeda)
	Else
	If !Empty(SE1->E1_NUMBOR)
		lGerPCCBD := FGERPCCBOR("R", SE1->(Recno()))
	EndIf

	  If lJurMulDes .and. SE1->E1_TIPO # MVRECANT .and. !lGerPCCBD//.And. Empty(SE1->E1_NUMBOR)
		nBase	:= FBaseRPCC() // Carrega a base do PCC
		If nBase-nDescont+nJuros+nVa+nMulta+nAcresc-nDecresc > 0
			nBase	:= nBase-nDescont+nJuros+nVa+nMulta+nAcresc-nDecresc
		EndIf
		If !__lPccMR
			aPcc	:= newMinPcc(dBaixa, nBase,SE1->E1_NATUREZ,"R",SA1->A1_COD+SA1->A1_LOJA,,,,,,cMotBx)
			nPis	:= aPcc[2]
			nCofins	:= aPcc[3]
			nCsll	:= aPcc[4]
			//Reestruturacao SE5 - Para gravação das tabelas FK3 e FK4
			nPisCalc	:= nPis
			nPisBaseC	:= nValRec
			nPisBaseR 	:= nValRec
			nCofCalc	:= nCofins
			nCofBaseC	:= nValRec
			nCofBaseR 	:= nValRec
			nCslCalc	:= nCsll
			nCslBaseC	:= nValRec
			nCslBaseR 	:= nValRec
		EndIf
	 Endif
	EndIf
	If !__lIrfMR .AND. lJurMulDes
		nIrrf := IIf(cPaisLoc == "BRA", FCaIrBxCR(nValRec), 0)
		nIrfBaseC := nValRec
		nIrfBaseR := nValRec
	EndIf
Endif

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³FaCalcImp ³ Autor ³ Ricardo A. Canteras   ³ Data ³ 13/02/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Funcao para recalcular os impostos e permitir ao usuario	  ³±±
±±³          ³altera-los na tela de baixas do contas a receber            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FaCalcImp()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FaCalcImp()

Local aArea     := GetArea()
Local nVlMinImp := GetNewPar("MV_VL10925",5000)
Local nIss			:= 0
Local nInss		:= 0
Local nOrigPis	  := 0
Local nOrigCofins := 0
Local nOrigCsll	  := 0
Local nValImp   := 0
Local cAlias    := "SE1"
Local cNum      := SE1->E1_NUM
Local cPrefixo  := SE1->E1_PREFIXO
Local cParcela  := SE1->E1_PARCELA
Local nImp10925 := 0
Local lRecIss	 := .F.
Local lSC5RecIss := cPaisLoc == "BRA"
Local lPanelFin := IsPanelFin()
//Controla o Pis Cofins e Csll na baixa  (1-Retem PCC na Baixa ou 2-Retem PCC na Emissão(default) )
Local lPccBxCr := FPccBxCr(.T.)
//Controla IRPJ na baixa
Local lIrPjBxCr := FIrPjBxCr(.T.)
Local lF070Imp2	:= ExistBlock("F070Imp2")
Local lFa070Imp	:= ExistBlock("Fa070Imp")
Local lPcc			:= .T.
Local lInss		:= .T.
Local lIss		:= .T.
Local lCalcIss	:= .T.
Local lIrrf		:= .T.
Local oDlg
Local oPanel
Local cModRetPIS:= SA1->A1_ABATIMP
Local cModTot	:= GetNewPar( "MV_MT10925", "1" )

If SE1->E1_EMISSAO >= dLastPcc
	nVlMinImp	:= 0
EndIf

//Quando PCC está configurado na baixa antes desta função o sistema entra na f070TotMes e caso o MV_MRETISS == 1 ele atribui valor ao ISS.
//Gerando assim valores incorretos quando utilizado o botão Impostos na Baixa a Receber.
If lPccBxCr .And. GetMV("MV_MRETISS") == "1"
	nIss	:=	0
Endif

//Verifico se a natureza e o cliente estão configurados para o cálculo de PCC.
IF AllTrim(SE1->E1_ORIGEM) == "MATA460" .And. (Empty(SE1->E1_NATUREZ)) .AND. !lFa070Imp
	  Help("",1,"F070IMPBTN")
	  Return .T.
Endif

//Verifico se a natureza e o cliente estão configurados para o cálculo de PCC
//Caso não estejam, aborto a rotina para que não sejam gerados impostos incorretamente
//Esses impostos gerados nesse cenário ficavam inconsistentes, por isso foi feito esse tratamento
DbSelectArea("SED")
DbSetOrder(1)

If ( ((DbSeek(xFilial("SED")+ SE1->E1_NATUREZ) .And. SED->ED_CALCPIS != "S" .And. SED->ED_CALCCSL != "S" .And. SED->ED_CALCCOF != "S") .Or. (!SA1->A1_RECPIS  $ "S#P" .And. !SA1->A1_RECCSLL $ "S#P" .And. !SA1->A1_RECCOFI $ "S#P")) .and. ;
	IIf(cModTot == "2", .T., nPis + nCofins + nCsll == 0) ) .Or. ( __lPccMR .And. !lFa070Imp )
	Help( ,,"F070IMPBTN",,STR0256, 1, 0 )
	Return .T.
Endif

If lFa070Imp
	If (DbSeek(xFilial("SED")+ SE1->E1_NATUREZ) .And. SED->ED_CALCINS != "S") .Or. (!SA1->A1_RECINSS  $ "S#P")
		lInss	:= .F.
	Endif

	If (DbSeek(xFilial("SED")+ SE1->E1_NATUREZ) .And. SED->ED_CALCISS != "S")
		lCalcIss	:= .F.
	Endif

	If (DbSeek(xFilial("SED")+ SE1->E1_NATUREZ) .And. SED->ED_CALCIRF != "S") .Or. (SA1->A1_RECIRRF  $ "2") .or. (Empty(SA1->A1_RECIRRF) .and. (SA1->A1_IRBAX  $ "2"))
		lIrrf	:= .F.
	Endif
EndIf

RegToMemory(cAlias, .F., .F. )

nImp10925 := ChkAbtImp(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_MOEDA,"V",SE1->E1_BAIXA)

If !lPccBxCr
	aDadosRet := F040TotMes(dBaixa,@nIndexSE1,@cIndexSE1)

	//Se o valor total for menor que o valor minimo de retenção
	If cModRetPis == "1" .and. (aDadosRet[1] + nValRec) <= nVlMinImp
		nPisCalc := NoRound((m->e1_valor * (Iif(SED->ED_PERCPIS>0,SED->ED_PERCPIS,GetMv("MV_TXPIS")) / 100)),2)
		nCofCalc := NoRound((m->e1_valor * (Iif(SED->ED_PERCCOF>0,SED->ED_PERCCOF,GetMv("MV_TXCOFIN")) / 100)),2)
		nCslCalc := NoRound((m->e1_valor * (SED->ED_PERCCSL / 100)),2)
		nPis     := 0
		nCofins  := 0
		nCsll    := 0

		If nImp10925 > 0
			nOrigPis	:= nOldPis
			nOrigCofins := nOldCofins
			nOrigCsll   := nOldCsll
		Endif

		nOldPis  	:= m->e1_pis
		nOldCofins  := m->e1_cofins
		nOldCsll  	:= m->e1_csll
	Else
		nOrigPis	:= nOldPis
		nOrigCofins := nOldCofins
		nOrigCsll   := nOldCsll

		nPis 	  := m->e1_pis
		nCofins   := m->e1_cofins
		nCsll     := m->e1_csll

		nValorRec := m->e1_valor

		nOldPis    := SE1->E1_PIS
		nOldCofins := SE1->E1_COFINS
		nOldCsll   := SE1->E1_CSLL

	Endif
ElseIf !__lPccMR
	nOrigPis := nPis
	nOrigCofins := nCofins
	nOrigCsll := nCsll
EndIf

nValorRec := m->e1_valor

If !("FINA040" $ SE1->E1_ORIGEM) .AND. lSC5RecIss
	If "FINA630" $ SE1->E1_ORIGEM
		SE6->(dbSetOrder(4))
		If SE6->(MsSeek(xFilial("SE6")+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO))
			cFilOrig := SE6->E6_FILORIG
			SC5->(dbSetOrder(1))
			If SC5->(MsSeek(cFilOrig+SE1->E1_PEDIDO))
				lRecIss := (SC5->C5_RECISS == "1" .And. GetNewPar("MV_DESCISS",.F.))
			Else
				lRecIss := (SA1->A1_RECISS == "1" .And. GetNewPar("MV_DESCISS",.F.))
			Endif
		EndIf
	Else
		SC5->(dbSetOrder(1))
		If SC5->(MsSeek(xfilial("SC5")+SE1->E1_PEDIDO))
			lRecIss := (SC5->C5_RECISS == "1" .And. GetNewPar("MV_DESCISS",.F.))
		Else
			lRecIss := (SA1->A1_RECISS == "1" .And. GetNewPar("MV_DESCISS",.F.))
		Endif
	EndIf
Else
	lRecIss := (SA1->A1_RECISS == "1" .And. GetNewPar("MV_DESCISS",.F.))
Endif

//Inicializo os demais impostos
If !__lTemMR .Or. ( __lTemMR .And. ( nIrrf + nInss + nIss ) == 0 )
	nIrrf := SE1->E1_IRRF
	nInss := SE1->E1_INSS
	nIss  := If(lRecIss, SE1->E1_ISS	,0)
EndIf

DEFINE MSDIALOG oDlg FROM  69,33 TO 500,525 TITLE STR0190 PIXEL OF oMainWnd  //"Recálculo dos Impostos (PIS/COFINS/CSLL)"
oPanel := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,40,40,.T.,.T. )
oPanel:Align := CONTROL_ALIGN_ALLCLIENT

@ 001,002 GROUP oGrp1 TO 043, 245 LABEL STR0008 OF oPanel PIXEL //"Principal"
@ 050,002 GROUP oGrp2 TO 183, 125 LABEL STR0191 OF oPanel PIXEL //"Valores Originais"
@ 050,130 GROUP oGrp3 TO 183, 245 LABEL STR0192 OF oPanel PIXEL //"Valores Recalculados na Data da Baixa"

oGrp1:oFont := oFontLbl
oGrp2:oFont := oFontLbl
oGrp3:oFont := oFontLbl

//////////////////
//DADOS TO TITULO
@ 008,004 SAY STR0211				SIZE 31,07 OF oPanel PIXEL //"Prefixo"
@ 008,027 MSGET SE1->E1_PREFIXO	SIZE 25,08 OF oPanel PIXEL When .F.
@ 008,055 SAY STR0212 				SIZE 31,07 OF oPanel PIXEL //"Número"
@ 008,080 MSGET SE1->E1_NUM		SIZE 65,08 OF oPanel PIXEL When .F.
@ 008,150 SAY STR0213				SIZE 31,07 OF oPanel PIXEL //"Parcela"
@ 008,173 MSGET SE1->E1_PARCELA	SIZE 25,08 OF oPanel PIXEL When .F.
@ 008,200 SAY STR0214				SIZE 31,07 OF oPanel PIXEL //"Tipo"
@ 008,213 MSGET oTipo VAR SE1->E1_TIPO	F3 "SE1RDO" SIZE 30,08 OF oPanel PIXEL When .F.HASBUTTON
//oTipo:lReadOnly := .T.

@ 019,004 SAY STR0014 SIZE 22, 07 OF oPanel PIXEL //"Cliente"
@ 019,027 MSGET oCodCli VAR SE1->E1_CLIENTE F3 "SA1" SIZE 65,08 OF oPanel PIXEL When .F.  HASBUTTON //READONLY
//oCodCli:lReadOnly := .T.
@ 019,095 MSGET SA1->A1_NOME SIZE 148,08 OF oPanel PIXEL When .F.

@ 030,004 SAY STR0052 				SIZE 31,07 OF oPanel PIXEL //"Natureza"
@ 030,027 MSGET oNaturez VAR SE1->E1_NATUREZ	F3 "SED" SIZE 65,08 OF oPanel When .F. PIXEL HASBUTTON
//oNaturez:lReadOnly := .T.
@ 030,095 SAY STR0012 				SIZE 31,07 OF oPanel PIXEL //"Emiss„o"
@ 030,118 MSGET SE1->E1_EMISSAO	SIZE 43,08 OF oPanel PIXEL When .F.
@ 030,169 SAY STR0013 				SIZE 49,07 OF oPanel PIXEL //"Vencto.Atual"
@ 030,200 MSGET SE1->E1_VENCREA	SIZE 43,08 OF oPanel PIXEL When .F.


//////////////////
//VALORES ORIGINAIS
nLinha := 60
@ nLinha,005 SAY STR0020 				SIZE 53, 07 OF oPanel PIXEL//"Data Receb."
@ nLinha,046 MSGET dBaixa				SIZE 65, 08 OF oPanel PIXEL HASBUTTON When .F.

nLinha +=12
@ nLinha,005 SAY STR0027 + cDescMoeda	SIZE 53, 08 OF oPanel PIXEL //"Valor Original "
@ nLinha,046 MSGET nOldValor   			SIZE 65, 08 OF oPanel PIXEL HASBUTTON When .F. Picture PesqPict("SE1","E1_VALOR") //"@E 999,999,999,999.99"

nLinha +=12
@ nLinha,005 SAY STR0028 SIZE 53, 07 OF oPanel PIXEL // "- Abatimentos"
@ nLinha,046 MSGET nTotAbLiq         SIZE 65, 08 OF oPanel PIXEL HASBUTTON When .F.  Picture PesqPict( "SE1","E1_VALOR" )  //"@E 999,999,999,999.99"

If !__lPccMR
	nLinha += 12
	@ nLinha,005 SAY "- PIS" SIZE 53, 07 OF oPanel PIXEL
	@ nLinha,046 MSGET If(nImp10925 > 0 .or. lPccBxCr, nOldPis, 0) SIZE 65, 08 OF oPanel PIXEL HASBUTTON When .F.  Picture PesqPict( "SE1","E1_VALOR" )  //"@E 999,999,999,999.99"

	nLinha += 12
	@ nLinha,005 SAY "- COFINS" SIZE 53, 07 OF oPanel PIXEL
	@ nLinha,046 MSGET If(nImp10925 > 0 .or. lPccBxCr, nOldCofins, 0) SIZE 65, 08 OF oPanel PIXEL HASBUTTON When .F.  Picture PesqPict( "SE1","E1_VALOR" )  //"@E 999,999,999,999.99"

	nLinha += 12
	@ nLinha,005 SAY "- CSLL" SIZE 53, 07 OF oPanel PIXEL
	@ nLinha,046 MSGET If(nImp10925 > 0 .or. lPccBxCr, nOldCsll, 0) SIZE 65, 08 OF oPanel PIXEL HASBUTTON When .F.  Picture PesqPict( "SE1","E1_VALOR" )  //"@E 999,999,999,999.99"

EndIf
nValorLiq :=  (nOldValor - nTotAbLiq) - nOldPis - nOldCofins - nOldCsll

nLinha +=12
@ nLinha,005 SAY STR0187 SIZE 53, 07 OF oPanel PIXEL
@ nLinha,046 MSGET nValorLiq     SIZE 65, 08 OF oPanel PIXEL HASBUTTON When .F. Picture PesqPict("SE1","E1_VLCRUZ") //"@E 999,999,999,999.99"

If lF070Imp2
	nValorRec := nValRec
Endif

//Valores atualizados
nLinha := 60
If !__lPccMR
	@ nLinha,134 SAY "PIS" SIZE 53, 07 OF oPanel PIXEL
	@ nLinha,174 MSGET oPis VAR nOrigPis SIZE 66, 08 OF oPanel PIXEL HASBUTTON When lPcc Picture PesqPict( "SE1","E1_VALOR" );  //"@E 999,999,999,999.99"
	  Valid f070ValRec(@nValorRec,nTotAbLiq,nOrigPis,nOrigCofins,nOrigCsll,nIrrf,nIss,nInss)

	nLinha += 12
	@ nLinha,134 SAY "COFINS" SIZE 53, 07 OF oPanel PIXEL
	@ nLinha,174 MSGET oCofins VAR nOrigCofins SIZE 66, 08 OF oPanel PIXEL HASBUTTON When lPcc Picture PesqPict( "SE1","E1_VALOR" );  //"@E 999,999,999,999.99"
	  Valid f070ValRec(@nValorRec,nTotAbLiq,nOrigPis,nOrigCofins,nOrigCsll,nIrrf,nIss,nInss)

	nLinha += 12
	@ nLinha,134 SAY "CSLL" SIZE 53, 07 OF oPanel PIXEL
	@ nLinha,174 MSGET oCsll VAR nOrigCsll SIZE 66, 08 OF oPanel PIXEL HASBUTTON When lPcc Picture PesqPict( "SE1","E1_VALOR" ); //"@E 999,999,999,999.99"
	  Valid f070ValRec(@nValorRec,nTotAbLiq,nOrigPis,nOrigCofins,nOrigCsll,nIrrf,nIss,nInss)
EndIf

//Criado para utilização GPS Microsiga
If lFa070Imp

	If !__lIrfMR
		nLinha += 12
		@ nLinha,134 SAY "IRRF" SIZE 53, 07 OF oPanel PIXEL
		@ nLinha,174 MSGET oIrrf VAR nIrrf SIZE 66, 08 OF oPanel PIXEL HASBUTTON When lIrrf Picture PesqPict( "SE1","E1_VALOR" ); //"@E 999,999,999,999.99"
		  Valid ConfIRRF(@nIrrf,@oIrrf) .and. f070ValRec(@nValorRec,nTotAbLiq,nOrigPis,nOrigCofins,nOrigCsll,nIrrf,nIss,nInss)
	EndIf

	If !__lIssMR
		//Permite edição ISS
		lIss := lCalcIss .And. lRecIss

		nLinha += 12
		@ nLinha,134 SAY "ISS" SIZE 53, 07 OF oPanel PIXEL
		@ nLinha,174 MSGET oIss VAR nIss SIZE 66, 08 OF oPanel PIXEL HASBUTTON When lIss Picture PesqPict( "SE1","E1_VALOR" ); //"@E 999,999,999,999.99"
		  Valid f070ValRec(@nValorRec,nTotAbLiq,nOrigPis,nOrigCofins,nOrigCsll,nIrrf,nIss,nInss)
	EndIf

	If !__lInsMR
		nLinha += 12
		@ nLinha,134 SAY "INSS" SIZE 53, 07 OF oPanel PIXEL
		@ nLinha,174 MSGET oInss VAR nInss SIZE 66, 08 OF oPanel PIXEL HASBUTTON When lInss Picture PesqPict( "SE1","E1_VALOR" ); //"@E 999,999,999,999.99"
		  Valid f070ValRec(@nValorRec,nTotAbLiq,nOrigPis,nOrigCofins,nOrigCsll,nIrrf,nIss,nInss)
	EndIf
EndIf

nValImp := nPis + nCofins + nCsll + nIrrf + nInss + nIss

If !lF070Imp2
	nValorRec := (SE1->E1_VLCRUZ - nTotAbLiq - nValImp)
Endif

nLinha +=12
@ nLinha,134 SAY STR0035 SIZE 53,07 OF oPanel PIXEL //"= Valor Recebido"
@ nLinha,174 MSGET oValorRec VAR nValorRec SIZE 66, 08 OF oPanel PIXEL HASBUTTON Valid FA070ValRec() Picture PesqPict( "SE1","E1_VALOR" )  //"@E 999,999,999,999.99"

If lPanelFin
	ACTIVATE MSDIALOG oDlg ON INIT FAMYBAR(oDlg,{|| nOpc1 := 1,oDlg:End()},{|| nOpc1 := 2,oDlg:End()}) CENTERED
Else
	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| nOpc1 := 1,oDlg:End()},{|| nOpc1 := 2,oDlg:End()}) CENTERED
Endif

If nOpc1 == 1
	If MsgYesNo(STR0193+" "+STR0258)
		//Gravo novos valores
		RecLock("SE1")

		//Ponto de entrada para guardar os valores dos impostos
		//Criado para utilização GPS Microsiga
		If lFa070Imp
			ExecBlock("FA070IMP",.F.,.F.,{nIrrf,nIss,nPis,nCofins,nCsll,nInss})
			SE1->E1_IRRF := nIrrf
			SE1->E1_ISS  := If (lRecIss, nIss, SE1->E1_ISS)
			SE1->E1_INSS := nInss
		Endif
		If !lPccBxCr
			SE1->E1_PIS    := nOrigPis
			SE1->E1_COFINS := nOrigCofins
			SE1->E1_CSLL   := nOrigCsll
		EndIf

		//Volto o valor do ISS para, caso tenha alteracao neste valor, seja alterado no titulo IS-
		nIss := SE1->E1_ISS

		//Faz a alteração com os novos valores
		PcoIniLan("000001")
		FA040AxAlt(cAlias)
		PcoFinLan("000001")
		//não precisa chamar o duprec pois ja realiza no 040AxAlt
		//If !lIrPjBxCr .AND. lF070Imp2 .and. lFa070Imp .and. nOldIrrf == 0 .AND. nIrrf > 0
		//	A040DupRec(IIF(Empty(E1_ORIGEM),"FINA040",E1_ORIGEM),,,/*lAbate*/,,(FunName() != "FINA280"),,,.T.,,,,,,)
		//Endif
		//Recalculo os valores a serem apresentados na tela de baixa
		nTotAbImp := 0
		nTotAbLiq := 0
		nTotAbat	 := 0
		nTotAbat  := SumAbatRec(cPrefixo,cNum,cParcela,SE1->E1_MOEDA,"S",dBaixa,@nTotAbImp)
		nTotAbLiq := nTotAbat - nTotAbImp
		nValorLiq := (SE1->E1_VALOR - nTotAbat + nAcresc)
 	    nValRec := nValorRec + nAcresc + nJuros + nVa + nMulta - nDescont
		lAlterImp := .T.

		//Recupero os valores originais dos impostos, caso precise cancelar a operação
		nPis    := nOrigPis
		nCofins := nOrigCofins
		nCsll   := nOrigCsll

	EndIf
Else
	If !lAlterImp
		nPis     := If(nImp10925 > 0 .Or. lPccBxCr, nOldPis, 0)
		nCofins  := If(nImp10925 > 0 .Or. lPccBxCr, nOldCofins, 0)
		nCsll    := If(nImp10925 > 0 .Or. lPccBxCr, nOldCsll, 0)
	EndIf
EndIf
nOpc1 := 0
RestArea(aArea)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³f070ValRec³ Autor ³ Ricardo A. Canteras   ³ Data ³ 13/02/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Funcao utilizada para dar refresh no valor recebido		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³f070ValRec(nValorRec,nTotAbLiq,nPis,nCofins,nCsll,nIss,nInss³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function f070ValRec(nValorRec,nTotAbLiq,nPis,nCofins,nCsll,nIrrf,nIss,nInss)
Local nValImp := 0
Local lF070Imp2	:= ExistBlock("F070IMP2")

nValImp := nPis + nCofins + nCsll + nIrrf + nIss + nInss

If lF070Imp2
	nValorRec := (SE1->E1_SALDO - nTotAbLiq - nValImp)
Else
	nValorRec := (SE1->E1_VLCRUZ - nTotAbLiq - nValImp)
Endif

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³F070VldRec³ Autor ³ Ricardo A. Canteras   ³ Data ³ 15/02/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Verifica se o valor recebido eh menor que o valor da soma   ³±±
±±³          ³de Juros, Multa e Desconto                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³F070VldRec(oValRec)							                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070 																	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F070VldRec()
Local lRet   := .T.
Local nSoma  := 0
Local cBxRec := GetNewPar("MV_VLBXREC","1")

nSoma := (nMulta + nJuros + nVa) - nDescont

//Valores Acessorios - Versão média (não permite baixas parciais menores que valores acessórios
If nVA > 0 .and. (nValRec - nSoma + nVa) < nVa
	Help(" ",1,"VLRMENORQVA",,STR0276,1,0)	//"O valor efetivamente recebido é menor que os Valores Acessórios. Por favor, ajuste os Valores Acessórios."
	lRet := .F.

ElseIf cBxRec == "1"
	lRet := .T.
Else
	nSoma := (nMulta + nJuros + nVa) - nDescont
	If nSoma > nValRec
		If cBxRec == "2"
			If MsgYesNo(STR0196+CHR(10)+CHR(13)+STR0197)//"Atenção ! O valor recebido é menor que a soma dos valores de juros, multa e desconto." ## "Deseja confirmar a baixa?"
				lRet := .T.
			Else
				lRet := .F.
			EndIf
		ElseIf cBxRec == "3"
			MsgAlert(STR0196+CHR(10)+CHR(13)+STR0198)//"Atenção ! O valor recebido é menor que a soma dos valores de juros, multa e desconto." ## "Favor modificar os valores."
			lRet := .F.
		EndIf
	Else
		lRet := .T.
	EndIf
Endif

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³F070ConfirºAutor  ³Mauro Sano          º Data ³  06/04/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funcao para a validar o código capturado pelo leitor de    º±±
±±º          ³ CMC7.                                                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametr  ³ ExpC1 = Contem a string lida do cheque, antes do tratamentoº±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ ExpL1 = Confirma se os dados lidos sao validos             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA070                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F070Confirma( cCmc7 )
Local lRet := .F.		// Retorno da validacao da string

If Empty( cCmc7 ) // Caso nao leia nada
	MsgAlert( STR0201 )		// "Passe o cheque novamente no leitor."
Elseif ( "?" $ cCmc7 ) .OR. Len( AllTrim( cCmc7 ) ) <> 34 // Se encontrar o caracter de erro (?) ou tamnaho menor que o correto (34)
	MsgAlert( STR0202 + " " + STR0201 )		// "Erro na leitura." ### "Passe o cheque novamente no leitor."
Else
	lRet := .T.
Endif

Return ( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³F070Cmc7TcºAutor  ³Mauro Sano          º Data ³  06/04/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funcao para a captura do código CMC7 pelo leitor via       º±±
±±º          ³ teclado.                                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ ExpA1 = Array contendo os dados lidos do cheque:           º±±
±±º          ³ [1] - Banco | [2] - Agencia | [3] - Conta | [4] - Cheque   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA070                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function F070Cmc7Tc()
Local cCmc7 	:= Space(35)	// Recebera o conteudo lido do cheque
Local oCmc7						// Objeto do get do CMC7
Local oDlg						// Monta a tela de captura do codigo
Local aCmc7Tc	:= {}			// Armazena os dados do cheque; retorno da funcao
Local nOpcx 	:= 0


DEFINE MSDIALOG oDlg TITLE STR0199 FROM 200 , 001 TO 300 , 300 OF oMainWnd PIXEL	// "Leitura do código do cheque"
@ 010 , 018 Say STR0200 SIZE 050 , 050 OF oDlg PIXEL								// "Passe o cheque:"
@ 018 , 018 MSGET oCmc7 VAR cCmc7 PICTURE "@!" SIZE 120,009 OF oDlg PIXEL

DEFINE SBUTTON FROM 35 , 080 TYPE 1 ACTION (Iif (F070Confirma(cCmc7), (oDlg:End(), nOpcx := 1), oCmc7:SetFocus()) )  ENABLE OF oDlg
DEFINE SBUTTON FROM 35 , 110 TYPE 2 ACTION oDlg:End()  ENABLE OF oDlg

ACTIVATE MSDIALOG oDlg CENTERED

If nOpcx == 1  //Confirmou cheque

	If ExistBlock("F460CMTC")
		aCmc7Tc := ExecBlock("F460CMTC",.F.,.F.,cCmc7)
	Else
		Aadd( aCmc7Tc, SubStr(cCmc7, 2, 3) )	//Banco
		Aadd( aCmc7Tc, SubStr(cCmc7, 14, 6) )	//Cheque
		Aadd( aCmc7Tc, SubStr(cCmc7, 5, 4) )	//Agencia
		Aadd( aCmc7Tc, SubStr(cCmc7, 25, 8) )	//Conta
	Endif

Endif
//<34161168<0010002995>651020209808C
//<23728016<0010002185>777500568207C

Return( aCmc7Tc )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³FA070BtOK ³ Autor ³ Adrianne Furtado      ³ Data ³ 20/04/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Validacao no botao OK da tela de baixa					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ FA070BtOK()			 									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FA070BtOK()
Local lFa070BtOk := ExistBlock("F070BtOK")
Local lRet := .T.

// Se existe cheque relacionado a baixa, entao veririca se o valor dos cheques utilizados para baixa eh maior que o
// valor recebido. Se verdadeiro, nao permite a baixa ateh que seja equalizado o valor dos cheques com o recebido.
If nSomaCheq > 0
	If Type("nValRec") == "N" .And. Str( nSomaCheq, 17, 2 ) > Str( nValRec, 17, 2 )
	     Help( " ", 1, "CHEQBXNBAT" )
		 lRet := .F.
	 EndIf
EndIf

If lFa070BtOk
	lRet := ExecBlock("F070BtOK",.F.,.F.)
Endif

If	( SuperGetMv("MV_BXDTFIN",,"1") == "2" .And. !DtMovFin(dDtCredito,,"2") ) .Or.;
	( dDtCredito < dBaixa  .And. !GetMv("MV_ANTCRED") )
   lRet := .F.
Endif

If !ChqMotBx(cMotBx) .And. (MV_PAR08 == 1) .And. (SE1->E1_TIPO $ MVRECANT+"/"+MV_CRNEG)
	If Aviso(STR0144, STR0290 + CRLF + STR0291 + CRLF + STR0292, {STR0246,STR0245}, 3) == 1 //"O Motivo da Baixa esta configurado para NÃO GERAR cheque e a pergunta 'Gera Cheque para Adiantamento' esta como SIM. " # "Somente será gerado o Registro na SE5, sem atualizar saldo bancario e não será gerado Cheque." # "Deseja realmente continuar com o processamento?. "
		lRet := .T.
	Else
		lRet := .F.
	Endif
Endif

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³fa070Cm1  ³ Autor ³ Reynaldo Miyashita    ³ Data ³ 19/05/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Validacao do campo Correcao monetaria 1                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fa070Cm1( oCM1 ,oJuros ,oMulta )                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function fa070Cm1( oCM1 ,oJuros ,oMulta )
Local lOk     := .T.
Local aRet    := {}

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Template GEM - Calcula os valores de ProRata, Multa e Juros sobre o Titulo ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If HasTemplate("LOT") .and. ExistTemplate("GEMTitRec")
		aRet := ExecTemplate("GEMTitRec",.F.,.F.,{SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA ,nCM1 ,nProRata ,dBaixa })
		If Valtype(aRet) == "A"
			nJuros   := aRet[1]
			nMulta   := aRet[2]
		EndIf
	EndIf

	oCM1:refresh()
	oJuros:refresh()
	oMulta:refresh()

Return( lOk )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³fa070PRata³ Autor ³ Reynaldo Miyashita    ³ Data ³ 19/05/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Validacao do campo de Pro Rata Atraso diario                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ fa070PRata( oProRata ,oJuros ,oMulta )                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function fa070PRata( oProRata ,oJuros ,oMulta )
Local lOk       := .T.
Local aRet      := {}
Local aPcc		  := {}
Local lGerPCCBD := .F.
Local lPccBxCR	:= FPccBxCr(.T.)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Template GEM - Calcula os valores de Multa e Juros sobre o Titulo  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If HasTemplate("LOT") .and. ExistTemplate("GEMTitRec")
		aRet := ExecTemplate("GEMTitRec",.F.,.F.,{SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA ,nCM1 ,nProRata ,dBaixa })
		If Valtype(aRet) == "A"
			nJuros   := aRet[1]
			nMulta   := aRet[2]
		EndIf
	EndIf

If (!Empty(oProRata) .AND. oProRata:lModified)
	dBaixa      := CriaVar("E1_BAIXA")
	nTxMoeda 	:= If(SE1->E1_MOEDA > 1, If(SE1->E1_TXMOEDA > 0, SE1->E1_TXMOEDA,RecMoeda(dBaixa,SE1->E1_MOEDA)),0)
	If lPccBxCR .and. dBaixa < dLastPcc
		f070TotMes(dBaixa,.T.,,,,nTxMoeda)
	Else
		If !Empty(SE1->E1_NUMBOR)
			lGerPCCBD := FGERPCCBOR("R", SE1->(Recno()))
		EndIf
		If !__lPccMR .And. SE1->E1_TIPO # MVRECANT .and. !lGerPCCBD //.And. Empty(SE1->E1_NUMBOR)
			If !__lPccMR
				aPcc	:= newMinPcc(dBaixa, nValRec,SE1->E1_NATUREZ,"R",SA1->A1_COD+SA1->A1_LOJA,,,,,,cMotBx)
				nPis	:= aPcc[2]
				nCofins	:= aPcc[3]
				nCsll	:= aPcc[4]
				//Reestruturacao SE5 - Para gravação das tabelas FK3 e FK4
				nPisCalc	:= nPis
				nPisBaseC	:= nValRec
				nPisBaseR 	:= nValRec
				nCofCalc	:= nCofins
				nCofBaseC	:= nValRec
				nCofBaseR 	:= nValRec
				nCslCalc	:= nCsll
				nCslBaseC	:= nValRec
				nCslBaseR 	:= nValRec
			EndIf
		Endif
	EndIf
	If !__lIrfMR
		nIrrf := IIf(cPaisLoc == "BRA", FCaIrBxCR(nValRec), 0)
		nIrfBaseC := nValRec
		nIrfBaseR := nValRec
	EndIf
Endif

oProRata:refresh()
oJuros:refresh()
oMulta:refresh()

Return( lOk )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao	 ³FA070AtuTT³ Autor ³Norbert Waage Junior   ³ Data ³ 26/05/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Atualizacao dos totalizadores da tela                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³FA070AtuTT()                               					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³FINA070				            									  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function FA070AtuTT()
Local nX 		:= 0
Local nTamCol	:= Len(aCols)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Zera acumuladores³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nVlrNomCheq := 0
nVlRefBxChq := 0
nQtdCheq	:= 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Recalcula totais³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nX := 1 to nTamCol

	If !aTail(aCols[nX])
		nVlrNomCheq += aCols[nX][5] // VALOR NOMINAL
		If cPaisLoc == "BRA"
			nVlRefBxChq += aCols[nX][6] // VALOR REF. BAIXA
		EndIf
		nQtdCheq 	++
	EndIf

Next nX

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Atualiza objetos³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Type("oVlrNomCheq") == "O"
	oVlrNomCheq:Refresh()
Endif
If Type("oQtdCheq") == "O"
	oQtdCheq:Refresh()
Endif
If Type("oVlRefBxChq") == "O"
	oVlRefBxChq:Refresh()
Endif

Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Ana Paula N. Silva     ³ Data ³21/11/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³		1 - Pesquisa e Posiciona em um Banco de Dados     ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static function MenuDef()
Local lFa070BUT := ExistBlock("FA070BUT")
Private aRotina := {}

If __lTemMR == NIL
	__lTemMR := If(FindFunction("FTemMotor"), FTemMotor(), .F.)
EndIf

If GetNewPar("MV_ACATIVO",.F.)
	aAdd( aRotina,	{ STR0001, "FA070Pes" , 0 , 1,,.F. }) //"Pesquisar"
else
	aAdd( aRotina,	{ STR0001, "AxPesqui" , 0 , 1,,.F. }) //"Pesquisar"
endif

aAdd( aRotina,	{ STR0002, "fa070Visual" 	, 0 , 2 			}) //"Visualizar"
aAdd( aRotina,	{ STR0003, "fA070Tit" 		, 0 , 4 			}) //"Baixar"
aAdd( aRotina,	{ STR0004, "fA070Lot" 		, 0 , 4 			}) //"Lote"
aAdd( aRotina,	{ STR0005, "fA070Can" 		, 0 , 5 			}) //"Canc Baixa"
aAdd( aRotina,	{ STR0131, "fA070CAN" 		, 0 , 5	,52			}) //"Excluir"
aAdd( aRotina,	{ STR0139, "FA040Legenda"	, 0 , 6	, 	,.F.	}) //"Legenda"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica no parametro se gera um Contas a Pagar ³
//³ quando existir taxa na admistradora do cartao,  ³
//³ para habilitar menu de baixa por adminstradora  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SuperGetMV("MV_LJGERTX",,.F.)
	aAdd( aRotina,	{ STR0225, "LJXBxAdmFi" , 0 , 4 }) //"Baixa Adm/Fin."
Endif

//Rateio Multinatureza
If FindFunction("F040CMNT") .and. GetNewPar("MV_MULNATR",.F.)
	aAdd( aRotina,	{ STR0281 ,"F040CMNT()", 0 , 2})	//"Consulta Rateio Multi Naturezas"
Endif

If FindFunction("FTemMotor") .and. __lTemMR
	Aadd(aRotina,{ STR0285,"FINCRET('SE1')", 0, 2}) //'Consulta de Retenções'
EndIf
If lFa070BUT			
  ExecBlock("FA070BUT",.F.,.F.)
Endif
Return(aRotina)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³SumAbatPCC³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 05/02/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Soma titulos de abatimento relacionado a um determinado titu³±±
±±³          ³lo a receber - Pis, Cofins e Csll	                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³SumAbatPcc()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nome do Imposto(PIS, COFINS,CSLL ou PCC) 	                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³FINA070                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function SumAbatPCC( cImposto)
Local aAreaPcc:=GetArea()
Local nTotAbtPCC := 0
Local cPrefixo := SE1->E1_PREFIXO
Local cNumero	:= SE1->E1_NUM
Local cParcela := SE1->E1_PARCELA
Local cTipoAtu := SE1->E1_TIPO
Local cCliente := SE1->E1_CLIENTE
Local cLoja 	:= SE1->E1_LOJA
Local cTipo		:= "PCC"
Local cSeq		:= SE5->E5_SEQ

DEFAULT cImposto := "PCC"

//Se a sequencia de baixa posicionada nao for vazia
//Faz a busca dos valores de Pis e Cofins do titulo
If SE1->E1_SALDO == 0 .AND. !Empty(cSeq)

	//Verifico se eh a ultima sequencia das baixas do titulo
	//Caso nao seja, retorno zero ja que os impostos somente serao abatidos na ultima baixa do titulo
	If Select("__SE5") == 0
		ChkFile("SE5",.F.,"__SE5")
	Else
		dbSelectArea("__SE5")
	Endif
	dbSetOrder(7)
	MsSeek(xFilial("SE5")+cPrefixo+cNumero+cParcela+cTipoAtu+cCliente+cLoja+"zz",.T.)
	dbSkip(-1)
	If (xFilial("SE5")+cPrefixo+cNumero+cParcela+cTipoAtu+cCliente+cLoja+cSeq == ;
		__SE5->(E5_FILIAL+E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ))

		If Select("__SE1") == 0
			ChkFile("SE1",.F.,"__SE1")
		Else
			dbSelectArea("__SE1")
		Endif

		DO CASE
			CASE UPPER(cImposto) == "PIS"
				cTipo := MVPIABT
			CASE UPPER(cImposto) == "COFINS"
				cTipo := MVCFABT
			CASE UPPER(cImposto) == "CSLL"
				cTipo := MVCSABT
			OtherWise
				cTipo := "PCC"
		END CASE

		dbSetOrder( 1 )
		dbSeek( xFilial("SE1")+cPrefixo+cNumero+cParcela+IIF(cTipo == "PCC","",cTipo))

		While !Eof() .And. E1_FILIAL == xFilial("SE1") .And. E1_PREFIXO == cPrefixo .And.;
				E1_NUM == cNumero .And. E1_PARCELA == cParcela .and. IIF(cTipo == "PCC",.T.,cTipo == E1_TIPO)

		  	If E1_TIPO $ MVCSABT+"/"+MVCFABT+"/"+MVPIABT
				nTotAbtPCC += E1_VLCRUZ
			Endif

			dbSkip()
		Enddo
	Endif
Endif

RestArea(aAreaPcc)

Return (NoRound(nTotAbtPCC))

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³F070RTMNBL³ Autor ³ Mauricio Pequim Jr    ³ Data ³ 05/02/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Informa se o rateio Multinat foi realizado pelo valor bruto ³±±
±±³          ³ou liquido								                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³F070RTMNBL()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³FINA070                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F070RTMNBL()
Local aArea		:=GetArea()
Local lRtMnBrt := .T.
Local cChaveSev := SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO+E1_CLIENTE+E1_LOJA)+"1"
Local nTotRateio := 0

dbSelectArea("SEV")
dbSetOrder(2)

If SE1->E1_MULTNAT == "1" .And. MsSeek(xFilial("SEV")+cChaveSev)

	//Monto o total do rateio
	While !EOF() .AND. xFilial("SEV")+SEV->(EV_PREFIXO+EV_NUM+EV_PARCELA+EV_TIPO+EV_CLIFOR+;
		EV_LOJA+EV_IDENT) == xFilial("SEV")+cChaveSev

		//Apenas carteira a receber
		If SEV->EV_RECPAG == 'R'
			nTotRateio += SEV->EV_VALOR
		Endif
		DbSkip()
	EndDo

	//Verifico se o rateio foi liquido ou bruto
	If STR(SE1->E1_VALOR,17,2) > STR(nTotRateio,17,2)
		lRtMnBrt := .F.
	Endif

Endif

RestArea(aArea)

Return (lRtMnBrt)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³F070VLDBCO³ Autor ³ Andre O Anjos         ³ Data ³ 02/10/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Valida o cadastro do banco + agencia + conta informados na  ³±±
±±³          ³baixa do titulo (esta funcao foi criada pois a usada anteri ³±±
±±³          ³ormente era falha e permitia o erro do BOPS 133332)		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³lVdlCnta : Indica se valida Bco+Ag+Cnta ou somente Bco+Ag   ³±±
±±³			 ³lHelp : Indica se exibe o help FA100BCO					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³F070VLDBCO()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³FINA070                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F070VldBco(cBco,cAg,cCnta,lVldCnta,lHelp,cChaveBco,lTelaLote)
Local aArea		:= GetArea()
Local lRet 		:= .T.

DEFAULT lVldCnta  := .T.
DEFAULT cChaveBco := "" //Chave para considerar a agencia e/ou conta, quando necessario
DEFAULT lHelp := .F.
DEFAULT lTelaLote := .F.

If !lTelaLote
	If Empty(cChaveBco) .and. !oBanco:lModiFied
		cChaveBco:= cAg + cCnta
	Endif
EndIf

dbSelectArea("SA6")
SA6->(dbSetOrder(1))
If Empty(cBco) .OR. Empty(cAg) .OR. (lVldCnta .And. Empty(cCnta)) .OR. ;
	!SA6->(dbSeek(xFilial("SA6") + cBco + cAg + IIf(lVldCnta,cCnta,"")))
	If (!SA6->(Found()) .OR. SA6->A6_COD # cBco) .OR. Empty(cAg) .OR. (lVldCnta .And. Empty(cCnta))
		If SA6->(dbSeek(xFilial("SA6") + cBco + cChaveBco))
			cAg := SA6->A6_AGENCIA
			cCnta := SA6->A6_NUMCON
		Else
			If lHelp
				Help(" ",1,"FA100BCO")
				lValidou := .T.
			EndIf
			lRet := .F.
		Endif
	Else
		If lHelp
			Help(" ",1,"FA100BCO")
			lValidou := .T.
		EndIf
		lRet := .F.
	Endif
ElseIf !Empty(cBco) .AND. !Empty(cAg) .AND. (!lVldCnta .OR. Empty(cCnta))	//Conta
	If SA6->(Found()) .AND. SA6->(A6_FILIAL+A6_COD+A6_AGENCIA+A6_NUMCON) == xFilial("SA6")+cBco+cAg+cCnta
		If !Empty(SA6->A6_NUMCON)
			cCnta := SA6->A6_NUMCON
		Else
			If lHelp
				Help(" ",1,"FA100BCO")
				lValidou := .T.
			EndIf
			lRet := .F.
		Endif
	Else
		If lHelp
			Help(" ",1,"FA100BCO")
			lValidou := .T.
		EndIf
		lRet := .F.
	Endif
EndIf

// Verifica se o banco selecionado pode ser usado para baixa do titulo
If lRet .AND. !lTelaLote .and. !Empty( cCnta ) .AND. FXMultSld()
	lRet := FXVldBxBco( cBco, cAg, cCnta, SE1->E1_NATUREZ, SE1->E1_MOEDA )
	If !lRet
		lValidou := .T.
	EndIf
EndIf

If lRet .AND. !Empty(cBco) .AND. !Empty(cAg) .AND. !Empty(cCnta) .AND. !(IsInCallStack('FA070LOT')) .AND. AllTrim(Upper(ReadVar())) $ "CBANCO|CAGENCIA|CCONTA"
	If !(cBco + cAg + cCnta == nOldBanco + nOldAgencia + nOldConta)
		nOldBanco := cBco
		nOldAgencia := cAg
		nOldConta := cCnta
		If SA6->(A6_FILIAL+A6_COD+A6_AGENCIA+A6_NUMCON) == xFilial("SA6")+cBco+cAg+cCnta .AND. SA6->A6_RETENCA > 0			
			F070Ret()	// "Gatilha" a Data de Crédito dDtCredito (E5_DTDISPO) de acordo com o A6_RETENCA			
		EndIf
	EndIf
EndIf

RestArea(aArea)

Return (lRet)

Function AtulValidou() //Faz parte da F070VLDBCO

lValidou := .F.

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³CA070TudOk³ Autor ³Fabio Rogerio Pereira  ³ Data ³ 02/05/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Critica se todo o GetDados esta OK                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Objeto a ser verificado.                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ CdaA090                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function CA070TudOk()
Local lRet := .T.
Local nX   := 0

For nX := 1 To Len(aCols)
	If ! CadCheqLOk(.F.)
		lRet := .F.
		Exit
	Endif
Next

Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³F070OkLote³ Autor ³Mauricio Pequim Jr     ³ Data ³ 12/05/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Critica tela inicial da baixa por lote                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Banco do Lote.				                          ³±±
±±³          ³ ExpC2 = Agencia do Lote.			                          ³±±
±±³          ³ ExpC3 = Conta do Lote.				                          ³±±
±±³          ³ ExpC4 = Lote Financeiro.			                          ³±±
±±³          ³ ExpO1 = Objeto do Lote para foco se necessario             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA070                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F070OkLote(cBancolt,cAgencialt,cContalt,cLoteFin,oLoteFin)
Local lRet := .T.

IF Empty(cLoteFin)
	oLoteFin:SetFocus()
	lRet := .F.
Endif

If lRet .and. !(CarregaSA6(cBancolt,cAgencialt,cContalt,.T.,,.T.) .and. ValidaTotal())
	lRet := .F.
Endif

Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FinA070T   ³ Autor ³ Marcelo Celi Marques ³ Data ³ 27.03.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Chamada semi-automatica utilizado pelo gestor financeiro   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA070                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FinA070T(aParam)

	cRotinaExec := "FINA070"
	ReCreateBrow("SE1",FinWindow)
	FinA070(,aParam[1],.T.)
	dbSelectArea("SE1")
	ReCreateBrow("SE1",FinWindow)

	dbSelectArea("SE1")

	INCLUI := .F.
	ALTERA := .F.

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ FA070Diario º Autor ³ Gustavo Henrique º Data ³  31/05/08  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Seleciona codigo do diario contabil, utilizado na quando   º±±
±±º          ³ selecionada contabilizacao on-line.                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Financeiro - Localizacao Portugal                          º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function FA070Diario()
Local lRet := .T.

cCodDiario	:= CTBAVerDia()
lRet := !Empty( cCodDiario )

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³F070DtRe   ³ Autor ³ Clóvis Magenta	  ³ Data ³ 18/05/09   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Validacao do campo de Data de Recebimento da baixa		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ F070DtRe()			 									  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F070DtRe()
Local lRet	:= .T.

If	ExistBlock("F070DtRe")
	lRet := ExecBlock("F070DtRe",.F.,.F.)
Endif

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³F070TotMes³ Autor ³Adrianne Furtado      ³ Data ³10/09/2009³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Verifica o total de notas do Cliente que vencem no mesmo ³±±
±±³          ³mes.                                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpD1 - Data de referencia                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F070TotMes(dReferencia,lCalcRet,lCalcRA,lSE1,lAltData, nTxMoeda)
Local aAreaSE1	:= SE1->( GetArea() )
Local aRecnos	:= {}
Local dDataIni	:= FirstDay( dReferencia )
Local dDataFim	:= LastDay( dReferencia )
Local nVlMinImp	:= GetNewPar("MV_VL10925",5000)
Local nValorRc	:= 0
Local nValTit	:= 0
Local nVlrTit	:= 0
Local lSest		:= SE1->(FieldPos("E1_SEST"))	> 0  //Verifica campo de SEST
Local cModRetPIS:= SA1->A1_ABATIMP
Local lAltValor	:= STR(nValRec,17,2) != STR(nOldValRec,17,2)
//Controla o Pis Cofins e Csll na baixa
Local lPccBxCr	:= FPccBxCr(.T.)
Local nValOutImp:= 0
Local cModTot	:= GetNewPar( "MV_MT10925", "1" )
Local nProp		:= 1
Local nProp2	:= 1
Local nBaseRet	:= 0  //Base de retencao
Local nSE1Reg	:= SE1->(RECNO())
Local cChaveTit	:= SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO+E1_CLIENTE+E1_LOJA)
Local nX 		:= 0
Local lTodasFil	:= ExistBlock("MT103FRT")
Local aFil10925	:= {}
Local cFilAtu	:= cFilAnt /*SM0->M0_CODFIL*/
Local aArea		:= GetArea()

Local aCli10925	:= {}
Local lVerCliLj	:= ExistBlock("F070LOJA")
Local cQuery	:= ""
Local nLoop		:= 0
Local aValorBx	:= {}
Local lAltBxVal	:= .F.

// Considera baixas que geram ou nao movimento bancario.
// 1 = Somente os motivos que geram movimento bancario
// 2 = Considera todos os motivos de baixa.
Local lMotBxMBco := (SuperGetMv("MV_MB10925",.t.,"2") == "1")
Local aBxSemBco := {}
Local lCalcIssBx := !Empty( SE1->( FieldPos( "E1_TRETISS" ) ) ) .and. GetNewPar("MV_MRETISS","1") == "2"  //Retencao do ISS pela emissao (1) ou baixa (2)

Local lAplVlMin	:= .T.
Local aDadosImp	:= Array(5)
Local aTitBsImp	:= {}
Local lGravou	:= .F.
Local lLojaAtu	:= ( GetNewPar( "MV_LJ10925", "1" ) == "1" )
Local nTamTit	:= TamSX3("E5_PREFIXO")[1]+TamSX3("E5_NUMERO")[1]+TamSX3("E5_PARCELA")[1]+TamSX3("E5_TIPO")[1]
Local nTamTit2	:= TamSX3("E5_PREFIXO")[1]+TamSX3("E5_NUMERO")[1]+TamSX3("E5_PARCELA")[1]
Local lAchouRA	:= .F.
Local nValProp	:= 0
Local nTotAdto	:= 0
Local lBaixaAbat := .F.
Local lBxCec	:= .F.
Local lNotBax	:= .F.
Local nTotImpost := 0
Local lAglImp	:= .F.
Local aBaixa	:= {}
Local nY
Local lDigitado	:= .F.
Local aTitulos	:= {}
Local nImpRetEmi := 0
Local nValAbat	:= 0
Local nKco			:= 0
Local nT := 0
Local lVerifPCC := !Empty( SE1->( FieldPos( "E1_FORNPAI" ) ) ) .and. !Empty( SE1->( FieldPos( "E1_PROCPCC"   ) ) )
Local nTamForn :=  0
Local nINSSAnts := 0
Local nIRAnts   := 0
Local lTBxOTits := .F.
Local nTotCsAbt := nTotPisAbt := nTotCofAbt := 0
Local lFina330  := FwIsInCallStack("FINA330")
Local lUltBx 	:= .F.
Local lRecIss	:= .F.
Local lIrPjBxCr		:= FIrPjBxCr(.T.)
//Controle para não somar mais de uma vez o valor de PCC do documento posicionado, PCC na baixa
Local lPisDif   := .F.
Local lCofDif   := .F.
Local lCslDif   := .F.
Local lBxManual := .F.
//639.04 Base Impostos diferenciada
Local lBaseImp	:= F040BSIMP(2)
Local lIrrfBxPj := FIrPjBxCr(.T.)
Local lJurMulDes := SuperGetMv( "MV_IMPBAIX", .T., "2" ) == "1"

//Chamado SDFPWW
Local cAglutPCC := SuperGetMV("MV_PCCAGCL",,"1")
Local cAglutFil := SuperGetMV("MV_PCCAGFL",,"1")
Local aAreaSM0  := {}
Local aAreaSA1  := {}
Local cCGCSM0   := ""
Local cCGCCli   := ""
Local cCliPessoa := ""
Local cEmpAtu   := ""
Local lAdicPcc	:= .T. //Adicionar ao PCC titulo acumulado quando funcao chamada pelo FINA061.
Local aPccFina061	:=	{} // Impostos jah gerados anteriormente.
Local nPisFina061	:=  	0
Local nCofFina061	:=	0
Local nCslFina061	:=	0
Local nIrrfFina061:=	0
Local aAreaSE5		:=	SE5->(GetArea())
Local aBordAc		:= {} //Bordero acumulado pelo FINA061.
Local aPccAc		:= {} //Valores de PCC retidos de borderos cancelados no FINA061.
Local lCalc061		:= .T. //Se manutenção de bordero (FINA590) criando bordero de recebto de imposto nao preciso executar query´s.
Local cFilBusca		:= ""
Local lRoundPis		:= SuperGetMV("MV_RNDPIS",,.F.)
Local lRoundCof		:= SuperGetMV("MV_RNDCOF",,.F.)
Local lRoundCsl		:= SuperGetMV("MV_RNDCSL",,.F.)
Local lBQ10925		:= SuperGetMV("MV_BQ10925",,"2") == "1" .And. !lRaRtImp
Local cFiliais  := ""

Local lFina061 	:= AllTrim(FunName()) == "FINA061"
Local aStruct   := {}
Local aCampos   := {}
Local cAliasQry := ""
Local cSepNeg   := If("|"$MV_CRNEG,"|",",")
Local cSepProv  := If("|"$MVPROVIS,"|",",")
Local cAliasSE1 := ""

aFill(aDadosImp,0)

PRIVATE aBaixaSE5 := {}
PRIVATE lRaRtImp  := lFinImp .And.FRaRtImp()     //Define se ha retencao de impostos PCC/IRPJ no R.A

nParciais := Iif(Type("nParciais") == "U", 0, nParciais)

If Type("nJuros") == "U"
	PRIVATE nJuros := 0
Endif

If Type("nVA") == "U"
	PRIVATE nVa := 0
Endif

If Type("nOldJuros") == "U"
	PRIVATE nOldJuros := 0
Endif

If Type("nOldVA") == "U"
	PRIVATE nOldVA := 0
Endif

If Type("nOldMulta") == "U"
	PRIVATE nOldMulta := 0
Endif

Default lCalcRet := .F.
Default lCalcRA  := .F.
Default lSE1  := .T.   //Variavel para controle do uso do alias alternativo __SE1 para alguns posicionamentos.
Default lAltData := .F.
Default nTxMoeda :=0

If Alltrim(FunName())="FINA061" .And. lPccBxCr
	 lAdicPcc		:= !lDadosRet
	 aPccFina061	:=	aClone(aPccExc)
Endif

If Alltrim(FunName())="FINA590" .And. lPccBxCr
	lCalc061		:= lTotMes //Se manutenção de bordero (FINA590) criando bordero de recebto de imposto nao devo executar query´s.
Endif

nIss     := If(Type("nIss") != "N",0,nIss)
nIrrf    := If(Type("nIrrf") != "N",0,nIrrf)
nValComp := If(Type("nValComp") != "N",0,nValComp)
nValLiq  := If(Type("nValLiq") != "N",0,nValLiq)
dBaixa	:= If(Type("dBaixa") != "D",dDataBase,dBaixa)
nTotAbat := If(Type("nTotAbat") != "N",SumAbatRec( SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_MOEDA, "S"  ,dBaixa,,,@nTotCsAbt,@nTotPisAbt,@nTotCofAbt,,, nTxMoeda),nTotAbat)
nDescont := If(Type("nDescont") != "N",0,nDescont)
nMulta   := If(Type("nMulta") != "N",0,nMulta)
nJuros   := If(Type("nJuros") != "N",0,nJuros)
nVA 	 := If(Type("nV") != "N",0,nVA)
nAcresc  := If(Type("nAcresc") != "N",0,nAcresc)
nDecresc := If(Type("nDecresc") != "N",0,nDecresc)

nTamForn := If(lVerifPCC,TAMSX3("E1_FORNPAI")[1],0)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ POR MAIS ESTRANHO QUE PARE€A, ESTA FUNCAO DEVE SER CHAMADA AQUI! ³
//³                                                                  ³
//³ A fun‡„o SomaAbat reabre o SE1 com outro nome pela ChkFile para  ³
//³ efeito de performance. Se o alias auxiliar para a SumAbat() n„o  ³
//³ estiver aberto antes da IndRegua, ocorre Erro de & na ChkFile,   ³
//³ pois o Filtro do SE1 uptrapassa 255 Caracteres.                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SomaAbat("","","","R")

If lPccBxCr .and. dReferencia >= dLastPcc
	nVlMinImp	:= 0
EndIf

//Verificar ou nao o limite de 5000 para Pis cofins Csll
// 1 = Verifica o valor minimo de retencao
// 2 = Nao verifica o valor minimo de retencao
If SE1->E1_APLVLMN == "2"
	lAplVlMin := .F.
Endif

nDiferImp := 0

//Garanto o tamanho dos arrays de retencao
If Len(aDadosRef) < 7
	aDadosRef := Array(7)
	AFill( aDadosRef, 0 )
Endif
If Len(adadosRet) < 7
	aDadosRet := Array(7)
	AFill( aDadosRet, 0 )
Endif

If Type("aRecnosSE1") == "U"
	aRecnosSE1 := {}
Endif

aValorBx := Array(3)
AFill( aValorBx, 0 )

If cAglutPCC == "2" .Or. cAglutPCC == "3"
	If !ADMTabExc("SA1")
		Help( ,, 'HELP',, STR0230 , 1, 0) //'Parâmetro MV_PCCAGCL deve ser "1=Não Aglutina" para base de clientes compartilhada.'
		Return .T.
	ElseIf lVerCliLj
		Help( ,, 'HELP',, STR0231 , 1, 0) //'Parâmetro MV_PCCAGCL deve ser "1=Não Aglutina" para utilizar o ponto de entrada "F070LOJA."'
		Return .T.
	EndIf
EndIf
If (cAglutFil == "2" .Or. cAglutFil == "3") .And. lTodasFil
	Help( ,, 'HELP',, STR0232 , 1, 0) //'Parâmetro MV_PCCAGFL deve ser "1=Não Aglutina" para utilizar o ponto de entrada "MT103FRT".'
	Return .T.
EndIf

If !lPccBxCr
	Return .T.
Endif

If (nTotCsAbt + nTotPisAbt + nTotCofAbt) > 0
	Return .T.
Endif

If (lPccBxCr .Or.  lIrrfBxPj )  .And. Alltrim(FunName()) <>"FINA061"
	aAreaSE5		:=	SE5->(GetArea())
	SE5->(DbSetOrder(7))
	If SE5->(DbSeek(xFilial("SE5")+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO+SE1->E1_CLIENTE+SE1->E1_LOJA))
 		While !SE5->(Eof()) .And. SE5->E5_PREFIXO+SE5->E5_NUMERO+SE5->E5_PARCELA+SE5->E5_TIPO+SE5->E5_CLIFOR+SE5->E5_LOJA == ;
							  SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO+SE1->E1_CLIENTE+SE1->E1_LOJA .And.;
							  xFilial("SE5") == SE5->E5_FILIAL
	     		If	"FINA061" $ Upper(SE5->E5_HISTOR)
						If Alltrim(SE5->E5_MOTBX)	= "IRF"  .And. lIrrfBxPj
							nIrrfFina061		:=	SE5->E5_VALOR
						ElseIf Alltrim(SE5->E5_MOTBX)	= "PCC" .And. lPccBxCr
							nPisFina061	:=	SE5->E5_VRETPIS
							nCofFina061	:=	SE5->E5_VRETCOF
							nCslFina061	:=	SE5->E5_VRETCSL
						Endif
	     		Endif
	     		SE5->(Dbskip())
	    Enddo
  Endif
	SE5->(RestArea(aAreaSE5))
Endif

If (nIrrfFina061 + nPisFina061 + nCofFina061 + nCslFina061 ) > 0
	If 	lIrrfBxPj .And.  nIrrfFina061 > 0
		nIrrf	:=	0
	Endif

	If	lPccBxCr .And. (nPisFina061 + nCofFina061 + nCslFina061) > 0
		nPis		:=	0
		nCofins	:=	0
		nCsll		:=	0
	Endif

	Return .T.
Endif
If lFina330
	aAreaSA1	:= SA1->(GetArea())
	If SA1->(Dbseek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA))
		cModRetPIS:= SA1->A1_ABATIMP
	Endif
	SA1->(RestArea(aAreaSA1))
Endif
//Natureza nao retem imposto
If cModTot == "2" //Considera apenas titulos com retencao de PCC

	If aDadosRef[1] == Nil
		AFill( aDadosRef, 0 )
	Endif

	If aDadosRet[1] == Nil
		AFill( aDadosRet, 0 )
	Endif

	SED->(dbSetOrder(1))
	If lCalcRA
		cNatur := M->E1_NATUREZ
	Else
		cNatur := SE1->E1_NATUREZ
	Endif

	If lFina330 .AND. (xFilial('SA1')+Alltrim(SA1->A1_COD)+Alltrim(SA1->A1_LOJA)) <> (xFilial('SA1')+Alltrim(SE1->E1_CLIENTE)+Alltrim(SE1->E1_LOJA))
		SA1->(Dbseek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA))
	Endif
	SED->(MsSeek(xFilial("SED")+cNatur))
	If !(SED->ED_CALCPIS == "S" .and. SA1->A1_RECPIS  $ "S#P") .and.;
		!(SED->ED_CALCCSL == "S" .and. SA1->A1_RECCSLL $ "S#P") .and.;
		!(SED->ED_CALCCOF == "S" .and. SA1->A1_RECCOFI $ "S#P")
		Return .T.
	Endif
Endif

// Verificar se eh PA para não gerar recalculo de impostos.
If !lCalcRA .And. (SE1->E1_TIPO $ MVRECANT) .AND. !lFina330
	Return .T.
Endif

// Faz verificacao das baixas do titulo.
// Consiste se o motivo gera ou nao movimento bancario.
If lMotBxMBco .And. !lCalcRA .And. !Fa080MovBc() .and. !lFina330 .And. !lFina061
	nValRec += nPis+nCofins+nCsll+nIrrf+nIss
	nOldValRec := nValRec
	nPis := 0
	nCofins := 0
	nCsll := 0
	nIrrf := 0
	Return .T.
Endif

//Se o valor liquidado for diferente do valor da baixa total, foi um valor digitado
If nValLiq > 0 .and. (nValLiq+nTotAbat) != SE1->E1_SALDO .and. !lMotBxMBco
	lDigitado := .T.
	If !lAltValor
		Return .T.
	Endif
Endif
//Verificação para diferenciar se for baixa parcial
lAltBxVal := STR(SE1->E1_VALOR,17,2) != STR(SE1->E1_SALDO,17,2)
//Se a validação nao partiu do campo de valor
If !lDigitado .and. !lAltValor .and. ( Type('lF070Auto') =='U' .or. ! lF070Auto)
	nValRec += nPis+nCofins+nCsll+nIss
	If !lAltBxVal
		nValRec += Iif (lIrPjBxCr,0, nIrrf)
	Endif
	If nMulta == 0
	   nValRec -= nOldMulta
	Endif
Endif

If lCalcRet .and. lAplVlMin

	aFil10925 := {}
	aAreaSA1  := SA1->(GetArea())
	SA1->(DbSetOrder(1))
	If !lCalcRA
		SA1->(MsSeek(xFilial("SA1")+SE1->(E1_CLIENTE+E1_LOJA)))
	Else
		SA1->(MsSeek(xFilial("SA1")+M->(E1_CLIENTE+E1_LOJA)))
	EndIf

	aAreaSM0   := SM0->(GetArea())
	If !Empty(cCGCCli := SA1->A1_CGC)
		cCliPessoa := SA1->A1_PESSOA
		SA1->(DbSetOrder(3))
		cEmpAtu    := SM0->M0_CODIGO
		cCGCSM0    := SM0->M0_CGC
		SM0->(DbSetOrder(1))
		SM0->(MsSeek(cEmpAnt))
	Else
		aFil10925 := { cFilant }
	EndIf

	//Se parametro "MV_PCCAGCL" existe com conteudo diferente de 1
	If cAglutFil == "2" .Or. cAglutFil == "3"

		Do While !SM0->(Eof()) .And. SM0->M0_CODIGO == cEmpAtu
			//Verifica se a filial tem o mesmo CGC/Raiz de CGC
			If (cAglutFil == "2" .And. cCGCSM0 == SM0->M0_CGC) .Or. (cAglutFil == "3" .And. Left(cCGCSM0,8) == Left(SM0->M0_CGC,8))
				//Verifica se na filial existe fornecedor de mesmo CGC/Raiz de CGC
				cFilBusca := cFilAnt //SM0->M0_CODFIL
				If (cAglutPCC != "2" .And. cAglutPCC != "3") .Or. (SA1->(MsSeek(xFilial("SA1",cFilBusca)+Left(cCGCCli,Iif(cAglutPCC == "3" .And. cCliPessoa == "J",8,14)))) .And. cCliPessoa == SA1->A1_PESSOA)
					AAdd(aFil10925,cFilBusca)
				EndIf
			EndIf
			SM0->(DbSkip())
		EndDo

	//Verifico todas as filiais apenas quando SA1 compartilhado
	ElseIf lTodasFil
		aFil10925 := ExecBlock( "MT103FRT", .F., .F. )
	Else
		aFil10925 := { cFilant }
	Endif
	SM0->(RestArea(aAreaSM0))
	SA1->(RestArea(aAreaSA1))
	If lVerCliLj .And. cAglutPCC != "2" .And. cAglutPCC != "3"
		aCli10925 := ExecBlock("F070LOJA",.F.,.F.)
	Endif

	AFill( aDadosRef, 0 )
	AFill( aDadosRet, 0 )
	nValComp := 0

	For nKco := 1 to Len(aFil10925)

		dbSelectArea("SE5")
		cFilAnt := aFil10925[nKco]

		If !Empty(cCGCCli) .And. ( cAglutPCC == "2" .Or. cAglutPCC == "3" )
			aAreaSA1 := SA1->(GetArea())
			SA1->(DbSetOrder(3))
			SA1->(MsSeek(xFilial("SA1")+Left(cCGCCli,8)))
			aCli10925 := {}
			Do While !SA1->(Eof()) .And. xFilial("SA1")+Left(cCGCCli,8) == SA1->A1_FILIAL+Left(SA1->A1_CGC,8)
				//Garante o mesmo tipo de cliente e Novo no vetor
				If cCliPessoa == SA1->A1_PESSOA .And. AScan(aCli10925,{|x| x[1]+x[2] == SA1->(A1_COD+A1_LOJA) }) == 0
					//Raiz de CNPJ apenas para pessoa Juridica
					If cCliPessoa == "J" .And. cAglutPCC == "3" .And. Left(SA1->A1_CGC,8) == Left(cCGCCli,8)
						SA1->(AAdd(aCli10925,{A1_COD,A1_LOJA}))
					//Para pessoa fisica ou CPF/CNPJ identico
					ElseIf (cCliPessoa == "F" .Or. cAglutPCC == "2") .And. SA1->A1_CGC == cCGCCli
						SA1->(AAdd(aCli10925,{A1_COD,A1_LOJA}))
					EndIf
				EndIf
				SA1->(DbSkip())
			EndDo
			SA1->(RestArea(aAreaSA1))
		EndIf

		cFiliais += "'"+xFilial("SE5", aFil10925[nKco])+"'"
		If nKco < Len(aFil10925)
			cFiliais += ","
		EndIf
	Next nKco

	aCampos := { "E5_VALOR","E5_VRETPIS","E5_VRETCOF","E5_VRETCSL","E5_VLJUROS","E5_VLMULTA","E5_VLDESCO", "E5_FORNADT", "E5_LOJAADT"}

	If lCalcIssBx
		aadd(aCampos,"E5_VRETISS")
	Endif

	If lIrrfBxPj
		aadd(aCampos,"E5_VRETIRF")
	Endif

	aStruct := SE5->( dbStruct() )

	SE5->( dbCommit() )

	cAliasQry := GetNextAlias()

	cQuery := "SELECT E5_PREFIXO,E5_NUMERO,E5_PARCELA,E5_TIPO,E5_CLIFOR,E5_LOJA, E5_TXMOEDA, "
	cQuery += "E5_SEQ,E5_VALOR,E5_VRETPIS,E5_VRETCOF,E5_VRETCSL,E5_DATA,E5_VLJUROS,"
	cQuery += "E5_VLMULTA,E5_VLDESCO,E5_PRETPIS,E5_PRETCOF,E5_PRETCSL,E5_MOTBX,"
	cQuery += "E5_DOCUMEN,E5_RECPAG,E5_FORNADT,E5_LOJAADT, E5_HISTOR,E5_FILORIG, "

	If lCalcIssBx
		cQuery += "E5_VRETISS,"
	Endif

	If lIrrfBxPj
		cQuery += "E5_VRETIRF,"
	Endif

	IF lRaRtImp
   		cQuery += "E5_PRINSS, E5_PRISS, "
	Endif

	cQuery += "R_E_C_N_O_ RECNOSE5 FROM "
	cQuery += RetSqlName( "SE5" ) + " SE5 "
	cQuery += "WHERE "
	cQuery += "E5_FILIAL IN ("
	cQuery += cFiliais
	cQuery += ") AND "

	If Len(aCli10925) > 0  //Verificar determinados CLIENTES (raiz do CNPJ)
		cQuery += "( "
		For nLoop := 1 to Len(aCli10925)
			cQuery += "(E5_CLIFOR ='"   + aCli10925[nLoop,1]  + "' AND "
			cQuery += "E5_LOJA='"       + aCli10925[nLoop,2]  + "') OR "
		Next
		//Retiro o ultimo OR
		cQuery := Left( cQuery, Len( cQuery ) - 4 )
		cQuery += ") AND "
	Else  //Apenas o Fornecedor Atual
		If !lCalcRA
			cQuery += "E5_CLIFOR='"		+ SE1->E1_CLIENTE			+ "' AND "
			If lLojaAtu  //Considero apenas a loja atual
				cQuery += "E5_LOJA='"		+ SE1->E1_LOJA				+ "' AND "
			EndIf
		Else
			cQuery += "E5_CLIFOR='"		+ M->E1_CLIENTE			+ "' AND "
			If lLojaAtu  //Considero apenas a loja atual
				cQuery += "E5_LOJA='"		+ M->E1_LOJA				+ "' AND "
			EndIf
		Endif
	Endif

	cQuery += "E5_DATA>= '"		+ DToS( dDataIni )      + "' AND "
	cQuery += "E5_DATA<= '"		+ DToS( dDataFim )      + "' AND "
	cQuery += "E5_TIPO NOT IN " + FormatIn(MVABATIM,"|") + " AND "
	cQuery += "E5_TIPO NOT IN " + FormatIn(MV_CRNEG,cSepNeg)  + " AND "
	cQuery += "E5_TIPO NOT IN " + FormatIn(MVPROVIS,cSepProv) + " AND "
	cQuery += "E5_RECPAG = 'R' AND "
	cQuery += "E5_MOTBX <> 'FAT' AND "
	cQuery += "E5_MOTBX <> 'STP' AND "
	cQuery += "E5_MOTBX <> 'LIQ' AND "
	cQuery += "E5_SITUACA <> 'C' AND "

	If  Alltrim(FunName()) <>"FINA061"
		cQuery += "E5_HISTOR NOT LIKE  '%FINA061%' AND "
	Endif

	//Apenas titulos que tem retencao de PIS,Cofins e CSLL
	If cModTot == "2"
		cQuery += " ((E5_VRETPIS > 0 OR E5_VRETCOF > 0 OR E5_VRETCSL > 0) OR (E5_MOTBX = 'CMP')) AND "
   	Endif

	cQuery += "D_E_L_E_T_ = ' '"
	cQuery += "AND NOT EXISTS ( "
	cQuery += "SELECT A.E5_NUMERO "
	cQuery += "FROM "+RetSqlName("SE5")+" A "
	cQuery += "WHERE A.E5_FILIAL IN ("
	cQuery += cFiliais
	cQuery += ") AND "
	cQuery +=		"A.E5_PREFIXO=SE5.E5_PREFIXO AND "
	cQuery +=		"A.E5_NUMERO=SE5.E5_NUMERO AND "
	cQuery +=		"A.E5_PARCELA=SE5.E5_PARCELA AND "
	cQuery +=		"A.E5_TIPO=SE5.E5_TIPO AND "
	cQuery +=		"A.E5_CLIFOR=SE5.E5_CLIFOR AND "
	cQuery +=		"A.E5_LOJA=SE5.E5_LOJA AND "
	cQuery +=		"A.E5_SEQ=SE5.E5_SEQ AND "
	cQuery +=		"A.E5_TIPODOC='ES' AND "
	cQuery +=		"A.E5_RECPAG<>'R' AND "
	cQuery +=		"A.D_E_L_E_T_ = ' ')"

	cQuery := ChangeQuery( cQuery )

	dbUseArea( .T., "TOPCONN", TcGenQry(,,cQuery), cAliasQry, .F., .T. )

	For nLoop := 1 To Len( aStruct )
		If !Empty( AScan( aCampos, AllTrim( aStruct[nLoop,1] ) ) ) .and. Alltrim(Upper(aStruct[nLoop,2])) <> "C"
			TcSetField( cAliasQry, aStruct[nLoop,1], aStruct[nLoop,2],aStruct[nLoop,3],aStruct[nLoop,4])
		EndIf
	Next

	While !( cAliasQRY )->( Eof())
		cFilAnt := ( cAliasQRY )->E5_FILORIG

		nImpRetEmi := 0
		lUltBx := .F.
		// Consiste se o motivo gera ou nao movimento bancario.
		If lMotBxMBco
			If !Fa080MovBc((cAliasQRY)->E5_MOTBX)
				AAdd( aBxSemBco, ( cAliasQRY )->E5_PREFIXO+( cAliasQRY )->E5_NUMERO+( cAliasQRY )->E5_PARCELA+( cAliasQRY )->E5_TIPO+( cAliasQRY )->E5_CLIFOR+( cAliasQRY )->E5_LOJA)
				(cAliasQRY)->(DbSkip())
				Loop
			Endif
		Endif

		//Verificar ou nao o limite de 5000 para Pis cofins Csll
		// 1 = Verifica o valor minimo de retencao
		// 2 = Nao verifica o valor minimo de retencao (estes nao serao considerados na soma dos 5000)
		If SE1->E1_APLVLMN == "2"
			(cAliasQRY)->(DbSkip())
			Loop
		Endif

		nProp := 1
		nProp2 := 1
		nBasePcc := 0
		If ( cAliasQRY )->E5_VRETPIS + ( cAliasQRY )->E5_VRETCOF + ( cAliasQRY )->E5_VRETCSL > 0
			If lSE1
				cAliasSE1 := "SE1"
			Else
				cAliasSE1 := "__SE1"
			Endif
			(cAliasSE1)->(dbSetOrder(1))
			IF !((cAliasSE1)->(MsSeek(xFilial("SE1")+(cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA))))
				(cAliasQRY)->(DbSkip())
				Loop
			Endif

			//Se for PA, verifica se houve baixa parcial para carregar varivael
			//nProp2 com o percentual proporcional para recalcular os impostos.
			If (cAliasSE1)->E1_TIPO $ MVRECANT
				If (cAliasSE1)->E1_VALOR - (cAliasSE1)->E1_SALDO > 0
					nProp2 := (((cAliasSE1)->E1_VALOR - (cAliasSE1)->E1_SALDO) / (cAliasSE1)->E1_VALOR)
				Endif
			Endif
			If (cAliasSE1)->E1_MOEDA > 1
				nVlrTit := (cAliasSE1)->(E1_VLCRUZ)
			Else
				nVlrTit := (cAliasSE1)->(E1_VALOR)
			EndIf

			If lSest
				nVlrTit += (cAliasSE1)->E1_SEST
			Endif

			If lCalcIssBx
				nVlrTit -= (cAliasSE1)->E1_ISS
			Endif
			If !lIrrfBxPj
				nImpRetEmi := (cAliasSE1)->(E1_IRRF)
			ElseIf lRaRtImp .and. (cAliasSE1)->E1_TIPO $ MVRECANT
				nVlrTit += (cAliasSE1)->E1_IRRF
			EndIf

			nImpRetEmi += (cAliasSE1)->(E1_INSS+E1_ISS)

			If lRaRtImp .and. lPccBxCr .and. (Empty( ( cAliasQRY )->E5_PRETPIS ) .Or. Empty( ( cAliasQRY )->E5_PRETCOF ) .Or. Empty( ( cAliasQRY )->E5_PRETCSL ))
				If (cAliasQry)->E5_TIPO $ MVRECANT
					nVlrTit += (cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)
				Endif
			EndIf

			// Posiciona no cliente para verificar modo de retencao de ISS
			If !lCalcIssBx
				SA1->( dbSetOrder( 1 ) )
        		SA1->( MsSeek( xFilial( "SA1" ) + (cAliasQRY)->( E5_CLIFOR + E5_LOJA ) ) )
        		IF !("FINA040" $ (cAliasSE1)->E1_ORIGEM)
					SC5->(dbSetOrder(1))
					If SC5->(MsSeek(xfilial("SC5")+(cAliasSE1)->E1_PEDIDO))
						lRecIss := (SC5->C5_RECISS == "1" .And. GetNewPar("MV_DESCISS",.F.))
					Else
						lRecIss := (SA1->A1_RECISS == "1" .And. GetNewPar("MV_DESCISS",.F.))
					Endif
				Else
					lRecIss := (SA1->A1_RECISS == "1" .And. GetNewPar("MV_DESCISS",.F.))
				Endif
				If !lRecIss	// Cliente nao recolhe
					nImpRetEmi -= (cAliasSE1)->E1_ISS
				EndIf
			EndIf

			If lBaseImp
				nBasePCC := (cAliasSE1)->(E1_BASEPIS)
			Endif

			//aTitulos
			//[1] Chave do titulo
			//[2]	Valor Baixado bruto
			//[3]	PCC Retido
			//[4]	PCC Retido em baixa intermediaria (sera somado para compor a proporcao na ultima baixa)
			//[5]	IR Retido em baixa intermediaria (sera somado para compor a proporcao na ultima baixa)

			//Array para somar os valores de titulo e valores baixados
			If (nX := Ascan(aTitulos,{|x| x[1] == (cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)})) == 0
				aadd(aTitulos,{(cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA),nVlrTit,0,0,0})
				nX := Len(aTitulos)
				If(cAliasSE1)->(E1_MOEDA)>1
			   		aTitulos[nX,2] := (cAliasSE1)->(E1_VALOR)*(cAliasQRY)-> E5_TXMOEDA
				Else
					aTitulos[nX,2] := nVlrTit	//Somo as bases
				Endif
			Endif
			If !lJurMulDes .or. lUltBx
				nValProp := (cAliasQRY)->(E5_VALOR+E5_VLDESCO-E5_VLJUROS-E5_VLMULTA)
			Else
				nValProp := (cAliasQRY)->(E5_VALOR)
			Endif

			nValAbat := SumAbatRec( (cAliasSE1)->E1_PREFIXO,(cAliasSE1)->E1_NUM,(cAliasSE1)->E1_PARCELA,1, "V"  ,(cAliasQRY)->E5_DATA)
			If !lSE1 .and. (FwIsInCallStack("FA070LOT") .or. FwIsInCallStack("FA110AUT"))  //volta a posicionar no registro NF
				(cAliasSE1)->(dbSetOrder(1))
				(cAliasSE1)->(MsSeek(xFilial("SE1")+(cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)))
			Endif
			If (cAliasSE1)->E1_MOEDA>1
				If nValProp + nValAbat == (cAliasSE1)->E1_VALOR*(cAliasQRY)->E5_TXMOEDA
					nValProp += nValAbat
				Endif
			Else
				If nValProp + nValAbat == (cAliasSE1)->E1_VALOR
					nValProp += nValAbat
				Endif
			Endif
			If lCalcIssBx .and. lRaRtImp // valor proporcional para saber qual foi a base de calculo do PCC
				nValProp += (cAliasQRY)->(E5_VRETISS)
			Endif

			If lIrrfBxPj .and. lRaRtImp // valor proporcional para saber qual foi a base de calculo do PCC
				nValProp += (cAliasQRY)->(E5_VRETIRF)
			EndIf

			aTitulos[nX,3]+= nValProp - IF(lJurMulDes, (cAliasQRY)->(E5_VLJUROS+E5_VLMULTA) , 0)

			//Baixa pelo valor bruto digitado nao devo somar os impostos exceto na baixa final (saldo = 0)
			//(MV_BQ10925 = 1)
			If (Empty( ( cAliasQRY )->E5_PRETPIS ) .Or. Empty( ( cAliasQRY )->E5_PRETCOF ) .Or. Empty( ( cAliasQRY )->E5_PRETCSL ))
				If (aTitulos[nX,2] == nImpRetEmi+( ABS(nValAbat-nImpRetEmi) )+ aTitulos[nX,3]+(cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)+Iif(lIrrfBxPj,(cAliasQRY)->(E5_VRETIRF),0)) .OR.;
				(cAliasQry)->E5_TIPO $ MVRECANT
					nValProp += (cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)+ If (!lRaRtImp, aTitulos[nX,4],0)
					lUltBx := .T.
				ElseIf lMotBxMBco .and. (cAliasSE1)->E1_SALDO == 0
		 			If Ascan(aBxSemBco,(cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) ) > 0
		 		  		nValProp += (cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)+ If (!lRaRtImp, aTitulos[nX,4],0)+nValAbat
				  		lUltBx := .T.
				  	Endif
				Else
					aTitulos[nX,4]+= (cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)
					If lRaRtImp .OR. (aTitulos[nX,4] > 0 .and. lPccBxCr .and. !(lBQ10925))
						nValProp += (cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)
					EndIf
					If lIrrfBxPj .and. !lRaRtImp // valor proporcional para saber qual foi a base de calculo do PCC
						aTitulos[nX,4]+=(cAliasQRY)->(E5_VRETIRF)
					Endif
					If (cAliasSE1)->E1_MOEDA>1 .and. nValProp + nValAbat == (cAliasSE1)->E1_VALOR*(cAliasQRY)->E5_TXMOEDA
						nValProp += nValAbat
					Endif
				Endif
				aTitulos[nX,3]+= (cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)
			Else
				If lIrrfBxPj .and. !lRaRtImp
					aTitulos[nX,5]+=(cAliasQRY)->(E5_VRETIRF)//quando não reteve PCC mas reteve IR soma as bases
				Endif
			EndIf

			//Somo o valor dos impostos retidos na emissao para proporcionalizar corretamente
			If lPccBxCr .And. nValAbat >= 0
				If (aTitulos[nX,2] == aTitulos[nX,3] + nValAbat)
					nValProp += nValAbat
					If !lUltBx .and. !lRaRtImp
						nValProp += aTitulos[nX,4]// para nao somar 2x este valor (logo acima já somamos)
					Endif
				Elseif (lIrrfBxPj .and. !lRaRtImp)
					If aTitulos[nX,2] == ( aTitulos[nX,3] + nValAbat + (cAliasQRY)->(E5_VRETIRF) )
						nValProp += nValAbat
						If aTitulos[nX,5]> 0
							nValProp += aTitulos[nX,5] + If(lUltBx, (cAliasQRY)->(E5_VRETIRF),0)
						Else
							nValProp += (cAliasQRY)->(E5_VRETIRF)
						Endif
					Endif
				Endif
         	Else
				If (aTitulos[nX,2] == aTitulos[nX,3] + nImpRetEmi )
					nValProp += nImpRetEmi
				Endif
			EndIf

			//Somo o valor dos impostos retidos no RA para proporcionalizar corretamente
			If lPccBxCr .And. lRaRtImp .And. FwIsInCallStack("FINA070")
				If (aTitulos[nX,2] == aTitulos[nX,3] + (cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL))
					nValProp += (cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)
				ElseIf (cAliasQRY)->E5_MOTBX == "CMP" .and. (cAliasQRY)->E5_TIPO <> MVRECANT
					nValProp += (cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)
				Endif
				nValProp += (cAliasQRY)->(E5_PRISS+E5_PRINSS)
			EndIf

			If (cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) == cChaveTit
				If lJurMulDes
					nProp := nValProp / nVlrTit
				Else
					nProp := (nValProp-(cAliasQRY)->E5_VLDESCO) /nVlrTit
				EndIf
			Else
				lTBxOTits := .T.
				nINSSAnts += (cAliasSE1)->(E1_INSS)
				nIRAnts   += (cAliasSE1)->(E1_IRRF)
				If lJurMulDes .or. SE1->E1_SALDO == 0
					nProp := nValProp /nVlrTit
				Else
					nProp := (nValProp-(cAliasQRY)->E5_VLDESCO) /nVlrTit
				EndIf
			EndIf

			IF ( cAliasQRY )->E5_MOTBX =="PCC"
				nProp := 1
			Endif

			If nBasePcc > 0
				nVlrTit := nBasePcc * nProp
			Endif

			If lIrrfBxPj .and. !lRaRtImp // valor proporcional para saber qual foi a base de calculo do PCC
				aTitulos[nX,3] +=(cAliasQRY)->(E5_VRETIRF)
			EndIf

			//Incrementa a base de calculo para gerar os titulos se nao for
			//compensação entre carteiras e baixa de impostos via bordero
			//O registro de compensacao do PA nao deve integrar a base (este eh feito com o registro do
			//titulo principal
			If !(cAliasQRY)->E5_MOTBX $ "PCC#CEC"  .or. ;
			!((cAliasQRY)->E5_MOTBX $ "CMP" .AND. (cAliasQRY)->E5_TIPO $ MVRECANT)
				If nBasePcc == 0
					nVlrTit := nVlrTit * nProp
				Endif
				aDadosRef[1] += nVlrTit * nProp2
			EndIf
		Else
			If !(cAliasQRY)->E5_MOTBX $ "PCC#CEC" .and. ;
			!((cAliasQRY)->E5_MOTBX $ "CMP" .and. SUBSTR((cAliasQRY)->E5_DOCUMEN,nTamTit2+1,3) $ MV_CPNEG) .and. ; //Desconsiderar compensacoes com NDF
			!((cAliasQRY)->E5_MOTBX $ "CMP" .AND. (cAliasQRY)->E5_TIPO $ MVRECANT)
				aDadosRef[1] += (cAliasQRY)->(E5_VALOR+E5_VLDESCO-E5_VLJUROS-E5_VLMULTA)
			EndIf
		Endif

		//Incrementa a base de calculo para gerar os titulos
		If (cAliasQRY)->E5_MOTBX == "PCC"
			aDadosRef[1] += nVlrTit - (cAliasQRY)->(E5_VRETPIS+E5_VRETCOF+E5_VRETCSL)
		EndIf

		//Guardo os valores compensados entre carteiras para recompor a base de calculo
		If (cAliasQRY)->E5_MOTBX == "CEC" .And. (cAliasQRY)->E5_RECPAG == "R" .And.;
			(cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) == cChaveTit
			nValComp += (cAliasQRY)->E5_VALOR
		EndIf

		//Recalcula o valor do titulo principal para adicionar no campo
		//com os valores de titulos retidos
		If AliasIndic("SFQ")
			aAreaQry := GetArea()
			SFQ->(dbSetOrder(1))
			cChaveSE5 := (cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)
			If SFQ->(MsSeek(xFilial("SFQ")+cAliasSE1+cChaveSE5))
				While SFQ->(!Eof()) .and. SFQ->FQ_FILIAL == xFilial("SFQ") .And.;
						SFQ->(FQ_PREFORI+FQ_NUMORI+FQ_PARCORI+FQ_TIPOORI+FQ_CFORI+FQ_LOJAORI) == cChaveSE5
					cChaveSFQ := SFQ->(FQ_PREFDES+FQ_NUMDES+FQ_PARCDES+FQ_TIPODES+FQ_CFDES+FQ_LOJADES)
					(cAliasSE1)->(dbSetOrder(1))
					If (cAliasSE1)->(MsSeek(xFilial(cAliasSE1)+cChaveSFQ))
						aDadosRef[1] += (cAliasSE1)->E1_VALOR
					EndIf
					SFQ->(dbSkip())
				EndDo
			EndIf
			RestArea(aAreaQry)
		EndIf

		If (cAliasQRY)->E5_MOTBX == "CMP" .OR. ( cAliasQRY )->E5_VRETPIS + ( cAliasQRY )->E5_VRETCOF + ( cAliasQRY )->E5_VRETCSL  > 0

			If lSE1
				cAliasSE1 := "SE1"
			Else
				cAliasSE1 := "__SE1"
			Endif

			(cAliasSE1)->(dbSetOrder(1))
			IF !((cAliasSE1)->(MsSeek(xFilial("SE1")+(cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA))))
				(cAliasQRY)->(DbSkip())
				Loop
			Endif

			//aTitulos
			//[1] Chave do titulo
			//[2]	Valor Baixado bruto
			//[3]	PCC Retido
			//[4]	PCC Retido em baixa intermediaria (sera somado para compor a proporcao na ultima baixa)

			If (cAliasQRY)->E5_MOTBX == "CMP" .AND. !(cAliasQRY)->E5_TIPO $ MVRECANT

				nVlrTit := (cAliasSE1)->(E1_VALOR+E1_IRRF+E1_ISS+E1_INSS)

				If lSest
					nVlrTit += (cAliasSE1)->E1_SEST
				Endif

				If lCalcIssBx
					nVlrTit -= (cAliasSE1)->E1_ISS
				Endif

				If lIrrfBxPj
					nVlrTit -= (cAliasSE1)->(E1_IRRF)
				EndIf

				//Array para somar os valores de titulo e valores baixados
				If (nX := Ascan(aTitulos,{|x| x[1] == (cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)})) == 0
					aadd(aTitulos,{(cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA),nVlrTit,0,0,0})
					nX := Len(aTitulos)
					aTitulos[nX,2] := nVlrTit		//Somo as bases
				Endif
				aTitulos[nX,3]+= (cAliasQRY)->(E5_VALOR+E5_VLDESCO-E5_VLJUROS-E5_VLMULTA)
			EndIf

			If (Ascan(aTitBsImp,{|x| x == (cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ)})) = 0

				If !((cAliasQRY)->E5_MOTBX $ "CMP#FAT#STP")
					//Armazeno os valores calculados por titulo.
					If !(cAliasQRY)->E5_TIPO $ MVRECANT
						If (cAliasSE1)->E1_PIS > 0
							aDadosImp[1] += (cAliasSE1)->E1_PIS * nProp
							lGravou := .T.
						EndIf

						If (cAliasSE1)->E1_COFINS > 0
							aDadosImp[2] += (cAliasSE1)->E1_COFINS * nProp
							lGravou := .T.
						EndIf

						If (cAliasSE1)->E1_CSLL > 0
							aDadosImp[3] += (cAliasSE1)->E1_CSLL * nProp
							lGravou := .T.
						EndIf
					Else //Se for PA com imposto pendente
						If (cAliasSE1)->E1_PIS > 0 .and. (cAliasQRY)->E5_PRETPIS == '1'
							aDadosImp[1] += (cAliasSE1)->E1_PIS * nProp
							lGravou := .T.
						EndIf
						If (cAliasSE1)->E1_COFINS > 0 .and. (cAliasQRY)->E5_PRETCOF == '1'
							aDadosImp[2] += (cAliasSE1)->E1_COFINS * nProp
							lGravou := .T.
						EndIf
						If (cAliasSE1)->E1_CSLL > 0 .and. (cAliasQRY)->E5_PRETCSL == '1'
							aDadosImp[3] += (cAliasSE1)->E1_CSLL * nProp
							lGravou := .T.
						EndIf
					EndIf
				EndIf

				//Somo valores dos impostos de IRRF/ISS/INSS dos titulos que foram compensados
				//por PA que não reteve impostos, para recompor a base de calculo
				If (cAliasSE1)->(E1_IRRF+E1_ISS+E1_INSS) > 0 .AND. !(cAliasQRY)->E5_TIPO $ MVRECANT .And.;
				(cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA) != cChaveTit
					aAreaSE5 := (cAliasQRY)->(GetArea())
					dbSelectArea("SE5")
					dbSetOrder(7)
					If MsSeek(xFilial("SE5")+SUBSTR((cAliasQRY)->E5_DOCUMEN,1,nTamTit)+(cAliasQRY)->E5_FORNADT+;
					(cAliasQRY)->E5_LOJAADT)
						If	SE5->E5_PRETPIS == "1" .Or. SE5->E5_PRETCOF == "1" .Or. SE5->E5_PRETCSL == "1"
							aDadosImp[4] += (cAliasSE1)->(E1_IRRF+E1_ISS+E1_INSS)
							lGravou := .T.
						EndIf
					EndIf
					RestArea(aAreaSE5)
				EndIf

				//Somo valores dos impostos de IRRF/ISS/INSS dos titulos do tipo PA (Pagto Adiantado)
				//que foram compensados, para recompor a base de calculo(nBaseImp) do PIS/COF/CSL
				If (cAliasSE1)->(E1_IRRF+E1_ISS+E1_INSS) > 0 .AND. (cAliasQRY)->E5_TIPO $ MVRECANT .And.;
				SUBSTR((cAliasQRY)->E5_DOCUMEN,1,nTamTit)+(cAliasQRY)->(E5_FORNADT+E5_LOJAADT) == cChaveTit
					aAreaSE5 := (cAliasQRY)->(GetArea())
					dbSelectArea("SE5")
					dbSetOrder(7)
					If MsSeek(xFilial("SE5")+(cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA))
						If AliasIndic("SFQ")
							SFQ->(dbSetOrder(2))
							cChaveSE5 := SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA)
							If SFQ->(MsSeek(xFilial("SFQ")+"SE5"+cChaveSE5))
								lAchouRA := .T.
							EndIf
						EndIf
						If	(SE5->E5_PRETPIS $ "1# " .Or. SE5->E5_PRETCOF $ "1# " .Or. SE5->E5_PRETCSL $ "1# ") .And.;
							!lAchouRA
							aDadosImp[5] += (cAliasSE1)->(E1_IRRF+E1_ISS+E1_INSS)
							lGravou := .T.
							AAdd( aRecnos, ( cAliasQRY )->RECNOSE5 )
						EndIf
					EndIf
					RestArea(aAreaSE5)
				EndIf

				If lGravou
					AADD(aTitBsImp,(cAliasQRY)->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ))
					lGravou := .F.
				Endif
			Endif
		EndIf

		nImpostos := 0

		If ( cAliasQRY )->E5_PRETPIS $ " #4"
			aDadosRef[1] += (cAliasQRY)->E5_VRETPIS * nProp2
			nImpostos += (cAliasQRY)->E5_VRETPIS * nProp2
			//Armazeno os valores calculados por titulo, retirando os valores retidos
			If ( cAliasQRY )->E5_VRETPIS + ( cAliasQRY )->E5_VRETCOF + ( cAliasQRY )->E5_VRETCSL > 0 .And.;
			!((cAliasQRY)->E5_MOTBX $ "CMP#FAT#STP") .AND. !(cAliasQRY)->E5_TIPO $ MVRECANT
				aDadosImp[1] -= (cAliasQRY)->E5_VRETPIS * nProp2
			Endif
		EndIf

		If ( cAliasQRY )->E5_PRETCOF $ " #4"
			aDadosRef[1] += ( cAliasQRY )->E5_VRETCOF * nProp2
			nImpostos += (cAliasQRY)->E5_VRETCOF * nProp2
			//Armazeno os valores calculados por titulo, retirando os valores retidos
			If ( cAliasQRY )->E5_VRETPIS + ( cAliasQRY )->E5_VRETCOF + ( cAliasQRY )->E5_VRETCSL  > 0 .And.;
			!((cAliasQRY)->E5_MOTBX $ "CMP#FAT#STP") .AND. !(cAliasQRY)->E5_TIPO $ MVRECANT
				aDadosImp[2] -= (cAliasQRY)->E5_VRETCOF * nProp2
			Endif
		EndIf

		If ( cAliasQRY )->E5_PRETCSL $ " #4"
			aDadosRef[1] += ( cAliasQRY )->E5_VRETCSL * nProp2
			nImpostos += (cAliasQRY)->E5_VRETCSL * nProp2
			//Armazeno os valores calculados por titulo, retirando os valores retidos
			If ( cAliasQRY )->E5_VRETPIS + ( cAliasQRY )->E5_VRETCOF + ( cAliasQRY )->E5_VRETCSL  > 0 .And.;
			!((cAliasQRY)->E5_MOTBX $ "CMP#FAT#STP") .AND. !(cAliasQRY)->E5_TIPO $ MVRECANT
				aDadosImp[3] -= (cAliasQRY)->E5_VRETCSL * nProp2
			Endif
		EndIf

		//PRET == "1" -> pendente de retenção
		If ( cAliasQRY )->E5_PRETPIS == "1" .Or. ( cAliasQry )->E5_PRETCOF == "1" .Or. ( cAliasQry )->E5_PRETCSL == "1"

			If ( cAliasQRY )->E5_PRETPIS == "1"
				aDadosRef[2] += ( cAliasQRY )->E5_VRETPIS * nProp2
			EndIf

			If ( cAliasQRY )->E5_PRETCOF == "1"
				aDadosRef[3] += ( cAliasQRY )->E5_VRETCOF * nProp2
			EndIf

			If ( cAliasQRY )->E5_PRETCSL == "1"
				aDadosRef[4] += ( cAliasQRY )->E5_VRETCSL * nProp2
			EndIf

			AAdd( aRecnos, ( cAliasQRY )->RECNOSE5 )

		// Acumula os valores das baixas realizadas parcialmente
		// para ser utilizada na analise de possiveis problemas
		// de arredondamento que ocorrem na baixa total.
		Else

			If Empty((cAliasQRY)->E5_PRETPIS)
				aValorBx[1] += ( cAliasQRY )->E5_VRETPIS
			EndIf

			If Empty((cAliasQRY)->E5_PRETCOF)
				aValorBx[2] += ( cAliasQRY )->E5_VRETCOF
			EndIf

			If Empty((cAliasQRY)->E5_PRETCSL)
				aValorBx[3] += ( cAliasQRY )->E5_VRETCSL
			EndIf

		Endif

		( cAliasQRY )->( dbSkip())

	EndDo

	//Fecha a area de trabalho da query
	( cAliasQRY )->( dbCloseArea() )
	dbSelectArea( "SE1" )

	aBordAc	:=	{}
	aPccAc	:= {}
	If lPccBxCr  .And. Alltrim(FunName()) <>"FINA061" .And. lCalc061

	  	cAliasQry := GetNextAlias()

		cQuery := "SELECT E1_PREFIXO, E1_NUM, E1_PARCELA, E1_TIPO, E1_CLIENTE, E1_LOJA, E1_NUMBOR,  "
		cQuery += "E1_VALOR, E1_SABTPIS, E1_SABTCOF, E1_SABTCSL, E1_SALDO, E1_BAIXA, "
		cQuery += "R_E_C_N_O_ RECNOSE1 FROM "
		cQuery += RetSqlName( "SE1" ) + " SE1 "
		cQuery += "WHERE "
		//cQuery += "E1_FILIAL='"    	+ xFilial("SE1")     + "' AND "
		cQuery += "E1_FILIAL IN ("
		cQuery += cFiliais
		cQuery += ") AND "

		cQuery += "E1_CLIENTE='"		+ SE1->E1_CLIENTE		+ "' AND "
		cQuery += "E1_LOJA='"			+ SE1->E1_LOJA			+ "' AND "
		cQuery += " E1_EMISSAO>= '"	+ DToS( dDataIni )   + "' AND "
		cQuery += " E1_EMISSAO<= '"	+ DToS( dDataFim )   + "' AND "
		cQuery += " (E1_SABTPIS > 0 OR E1_SABTCOF > 0 OR E1_SABTCSL > 0)  AND "
		cQuery += " E1_NUMBOR <> ' ' AND  "
		cQuery += "D_E_L_E_T_=' '"

 		cQuery 		:= ChangeQuery(cQuery)
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry)

		While !( cAliasQRY )->( Eof())
			Aadd(aBordAc,{( cAliasQRY )->E1_SABTPIS,( cAliasQRY )->E1_SABTCOF,( cAliasQRY )->E1_SABTCSL,( cAliasQRY )->E1_VALOR})
			( cAliasQRY )->(Dbskip())
		Enddo

	   ( cAliasQRY )->( dbCloseArea() ) // Fecha a area de trabalho da query

	  	cAliasQry := GetNextAlias()

		cQuery := "SELECT E5_PREFIXO, E5_NUMERO, E5_PARCELA, E5_TIPO, E5_CLIFOR, E5_LOJA, E5_HISTOR, "
		cQuery += "E5_VALOR, E5_PRETPIS, E5_PRETCOF, E5_PRETCSL, E5_VRETPIS, E5_VRETCSL, E5_VRETCOF, "
		cQuery += "R_E_C_N_O_ RECNOSE5 FROM "
		cQuery += RetSqlName( "SE5" ) + " SE5 "
		cQuery += "WHERE "
		cQuery += "E5_FILIAL IN ("
		cQuery += cFiliais
		cQuery += ") AND "

		cQuery += "E5_CLIFOR='"		+ 	SE1->E1_CLIENTE	+ "' AND "
		cQuery += "E5_LOJA='"		+ 	SE1->E1_LOJA		+ "' AND "
		cQuery += " E5_DATA >= '"	+ 	DToS( dDataIni )  + "' AND "
		cQuery += " E5_DATA <= '"	+ 	DToS( dDataFim )  + "' AND "
		cQuery += " ((E5_PRETPIS = '8' AND E5_PRETCOF = '8' AND E5_PRETCSL = '8')  OR  "
		cQuery += " (E5_PRETPIS = '9' AND E5_PRETCOF = '9' AND E5_PRETCSL = '9'))  AND  "

		cQuery += "D_E_L_E_T_=' '"

 		cQuery := ChangeQuery(cQuery)
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry)

 		While !( cAliasQRY )->( Eof())

			Aadd(aPccAc,{(( cAliasQRY )->E5_VRETPIS * (-1)) , ;
							(( cAliasQRY )->E5_VRETCOF * (-1)) ,;
							(( cAliasQRY )->E5_VRETCSL * (-1)) ,( cAliasQRY )->E5_VALOR,""})

			( cAliasQRY )->(Dbskip())
		Enddo

	   ( cAliasQRY )->( dbCloseArea() ) // Fecha a area de trabalho da query

	Endif
	aDadosRef[ 6 ] := AClone( aRecnos )

Endif
cFilAnt := cFilAtu
RestArea(aArea)
If aDadosRef[1] == Nil
	AFill( aDadosRef, 0 )
Endif
aDadosRet := aClone(aDadosRef)

//Calculo do Pis, Cofins e Csll
SE1->(dbGoto(nSE1Reg))
SED->(dbSetOrder(1))
SED->(MsSeek(xFilial("SED")+SE1->E1_NATUREZ))
SA1->(dbSetOrder(1))
SA1->(MsSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA))

//Se a validação partiu do campo de valor
If lAltValor
	nBaseImp := nValRec+nValComp
	If !lJurMulDes
		nBaseImp := nBaseImp+nDescont-nJuros-nVA-nMulta-nAcresc+nDecresc
	Else
		nBaseImp:= nBaseImp-nDescont//+nJuros+nMulta+nAcresc-nDecresc
	Endif
Else
	If !lJurMulDes
		nBaseImp := nValRec+nDescont+nTotAbat-nJuros-nVA-nMulta-nAcresc+nDecresc
	Else
		If nJuros <> nOldJuros
			nValRec -= nOldJuros
		EndIf
		// Desconto não é abatido na base de imposto, porque isso já feito na função FaDescFin (FINXFUN.PRW)
		nBaseImp := nValRec+nJuros+nVA+nMulta+nAcresc-nDecresc
	EndIf

Endif

//Verificação para diferenciar se for baixa parcial
lAltBxVal := STR(SE1->E1_VALOR,17,2) != STR(SE1->E1_SALDO,17,2)

If !lAltValor
	nBaseImp += nValOutImp + aDadosRet[7] + aDadosImp[4] - aDadosImp[5] + nValComp
Endif

//Caso o titulo possua o valor de base dos impostos preenchidos, considero
//esse valor com base para calculo, desprezando o valor da nota fiscal
nValTit := SE1->E1_VALOR + nValOutImp		//valor bruto do titulo reconstituido (valor + outros impostos)

nProp := 1

If SE1->E1_BASEPIS > 0
	nProp := SE1->E1_BASEPIS/nValtit				//Proporcao entre a base e o valor bruto do titulo
	nValTit := SE1->E1_BASEPIS
Endif

If SE1->E1_MOEDA >1
	nValTit:= xMoeda(nValTit,SE1->E1_MOEDA,1,dDatabase,3,nTxMoeda)
EndIf

If !lAltValor .and. !lJurMulDes
	If !FwIsInCallStack("FINA110") .AND. nParciais > 0 .and. !lRaRtImp .and. !lBQ10925
		If !Empty( aTitulos )
			nBaseImp := nValRec - aTitulos[nX][4] // PCC retido em baixas parciais anteriores
		Else
			nBaseImp := nValRec
		EndIf
	Else
		nBaseImp := nValTit 				//Base liquida para calculo dos impostos
	EndIf
ElseIf !FwIsInCallStack("FINA060")
	nBaseImp := nValRec
Else
	nBaseImp	:= nBaseImp * nProp
Endif

//Procura pelas baixas deste titulo caso seja baixa parcial e esteja baixando em mes diferente
If lAltBxVal .And. !lAltValor .and. !lJurMulDes
	aBaixa := Sel070Baixa("VL /BA /CP /",SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_TIPO,@nTotAdto,@lBaixaAbat,SE1->E1_CLIENTE,SE1->E1_LOJA,@lBxCec,.F.,@lNotBax,@nTotImpost,@lAglImp,.T.)
	For nY := 1 to Len(aBaixaSE5)
		If !aBaixaSE5[nY][4] $ MVRECANT
			nBaseImp -= aBaixaSE5[nY][8] * nProp
			If lRaRtImp .And. (aBaixaSE5[nY][21] == " " .or.  (aBaixaSE5[nY][21] == "7" .and. aBaixaSE5[nY][29] $ "CMP"))
				nBaseImp -= (aBaixaSE5[nY][18]+aBaixaSE5[nY][19]+aBaixaSE5[nY][20]+aBaixaSE5[nY][30])// subtrair impostos PCC
			ElseIf lRaRtImp .And. (aBaixaSE5[nY][21] == " " .or.  (aBaixaSE5[nY][21] == "7" .and. aBaixaSE5[nY][29] $ "CMP")) .and.;
				aBaixaSE5[nY][18]+aBaixaSE5[nY][19]+aBaixaSE5[nY][20] > 0
				nBaseImp -= nValProp 	// Subtrai outras baixas parciais
			Elseif lRaRtImp .And. lIrrfBxPj
				nBaseImp -= aBaixaSE5[nY][30]
			Endif
			If !lJurMulDes
				nBaseImp+= (aBaixaSE5[nY][14]+aBaixaSE5[nY][15])
			Endif
			If lRaRtImp
		 		nBaseImp -= aBaixaSE5[nY][32]+aBaixaSE5[nY][33]
		 	Endif

		EndIf
	Next
EndIf

//Base diferenciada para calculo dos impostos
nBaseRet := nBaseImp += nValComp
If  Len(aPccAc) > 0
	For nX	:= 1 To Len(aPccAc)
		aDadosImp[1]	+= aPccAc[nX,1] //Pis
		aDadosImp[2]	+=	aPccAc[nX,2] //Cofins
		aDadosImp[3]	+=	aPccAc[nX,3] //Csll
	Next
Endif

lBxManual := FunName() == "FINA070" .Or. ( FunName() == "FINA740" .And. FwIsInCallStack( "FINA070" ) )//Verifica se é uma baixa manual

//PIS
If SE1->E1_PIS > 0
	If SE1->E1_MOEDA > 1

		nVlPis:= xMoeda(SE1->E1_PIS,1,SE1->E1_MOEDA,SE1->E1_EMISSAO,5,,If(SE1->E1_TXMOEDA>0,SE1->E1_TXMOEDA,0))
		nVlPis:= xMoeda(nVlPis,SE1->E1_MOEDA,1,dDataBase,5,nTxMoeda)

	Else
		nVlPis := SE1->E1_PIS
	EndIf

	If lRoundPis //Trunco ou arredondo o valor de PIS conforme o parâmetro MV_RNDPIS
		nPis := Round(( nBaseImp * nVlPis ) / nValTit,TamSX3("E1_PIS")[2])
	Else
		nPis := NoRound(( nBaseImp * nVlPis ) / nValTit,TamSX3("E1_PIS")[2])
	EndIf
	//Verifico possiveis problemas de arredondamento
	If ABS(SE1->E1_PIS - (aDadosRet[2] + aValorBx[1] + nPis)) == 0.01
		nPis += (SE1->E1_PIS - (aDadosRet[2] + aValorBx[1] + nPis)	)
	EndIf

	//Reestruturacao SE5 - Não utilizar para mais nada (Pedro Lima)
	nPisCalc	:= nPis
	nPisBaseC	:= nBaseImp

	If ROUND(aDadosImp[1],2) <> ROUND(aDadosRet[2],2) .And. SE1->E1_SALDO > 0 .And. Alltrim(FunName()) <>"FINA061" .and. !FwIsInCallStack("FA200GER")
		nPis += aDadosImp[1]
		lPisDif := lPccBxCr .And. lBxManual
		If nPis < 0
			nPis := 0
		EndIf
	EndIf
EndIf

// COFINS
If SE1->E1_COFINS > 0
	If SE1->E1_MOEDA > 1

		nVlCofins:= xMoeda(SE1->E1_COFINS,1,SE1->E1_MOEDA,SE1->E1_EMISSAO,5,,If(SE1->E1_TXMOEDA>0,SE1->E1_TXMOEDA,0))
		nVlCofins:= xMoeda(nVlCofins,SE1->E1_MOEDA,1,dDataBase,5,nTxMoeda)

	Else
		nVlCofins:= SE1->E1_COFINS
	EndIf

	If lRoundCof //Trunco ou arredondo o valor de COFINS conforme o parâmetro MV_RNDCOF
		nCofins := Round(( nBaseImp * nVlCofins ) / nValTit,TamSX3("E1_COFINS")[2])
	Else
		nCofins := NoRound(( nBaseImp * nVlCofins ) / nValTit,TamSX3("E1_COFINS")[2])
	EndIf
	//Verifico possiveis problemas de arredondamento
	If ABS(SE1->E1_COFINS - (aDadosRet[3] + aValorBx[2] + nCofins)) == 0.01
		nCofins += SE1->E1_COFINS - (aDadosRet[3] + aValorBx[2] + nCofins)
	EndIf

	//Reestruturacao SE5 - Não utilizar para mais nada (Pedro Lima)
	nCofCalc	:= nCofins
	nCofBaseC	:= nBaseImp

	If ROUND(aDadosImp[2],2) <> ROUND(aDadosRet[3],2) .And. SE1->E1_SALDO > 0 .And. Alltrim(FunName()) <>"FINA061" .and. !FwIsInCallStack("FA200GER")
		nCofins += aDadosImp[2]
		lCofDif := lPccBxCr .And. lBxManual
		If nCofins < 0
			nCofins := 0
		EndIf
	EndIf
EndIf

// CSLL
If SE1->E1_CSLL > 0
	If SE1->E1_MOEDA > 1
        nVlCsll := xMoeda(SE1->E1_CSLL,1,SE1->E1_MOEDA,SE1->E1_EMISSAO,5,,If(SE1->E1_TXMOEDA>0,SE1->E1_TXMOEDA,0))
		nVlCsll := xMoeda(nVlCsll,SE1->E1_MOEDA,1,dDataBase,5,nTxMoeda)
	Else
		nVlCsll := SE1->E1_CSLL
	EndIf

	If lRoundCsl //Trunco ou arredondo o valor de CSLL conforme o parâmetro MV_RNDCSL
		nCsll := Round(( nBaseImp * nVlCsll ) / nValTit,TamSX3("E1_CSLL")[2])
	Else
		nCsll := NoRound(( nBaseImp * nVlCsll ) / nValTit,TamSX3("E1_CSLL")[2])
	EndIf

	//Verifico possiveis problemas de arredondamento
	If ABS(SE1->E1_CSLL - (aDadosRet[4] + aValorBx[3] + nCsll)) == 0.01
		nCsll += SE1->E1_CSLL - (aDadosRet[4] + aValorBx[3] + nCsll)
	EndIf

	//Reestruturacao SE5 - Não utilizar para mais nada (Pedro Lima)
	nCslCalc	:= nCsll
	nCslBaseC	:= nBaseImp

	If ROUND(aDadosImp[3],2) <> ROUND(aDadosRet[4],2) .And. SE1->E1_SALDO > 0 .And. Alltrim(FunName()) <>"FINA061" .and. !FwIsInCallStack("FA200GER")
		nCsll += aDadosImp[3]
		lCslDif := lPccBxCr .And. lBxManual
		If nCsll < 0
			nCsll := 0
		EndIf
	EndIf
EndIf

If  Len(aBordAc) > 0
	For nX:=	 1 To Len(aBordAc)
		aDadosRet[1]	+= aBordAc[nX,4]
		aDadosRet[2]	+=	aBordAc[nX,1]
		aDadosRet[3]	+=	aBordAc[nX,2]
		aDadosRet[4] 	+= aBordAc[nX,3]
	Next
Endif

If GetNewPar("MV_MRETISS","1") == "1" //ISS na emissão do título principal
	nIss := SE1->E1_ISS
EndIf
//Verifico o valor a reter
   //Nao retem Pis,Cofins,CSLL
If cModRetPis == "3"  //Nao retem PIS
	nVlRetPis := nPis
	nVlRetCof := nCofins
	nVlRetCsl := nCsll
	nPis := 0
	nCofins := 0
	nCsll := 0
Else
	//Calculo do Sistema
	IF cModRetPis == "1"
		If Alltrim(FunName())=="FINA061"
			nValBase := nBaseRet
		Else
			nValBase := aDadosRet[1] + (nBaseRet)
		EndIf
		If nValBase <= nVlMinImp .and. lAplVlMin .And. Len(aBordAc) == 0
			nVlRetPis := nPis
			nVlRetCof := nCofins
			nVlRetCsl := nCsll
			nPis := 0
			nCofins := 0
			nCsll := 0
			aDadosRet[2] := 0
			aDadosRet[3] := 0
			aDadosRet[4] := 0
		Endif
	Endif

	If nPis+nCofins+nCsll+nIrrf+ aDadosRet[2]+ aDadosRet[3]+ aDadosRet[4] > 0
		If nPis+nCofins+nCsll+aDadosRet[2]+ aDadosRet[3]+ aDadosRet[4] > 0
			nVlRetPis := nPis
			nVlRetCof := nCofins
			nVlRetCsl := nCsll
			If Alltrim(FunName())="FINA061" .And. lPccBxCr
				If ValType(aPccFina061) <> "U"
				 	If Len(aPccFina061) > 0 .And. (aPccFina061[1,1]+aPccFina061[1,2]+aPccFina061[1,3] <> aDadosRet[2]+aDadosRet[3]+aDadosRet[4] )
				 	  lAdicPcc	:=	.F.
				 	Endif
            Endif
				If lAdicPcc
					nPis    := nVlRetPis + aDadosRet[2]
					nCofins := nVlRetCof + aDadosRet[3]
					nCsll   := nVlRetCsl + aDadosRet[4]
				Endif
			Else
				//Essas variáveis verificam se já houve uma soma do valor do PCC do próprio documento para não dobrar o valor de retenção
				If !lPisDif
					nPis    := nVlRetPis + aDadosRet[2]
				EndIf
				If !lCofDif
					nCofins := nVlRetCof + aDadosRet[3]
				EndIf
				If !lCslDif
					nCsll   := nVlRetCsl + aDadosRet[4]
				EndIf
			Endif
		Endif
		nValorRc := nValRec - nPis - nCofins - nCsll - nIrrf //- nIss

		If nValorRc < 0
			nValorRc += nPis + nCofins + nCsll

			nTotARet := nPis + nCofins + nCsll + nIrrf + nIss

			nDiferImp := nValorRc - nTotARet

			If nDiferImp < 0
				nFatorRed := 1 - ( Abs( nDiferImp ) / nTotARet )
				nPis  := NoRound( nPis * nFatorRed, 2 )
				nCofins := NoRound( nCofins * nFatorRed, 2 )
				nIrrf	:= NoRound( nIrrf * nFatorRed, 2 )
				nCsll := nValorRc - ( nPis + nCofins + nIrrf )
			Endif
		EndIf
	Else
		//Natureza nao calculou Pis/Cofins/Csll
		aDadosRet[1] := 0
	Endif
Endif

SE1->( RestArea( aAreaSE1 ) )

If lAltValor .or. lAltData
	If  Alltrim(FunName()) = "FINA061"
		nValRec	:=	nOldValRec -	(nPis+nCofins+nCsll+ IIf(lIrrfBxPj,nIrrf,0))
	ElseIf !lRaRtImp .and. !lBQ10925
		nValRec -= nPis+nCofins+nCsll+nIrrf//+nIss
	ElseIf FwIsInCallStack( "FA070TIT" ) .And. lAltData .And. nOldValRec <> nValRec .And. SE1->E1_VALOR >= nValRec - ( nPis + nCofins + nCsll )//Ao alterar apenas a data de um titulo que retem PCC, o sistema estava deixando de abater o valor do pcc no título
		nValRec -= nPis+nCofins+nCsll
	Endif
Else
	If  Alltrim(FunName()) = "FINA061"  .And. lIrrfBxPj
		nValRec -= nIrrf
	ElseIf 	Alltrim(FunName()) = "FINA110"
		nValRec -= (nPis + nCofins + nCsll + nIrrf)
	Endif
Endif
nOldValRec := nValRec
nOldPis		:= nPis
nOldCofins	:= nCofins
nOldCsll	:= nCsll

//Reestruturacao SE5 - Não utilizar para mais nada (Pedro Lima)
nPisBaseR   := nCsll * 100
nCofBaseR   := nCsll * 100
nCslBaseR   := nCsll * 100

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³F070DelTxBx  ³ Autor ³ Adrianne Furtado   ³ Data ³ 20/10/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Deleta titulos de imposto Pis Cofins Csll gerados na baixa. ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA070                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F070DelTxBx(cFil)
Local cChaveImp := ""
Local aAreaDTB  := GetArea()
Local aAreaSE1  := SE1->(GetArea())
Local lExistFJU := FJU->(ColumnPos("FJU_RECPAI")) > 0 .and. FindFunction("FinGrvEx")
Local cTitPai   := SE1->(E1_PREFIXO + E1_NUM + E1_PARCELA + E1_TIPO + E1_CLIENTE + E1_LOJA)
Local cNatur	:= &(SuperGetMv("MV_IRF",,""))
Local cChave	:= SE1->(E1_PREFIXO + E1_NUM) 
Local cFilE2	:= xFilial("SE2")

Default cFil 	:= xFilial("SE1")

If ( cPaisLoc == "BRA" )
    cChaveImp := SE1->(E1_CLIENTE + E1_LOJA + E1_PREFIXO + E1_NUM)
    dbSelectArea("SE1")
    dbSetOrder(2)
    MsSeek(cFil + cChaveImp)

    While !Eof() .And. E1_FILIAL + E1_CLIENTE + E1_LOJA + E1_PREFIXO + E1_NUM == cFil + cChaveImp
        IF E1_TIPO $ "PIS|COF|CSL|IRF" .And. ;
        	("FINA070" $ SE1->E1_ORIGEM .or. "FINA110" $ SE1->E1_ORIGEM) .and. ;
			SE5->E5_SEQ == SE1->E1_SEQBX .AND. RTrim(cTitPai) == RTrim(SE1->E1_TITPAI)
				If lExistFJU
                FinGrvEx("R")
            Endif
            RecLock("SE1",.F.,.T.)
            SE1->(dbDelete())
			SE1->(msUnLock())
        EndIf
        SE1->(dbSkip())
    EndDo

	dbSelectArea("SE2")
    dbSetOrder(1)//
    SE2->(MsSeek(cFilE2 + cChave))

    While !Eof() .and. Alltrim(SE2->(E2_FILIAL +E2_PREFIXO + E2_NUM )) == AllTrim(cFilE2 +cChave)
        IF SE2->E2_TIPO == MVTAXA .and. Alltrim(SE2->E2_NATUREZ) == Alltrim(cNatur) .And. Alltrim(cTitPai) == Alltrim(SE2->E2_TITPAI) .and.;
            (Alltrim(SE2->E2_ORIGEM) == "FINA070" .or. Alltrim(SE2->E2_ORIGEM) == "FINA110")  .AND. SE5->E5_SEQ == SE2->E2_SEQBX
            If lExistFJU
                FinGrvEx("R")
            Endif
            RecLock("SE2",.F.,.T.)
            SE2->(dbDelete())
			SE2->(msUnLock())
        EndIf
        SE2->(dbSkip())
    EndDo
Endif

RestArea(aAreaSE1)
RestArea(aAreaDTB)

Return .T.


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FA070SITEFºAutor  ³Microsiga           º Data ³  17/06/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funcao para deixar o registro da FIF disponivel            º±±
±±º          ³ para nova conciliacao mediante cancelamento ou estorno da  º±±
±±º          | baixa                                                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function FA070SITEF(cPrefixo,cNum,cParc,cTipo)
Local lRet   := .T.
Local aArea  := GetArea()

If AliasInDic("FIF")
	dbSelectArea("FIF")
	FIF->( dbSetOrder( 3 ) ) //FIF_FILIAL+FIF_PREFIX+FIF_NUM+FIF_PARC+FIF_TIPO
	If dbSeek( FWxFilial("FIF") + cPrefixo + cNum + cParc + cTipo )
		BEGIN TRANSACTION

		RecLock( "FIF", .F. )
		FIF->FIF_STATUS := "1"
		FIF->FIF_PREFIX := Space( Len( FIF->FIF_PREFIX ) )
		FIF->FIF_NUM    := Space( Len( FIF->FIF_NUM ) )
		FIF->FIF_PARC   := Space( Len( FIF->FIF_PARC ) )
		FIF->FIF_TIPO   := Space( Len( FIF->FIF_TIPO ) )
		FIF->( MsUnlock() )

		END TRANSACTION
	EndIf
EndIf

RestArea(aArea)
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Fa070VldBco º Autor³ Ramon Teodoro  º Data ³  09/09/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Verifica se o cheque já existe e impede a alteração        º±±
±±º          ³ do banco inclusive pela consulta padrão.                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Financeiro - Baixas a Receber                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa070VldBco
Local lRet

If FunName() == "FINA070"
	dbSelectArea("SEF")
	DbSetOrder(3)
	MsSeek(xFilial("SEF")+SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO))
	If xFilial("SEF")==SEF->EF_FILIAL .And. SEF->EF_CART == "R" .And.;
		SEF->(EF_PREFIXO+EF_TITULO+EF_PARCELA+EF_TIPO) == SE1->(E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO) .And.;
		!aCols[n][Len(aCols[n])] .And. !Empty(aCols[n][4])
		lRet := .f.
	Else
		lRet := .t.
	EndIf
Else
	lRet := .t.
EndIf

Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FINA070   ºAutor  ³Pâmela Bernardo     º Data ³  01/18/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Função que totaliza os cheques existentes na SEF para      º±±
±±º          ³ Validar se o Valor do cheque é menor que total de todas as º±±
±±º				Baixas efetuadas com esse numero de cheque                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP  FINA070                                                º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function F070TOTCH(cBanco,cAgencia,cConta,cNum,nValorbx,cCliente)
Local aArea := GetArea()
Local aAreaSEF := SEF->(GetArea())
Local nTot := nValorbx
Local cQuery

// Se nao estiver na base ainda, soma o aCols, onde estao os cheques que serao
// cadastrados
cQuery := "SELECT Sum(EF_VALORBX) Soma FROM "+RetSqlName("SEF")+" WHERE "
cQuery += "EF_FILIAL='"+xFilial("SEF")+"' AND "
cQuery += "EF_BANCO='"+cBanco+"' AND "
cQuery += "EF_AGENCIA='"+cAgencia+"' AND "
cQuery += "EF_CONTA='"+cConta+"' AND "
cQuery += "EF_NUM='"+cNum+"' AND "
cQuery += "(EF_FORNECE='"+cCliente+"' OR "
cQuery += " EF_CLIENTE='"+cCliente+"') AND "
cQuery += "D_E_L_E_T_=' '"
cQuery := ChangeQuery(cQuery)

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"__SOMACHEQ",.T.,.T.)
nTot += __SOMACHEQ->SOMA
dbCloseArea()

RestArea(aAreaSEF)
RestArea(aArea)

Return nTot

/*/{Protheus.doc} IntegDef
Função para integração via Mensagem Única Totvs.

@author  Wilson de Godoi
@version P12.1.17
@since   06/02/2012
/*/
Static Function IntegDef(cXml, cTypeTrans, cTypeMsg, cVersion, cTransac)

Local aRet := {}
Private aRetMsg	:= {}

If Type("cIntegSeq")=="U"
	PRIVATE cIntegSeq := ""
Endif
aRet := FINI070(cXml, cTypeTrans, cTypeMsg, cVersion, cTransac)

If Len(aRet) > 0
	If !aRet[1]
		MsgAlert(aRet[2])
	Endif
Endif

Return aRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FA070VlNatºAutor  ³TOTVS               º Data ³  08/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Valida natureza que realizam movimentos bancarios.          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FA070VlNat(cMotBx,lTipo)
Local lRet := .T.

Default lTipo := .T.

If Existblock("F070TPBA")
	lTipo:= ExecBlock("F070TPBA",.f.,.f.)
Endif

//Verifica se motivo de baixa possui movimentacao financeira
If MovBcoBx(cMotBx, .T. ) .And. If(lTipo,Posicione("SED",1,xfilial("SED") + SE1->(E1_NATUREZ),"ED_MOVBCO") == "2",.F.)
	Help(" ",1,"MOTIBAIXA", , "",1,0) //"Motivo de baixa inválido para a natureza selecionada. Verifique a opção de movimentação bancária da natureza e não prosseguir."
	lRet:=.F.
Elseif !MovBcoBx(cMotBx, .T. ) .And. If(lTipo,Posicione("SED",1,xfilial("SED") + SE1->(E1_NATUREZ),"ED_MOVBCO") == "1",.F.)
	Help(" ",1,"MOTIBAIXA", , "",1,0) //"Motivo de baixa inválido para a natureza selecionada. Verifique a opção de movimentação bancária da natureza e não prosseguir."
	lRet:=.F.
EndIf

Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³F070BuscCR ³ Autor ³ Sergio Celestino     ³ Data ³ 02/09/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao que Busca para o titulo passado se existem Recebimen-³±±
±±³          ³tos os Creditos        							  		  			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ FINA070 - (Projeto MPE)       					  				  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function F070BuscCR( cAliasB, cCli, cLj )
Local aArBusca	:= GetArea()
Local nRet			:= 0
Local cQuery
Local cTipoTit	:= ""

Default cAliasB	:= ""
Default cCli		:= ""
Default cLj		:= ""

If Select(cAliasB) <= 0
	SomaAbat("","","","P")
EndIf

If !Empty(cAliasB) .And. !Empty(cCli) .And. !Empty(cLj)

	cQuery   := "SELECT SE1.E1_TIPO,SUM(E1_SALDO) AS SOMA FROM "+RetSqlName("SE1")+" SE1 "
	cQuery   += "WHERE SE1.E1_CLIENTE = '"+cCli+"' "
	cQuery   += "AND SE1.E1_LOJA = '"+cLj+"' "
	cTipoTit := ""
	cTipoTit := MVRECANT + "|" + MV_CRNEG
	cQuery   += "AND SE1.E1_TIPO IN " + FormatIn(cTipoTit,If("|"$cTipoTit,"|",","))  + " "
	cQuery   += "AND SE1.E1_FILIAL = '"+xFilial("SE1")+"' "
	cQuery   += "AND SE1.D_E_L_E_T_ = ' ' "
	cQuery   += "AND SE1.E1_SALDO > 0 "
	cQuery   += "GROUP BY SE1.E1_TIPO "
	cQuery   := ChangeQuery(cQuery)

	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"__SOMARA",.T.,.T.)
	dbGoTop()

	While !Eof()
		If __SOMARA->E1_TIPO $ MVRECANT .And. __SOMARA->SOMA > 0
			nRet := 1
		Endif

		If __SOMARA->E1_TIPO $ MV_CRNEG  .And. __SOMARA->SOMA > 0
			nRet := 2
		Endif

		If nRet <> 0
			Exit
		Endif
	EndDo

	dbCloseArea()

EndIf

RestArea( aArBusca )

Return( nRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³F070VenBx ºAutor  ³Clovis Magenta      º Data ³  24/01/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Função que valida se nas baixas parciais a serem canceladas º±±
±±º          ³existiu calculo de comissão na baixa. Impedirá cancelamento.º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F070VenBx(aBaixa,nOpBaixa)
Local lProssegue 	:= .T.
Local nTamaBaixa	:= Len(aBaixa)
Local aArea			:= GetArea()
Local nX				:= 0
Local nVendedores := fa440CntVen()

If (nTamaBaixa > 1) .and. (nOpBaixa < nTamaBaixa)
	Dbselectarea('SA3')
	DbSetOrder(1)
	For nX:=1 to nVendedores

		cVendedor := SE1->(FieldGet( FieldPos("E1_VEND"+Alltrim( iif(nX < 10 ,Str(nX), CHR(nX+55)) )) ))
		If dbSeek(xFilial('SA3')+cVendedor)
			If SA3->A3_ALBAIXA > 0
				lProssegue := .F.
				HELP(" ",1, "FINCOMBX" )
				Exit
			Endif
		Endif

	Next nX
Endif

RestArea(aArea)

Return lProssegue

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FINA070   ºAutor  ³TOTVS           º Data ³  03/18/13   		º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Conversão do nPis, nCofins, nCSLL para a nova taxa digitadaº±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINA070                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function F070CnvPcc(nTxMoeda, nMoeda)
Local lPccBxCr  := FPccBxCr(.T.)
Local lIrPjBxCr := FIrPjBxCr(.T.) //Controla IRPJ na baixa
Local nOutImp   := 0
Local aPcc		:= {}
Local nBase		:= 0
Local lJurMulDes := (SuperGetMv("MV_IMPBAIX",.t.,"2") == "1")
Local lGerPCCBD := .F.
If __lTemMR
	F070VerImp("2",cFilAnt,SE1->E1_CLIENTE,SE1->E1_LOJA,,.T.,@lIrPjBxCr,@lPccBxCr)
EndIf

DEFAULT nTxMoeda	:= 0
DEFAULT nMoeda 		:= 1

If lPccBxCr
	If dBaixa < dLastPcc
		f070TotMes(dBaixa,.T.,,,,nTxMoeda)
	Else
		If !Empty(SE1->E1_NUMBOR)
			lGerPCCBD := FGERPCCBOR("R", SE1->(Recno()))
		EndIf

		If lJurMulDes .and. SE1->E1_TIPO # MVRECANT .and. !lGerPCCBD// .And. Empty(SE1->E1_NUMBOR)
			nBase	:= FBaseRPCC() // Carrega a base do PCC
			If nBase-nDescont+nJuros+nVA+nMulta+nAcresc-nDecresc > 0
				nBase	:= nBase-nDescont+nJuros+nVA+nMulta+nAcresc-nDecresc
			EndIf
			If !__lPccMR
				aPcc	:= newMinPcc(dBaixa, nBase,SE1->E1_NATUREZ,"R",SA1->A1_COD+SA1->A1_LOJA,,,,,,cMotBx)
				nPis	:= aPcc[2]
				nCofins	:= aPcc[3]
				nCsll	:= aPcc[4]
				//Reestruturacao SE5 - Para gravação das tabelas FK3 e FK4
				nPisCalc	:= nPis
				nPisBaseC	:= nBase
				nPisBaseR 	:= nBase
				nCofCalc	:= nCofins
				nCofBaseC	:= nBase
				nCofBaseR 	:= nBase
				nCslCalc	:= nCsll
				nCslBaseC	:= nBase
				nCslBaseR 	:= nBase
			EndIf
		Endif
	EndIf
Endif

If !__lIrfMR .And. lIrPjBxCr .AND. lJurMulDes
   	nIrrf:= Iif(cPaisLoc == "BRA" ,FCaIrBxCR(nValRec,,,nTxMoeda),0)
   	nIrfBaseC := nValRec
	nIrfBaseR := nValRec
EndIf

nTotAbat  := SumAbatRec(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_MOEDA,"S",dBaixa,@nOutImp,,,,,,, nTxMoeda)
nTotAbImp:=nOutImp
Fa070Val(0,nTxMoeda)
fa070ValVR(nTxMoeda)

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ Fa070Desc   ³ Autor ³ Andrea V. Santiago    ³ Data ³ 10/10/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Abre tela para a configuracao do tipo do desconto a ser       ³±±
±±³          ³ enviado no bloco F100 do SPED PIS/COFINS.                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ Fa070DescI()        									  	 	 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Gen‚rico 	           										 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Fa070DesCI(lTpDesc,lNatApura)
Local oDlgDesc, oVlDesc

If cPaisLoc == "BRA" .And. lTpDesc .And. lNatApura	 .And. nDescont > 0

	DEFINE MSDIALOG oDlgDesc FROM 10,05 TO 14,45 TITLE "Tipo de Desconto " // "Tipo de Desconto"

	@ 6,2 Say "Desconto: " SIZE 31,07 OF oDlgDesc PIXEL
	@ 5,35  MSCOMBOBOX oVlDesc VAR cTpDesc ITEMS {"C=Condicional","I=Incondicional"} SIZE 70, 47 OF oDlgDesc PIXEL

	DEFINE SBUTTON FROM 5,120 TYPE 1 ACTION oDlgDesc:End() ENABLE OF oDlgDesc
	ACTIVATE MSDIALOG oDlgDesc CENTERED

Endif

Return .T.


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FA070Integ ³ Autor ³Jandir Deodato ³ Data ³ 30.08.12        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida a integdef de baixas a receber                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FINA070                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function FA070Integ(lCancel,lMSG)

Local aSave:={}
Local lRet:=.T.
Local aRetMsg:={}
Default lMSG := .T.

If !(Alltrim(SE1->E1_TIPO) == "PR")

 	//Verifico integração de baixa com outros produtos
 	If __lF070EAI == NIL
 		__lF070EAI := FWHasEAI("FINA070",.T.,,.T.)
 	Endif

	If __lF070EAI
		aSave:=GetArea()

		If (AllTrim(SE1->E1_ORIGEM) == "FINI055" .And. lRet  .And. !lCancel .And. SE1->E1_SITUACA == "0") .Or.;
			(AllTrim(SE1->E1_ORIGEM) $ 'L|S|T' .Or. SE1->E1_IDLAN > 0) .And. !lCancel

			If FWHasEAI("FINI070A",.T.,,.T.)
				SE1->(msUnlock())
				SetRotInteg('FINI070A')
				MsgRun ( STR0234+" "+rTrim(SE1->E1_NUM)+ " " +STR0235,STR0236,{||aRetMsg:=FinI070A()} )//"Atualizando título" "a valor presente..." Valor Presente
				SetRotInteg('FINA070')
				RecLock("SE1",.F.)
				If ValType(aRetMsg) == "A" .And. Len(aRetMsg) > 0
					If ValType(aRetMSg[1]) <> "U" .and. !aRetMsg[1]
						If ValType (aRetMsg[2]) <> "U" .and. aRetMsg[2] <> Nil .and. !Empty (aRetMsg[2])
							MsgAlert(STR0237+ CRLF+aRetMsg[2])//"Foi realizada uma tentativa de atualização do título, e foi retornada a seguinte mensagem:"
						Else
							MsgAlert(STR0238+" " + Rtrim(SE1->E1_NUM)+". "+STR0239)//"Ocorreu um erro inesperado na tentativa de atualização do título " "Verifique as configurações da integração  e tente novamente."
						Endif
						lRet :=.F.
					ElseIF Valtype (aRetMSg[1]) =="U"
						MsgAlert(STR0238+" " + Rtrim(SE1->E1_NUM)+". "+STR0239)//"Ocorreu um erro inesperado na tentativa de atualização do título " "Verifique as configurações da integração  e tente novamente."
						lRet:=.F.
					Endif
				EndIf
			Else
				lRet:=.F.
				MsgAlert(STR0240)//"Para realizar as baixas de integrações como TIN, é necessário cadastrar o adapter da rotina FINI070A - UPDATECONTRACTPARCEL."
			Endif
		Endif
		RestArea(aSave)
	Endif
Endif

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³F070ImpBx ºAutor  ³TOTVS               º Data ³  26/06/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Função que valida se nas baixas parciais a serem canceladas º±±
±±º          ³Se o PCC ou IR está na baixa                                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F070ImpBx(aBaixa,nOpBaixa)

Local lProssegue      := .T.
Local nTamaBaixa      := Len(aBaixa)
Local aAreaSE1        := SE1->(GetArea())
Local lPccBxCr        := FPccBxCr(.T.) .and. SE1->(E1_PIS + E1_COFINS + E1_CSLL) != 0
Local lIrPjBxCr       := FIrPjBxCr(.T.) .and. SE1->(E1_IRRF) !=0//Controla IRPJ na baixa

If __lTemMR
	F070VerImp("2",cFilAnt,SE1->E1_CLIENTE,SE1->E1_LOJA,,.T.,@lIrPjBxCr,@lPccBxCr)
	lPccBxCr        := lPccBxCr .and. SE1->(E1_PIS + E1_COFINS + E1_CSLL) != 0
	lIrPjBxCr       := lIrPjBxCr .and. SE1->(E1_IRRF) !=0//Controla IRPJ na baixa
EndIf

If (nTamaBaixa > 1) .and. (nOpBaixa < nTamaBaixa)
	If (lPccBxCr) .or. (lIrPjBxCr .and. SE1->E1_IRRF >0)
		lProssegue := .F.
		HELP(" ",1, "FINIMPBX" )
	Endif
Endif

RestArea(aAreaSE1)
Return lProssegue

//-----------------------------------------------------------------------------------------
/*/
{Protheus.doc} F070PcoDet
Lancamentos de integracao FIN x PCO


@author pequim

@since 02/12/2013
@version 1.0
/*/
//-----------------------------------------------------------------------------------------
Function F070PcoDet()
Local aArea := GetArea()

If SE1->E1_SITUACA $ "0|F|G"	// Carteira
	PcoDetLan("000004","01","FINA070")
ElseIf SE1->E1_SITUACA == "1|H"	// Simples
	PcoDetLan("000004","02","FINA070")
ElseIf SE1->E1_SITUACA == "2"	// Descontada
	PcoDetLan("000004","03","FINA070")
ElseIf SE1->E1_SITUACA == "4"	// Vinculada
	PcoDetLan("000004","04","FINA070")
ElseIf SE1->E1_SITUACA == "5"	// c/Advogado
	PcoDetLan("000004","05","FINA070")
ElseIf SE1->E1_SITUACA == "6"	// Judicial
	PcoDetLan("000004","06","FINA070")
ElseIf SE1->E1_SITUACA == "7"	// Caucionada Descontada
	PcoDetLan("000004","08","FINA070")

//Para as novas situacoes de cobranca
//repito os processos padroes existentes de acordo com a categoria de cada uma
ElseIF FN022SITCB(cSituacao)[1]		//Carteira cSituacao $ "0|F|G"
	PcoDetLan("000004","01","FINA070")
ElseIf FN022SITCB(cSituacao)[5]	//Simples e Cartorio   cSituacao $ "1|H"
	PcoDetLan("000004","02","FINA070")
ElseIf FN022SITCB(cSituacao)[3]	//Descontada 	cSituacao $ "2|7"
	PcoDetLan("000004","03","FINA070")
ElseIf FN022SITCB(cSituacao)[4]	//Cobranca em banco com protesto
	PcoDetLan("000004","06","FINA070")
ElseIf FN022SITCB(cSituacao)[2]	//Cobranca em banco sem protesto exceto Simples e Cartorio
	PcoDetLan("000004","05","FINA070")
EndIf

RestArea(aArea)

Return

//-----------------------------------------------------------------------------------------
/*/{Protheus.doc} FDelSFQCR
Exclusao dos relacionamentos SE1 X SF1

@author pequim

@since 02/12/2013
@version 1.0
/*/
//-----------------------------------------------------------------------------------------
Function FDelSFQCR(nOper,cAlias,cPrefixo,cNumero,cParcela,cTipo,cCliFor,cLoja,cSeq)
Local lImpGer061	:= .F. //Registros gerados na rotina FINA061 nao devem ser excluidos.
Local cAliasQry 	:= ""
Local cQuery		:= ""
Local aTitSe5		:= {}
Local nI			:= 0
Local cSequencia 	:= ""
//***Reestruturação da SE5***
Local oModelMov		:= FWLoadModel("FINM030") //Model de Movimento bancario
Local oSubFKAMV
Local oSubFK5MV
Local cCamposE5		:= ""
Local cLog			:= ""
//***Reestruturação da SE5***

If nOper == 1
	SE1->(DbSetOrder(1))
	If SE1->(MsSeek(xFilial("SE1")+SFQ->FQ_PREFDES+SFQ->FQ_NUMDES+SFQ->FQ_PARCDES+SFQ->FQ_TIPODES))
		While SE1->(!EOF()) .And. SE1->E1_FILIAL+SE1->E1_PREFIXO+SE1->E1_NUM+SE1->E1_PARCELA+SE1->E1_TIPO == ;
			(xFilial("SE1")+ SFQ->FQ_PREFDES + SFQ->FQ_NUMDES + SFQ->FQ_PARCDES + SFQ->FQ_TIPODES)
			If SE1->E1_TIPO $ "PIS/COF/CSL"  .And. SE1->E1_ORIGEM = "FINA061"
				lImpGer061	:=	.T.
           	Endif
           	SE1->(Dbskip())
		Enddo
	Endif

	If SE1->(MsSeek(xFilial("SE1")+SFQ->FQ_PREFDES+SFQ->FQ_NUMDES+SFQ->FQ_PARCDES+SFQ->FQ_TIPODES))
		If  !Empty(SE1->E1_NUMBOR) .And. !lImpGer061
			Reclock("SE1",.F.)
			SE1->E1_SABTPIS	:= 0
			SE1->E1_SABTCOF	:= 0
			SE1->E1_SABTCSL	:= 0
			MsUnlock()
		Endif

	  	cAliasQry := GetNextAlias()

		cQuery := "SELECT E5_PREFIXO, E5_NUMERO, E5_PARCELA, E5_TIPO, E5_CLIFOR, E5_LOJA, E5_HISTOR,  "
		cQuery += "R_E_C_N_O_ RECNOSE5 FROM "
		cQuery += RetSqlName( "SE5" ) + " SE5 "
		cQuery += "WHERE "
		cQuery += "E5_FILIAL='"    + xFilial("SE5")  +  "' AND "
		cQuery += "E5_PREFIXO='"	+ SE1->E1_PREFIXO + "' AND "
		cQuery += "E5_NUMERO='"		+ SE1->E1_NUM + "' AND "
		cQuery += "E5_PARCELA='"	+ SE1->E1_PARCELA + "' AND "
		cQuery += "E5_TIPO='"		+ SE1->E1_TIPO + "' AND "
		cQuery += "E5_CLIFOR='"		+ SE1->E1_CLIENTE	+ "' AND "
		cQuery += "E5_LOJA='"		+ SE1->E1_LOJA		+ "' AND "
		cQuery += "E5_HISTOR = '" +  'Bx. Bord. Ac.'  + "' AND  "
		cQuery += "E5_PRETPIS = '2' AND E5_PRETCOF = '2' AND E5_PRETCSL = '2' AND "
		cQuery += "D_E_L_E_T_=' '"

		cQuery 		:= ChangeQuery(cQuery)
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry)

		If !( cAliasQRY )->( Eof())
			While !( cAliasQRY )->( Eof())
				SE5->( dbGoto(  ( cAliasQRY )->RECNOSE5 ) )
			  	Reclock("SE5",.F.)
				dbDelete()
				MsUnlock()
	     		( cAliasQRY )->(Dbskip())
			Enddo
		Endif
		( cAliasQRY )->(DbCloseArea())

	  	cAliasQry := GetNextAlias()
		cQuery := "SELECT E5_PREFIXO, E5_NUMERO, E5_PARCELA, E5_TIPO, E5_CLIFOR, E5_LOJA, E5_HISTOR,  "
		cQuery += "R_E_C_N_O_ RECNOSE5 FROM "
		cQuery += RetSqlName( "SE5" ) + " SE5 "
		cQuery += "WHERE "
		cQuery += "E5_FILIAL='"    + xFilial("SE5")  +  "' AND "
		cQuery += "E5_PREFIXO='"	+ SE1->E1_PREFIXO + "' AND "
		cQuery += "E5_NUMERO='"		+ SE1->E1_NUM + "' AND "
		cQuery += "E5_PARCELA='"	+ SE1->E1_PARCELA + "' AND "
		cQuery += "E5_TIPO='"		+ SE1->E1_TIPO + "' AND "
		cQuery += "E5_CLIFOR='"		+ SE1->E1_CLIENTE	+ "' AND "
		cQuery += "E5_LOJA='"		+ SE1->E1_LOJA		+ "' AND "
		cQuery += "E5_PRETPIS = '9' AND E5_PRETCOF = '9' AND E5_PRETCSL = '9' AND "
		cQuery += "D_E_L_E_T_=' '"

		cQuery 		:= ChangeQuery(cQuery)
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry)

		If !( cAliasQRY )->( Eof())
			While !( cAliasQRY )->( Eof())
				SE5->( dbGoto(  ( cAliasQRY )->RECNOSE5 ) )

				Reclock("SE5",.F.)
  				SE5->E5_PRETPIS 	:= "8"
				SE5->E5_PRETCOF 	:= "8"
				SE5->E5_PRETCSL 	:= "8"
				MsUnlock()

				( cAliasQRY )->(Dbskip())
			Enddo
		Endif
		( cAliasQRY )->(DbCloseArea())

	Endif
Else

	SFQ->(dbSetOrder(2))
	If SFQ->(MsSeek(xFilial("SFQ")+cAlias+cPrefixo+cNumero+cParcela+cTipo+cClifor+cLoja))
		If SE1->(MsSeek(xFilial("SE1")+SFQ->FQ_PREFDES+SFQ->FQ_NUMDES+SFQ->FQ_PARCDES+SFQ->FQ_TIPODES)) .And. !Empty(SE1->E1_NUMBOR)

		  	cAliasQry := GetNextAlias()

			cQuery := "SELECT E5_PREFIXO, E5_NUMERO, E5_PARCELA, E5_TIPO, E5_CLIFOR, E5_LOJA, E5_HISTOR,  "
			cQuery += "R_E_C_N_O_ RECNOSE5 FROM "
			cQuery += RetSqlName( "SE5" ) + " SE5 "
			cQuery += "WHERE "
			cQuery += "E5_FILIAL='"    + xFilial("SE5")  +  "' AND "
			cQuery += "E5_PREFIXO='"	+ SE1->E1_PREFIXO + "' AND "
			cQuery += "E5_NUMERO='"		+ SE1->E1_NUM + "' AND "
			cQuery += "E5_PARCELA='"	+ SE1->E1_PARCELA + "' AND "
			cQuery += "E5_TIPO='"		+ SE1->E1_TIPO + "' AND "
			cQuery += "E5_CLIFOR='"		+ SE1->E1_CLIENTE	+ "' AND "
			cQuery += "E5_LOJA='"		+ SE1->E1_LOJA		+ "' AND "
			cQuery += "E5_HISTOR = '" +  'FINA061-Ref. Baixa'  + "' AND  "
			cQuery += "E5_PRETPIS = '2' AND E5_PRETCOF = '2' AND E5_PRETCSL = '2' AND "
			cQuery += "E5_VALOR = 0  AND  "

			cQuery += "D_E_L_E_T_=' '"

			cQuery 		:= ChangeQuery(cQuery)
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry)

			If !( cAliasQRY )->( Eof())
				While !( cAliasQRY )->( Eof())
						SE5->( dbGoto(  ( cAliasQRY )->RECNOSE5 ) )

					  	Aadd(aTitSe5,{SE5->E5_BANCO,;
				  							SE5->E5_AGENCIA,;
			  								SE5->E5_CONTA,;
									  		SE5->E5_DATA,;
											SE5->E5_DTDISPO,;
											SE5->E5_MOEDA,;
											SE5->E5_TXMOEDA,;
											SE5->E5_VALOR,;
											SE5->E5_VRETPIS,;
											SE5->E5_VRETCOF,;
											SE5->E5_VRETCSL,;
											SE5->E5_NATUREZ,;
											SE5->E5_RECPAG,;
											SE5->E5_TIPO,;
											SE5->E5_LA,;
											SE5->E5_TIPODOC,;
											SE5->E5_HISTOR,;
											SE5->E5_TIPODOC,;
											SE5->E5_LOTE,;
											SE5->E5_BENEF,;
											SE5->E5_DTDIGIT,;
											SE5->E5_MOTBX,;
											SE5->E5_SERREC,;
											SE5->E5_ORDREC,;
											SE5->E5_FILORIG})

					  	Reclock("SE5",.F.)
						dbDelete()
						MsUnlock()
		     			( cAliasQRY )->(Dbskip())
				Enddo
			Endif
			( cAliasQRY )->(DbCloseArea())

		Endif

		oModelMov:SetOperation( 3 ) //Inclusao
		oModelMov:Activate()
		oSubFKAMV  := oModelMov:GetModel( "FKADETAIL" )
		oSubFK5MV  := oModelMov:GetModel( "FK5DETAIL" )

		If SE1->(MsSeek(xFilial("SE1")+SFQ->FQ_PREFORI+SFQ->FQ_NUMORI+SFQ->FQ_PARCORI+SFQ->FQ_TIPOORI))
			//Seto um novo processo para o model antes da chamada do laço
			oModelMov:SetValue( "MASTER", "NOVOPROC", .T. )

			For nI := 1 To Len(aTitSe5)
				If !Empty(cCamposE5)
					cCamposE5 += "|"
				EndIf

				If !oSubFKAMV:IsEmpty()
					//Inclui a quantidade de linhas necessárias
					oSubFKAMV:AddLine()
					//Vai para linha criada
					oSubFKAMV:GoLine( oSubFKAMV:Length() )
				Endif

				cSequencia 	:= FaNxtSeqBx("SE1")  // Sequencia da baixa do adiantamento + 1

				cCamposE5 += "{"

				cCamposE5 += " ,{'E5_TIPO'		,'" + aTitSe5[nI,14] + "'}"
				cCamposE5 += " ,{'E5_LOTE'		,'" + aTitSe5[nI,19] + "'}"
				cCamposE5 += " ,{'E5_BENEF'		,'" + aTitSe5[nI,20] +"' }"
				cCamposE5 += " ,{'E5_DTDIGIT'	, StoD('" + DtoS(aTitSe5[nI,21]) + "')}"
				cCamposE5 += " ,{'E5_MOTBX'		,'" + aTitSe5[nI,22] + "'}"
				cCamposE5 += " ,{'E5_SERREC'	,'" + aTitSe5[nI,23] + "'}"
				cCamposE5 += " ,{'E5_ORDREC'	,'" + aTitSe5[nI,24] + "'}"
				cCamposE5 += " ,{'E5_PREFIXO'	, SE1->E1_PREFIXO}"
				cCamposE5 += " ,{'E5_NUMERO'	, SE1->E1_NUM}"
				cCamposE5 += " ,{'E5_PARCELA'	, SE1->E1_PARCELA}"
				cCamposE5 += " ,{'E5_CLIFOR'	, SE1->E1_CLIENTE}"
				cCamposE5 += " ,{'E5_CLIENTE'	, SE1->E1_CLIENTE}"
				cCamposE5 += " ,{'E5_LOJA'		, SE1->E1_LOJA}"
				cCamposE5 += " ,{'E5_VRETPIS'	, '" + aTitSe5[nI,09] + "'}"
				cCamposE5 += " ,{'E5_VRETCOF'	, '" + aTitSe5[nI,10] + "'}"
				cCamposE5 += " ,{'E5_VRETCSL'	, '" + aTitSe5[nI,11] + "'}"
				cCamposE5 += " ,{'E5_PRETPIS'	, '8'}"
				cCamposE5 += " ,{'E5_PRETCOF'	, '8'}"
				cCamposE5 += " ,{'E5_PRETCSL'	, '8'}"

				cCamposE5 += "}"

				oSubFK5MV:SetValue( "FK5_BANCO"  , aTitSe5[nI,01] )
				oSubFK5MV:SetValue( "FK5_AGENCI" , aTitSe5[nI,02] )
				oSubFK5MV:SetValue( "FK5_CONTA"  , aTitSe5[nI,03] )
				oSubFK5MV:SetValue( "FK5_DATA"   , aTitSe5[nI,04] )
				oSubFK5MV:SetValue( "FK5_DTDISP" , aTitSe5[nI,05] )
				oSubFK5MV:SetValue( "FK5_MOEDA"  , aTitSe5[nI,06] )
				oSubFK5MV:SetValue( "FK5_TXMOED" , aTitSe5[nI,07] )
				oSubFK5MV:SetValue( "FK5_VALOR"	 , aTitSe5[nI,08] )
				oSubFK5MV:SetValue( "FK5_NATURE" , aTitSe5[nI,12] )
				oSubFK5MV:SetValue( "FK5_RECPAG" , aTitSe5[nI,13] )
				oSubFK5MV:SetValue( "FK5_LA"     , aTitSe5[nI,15] )
				oSubFK5MV:SetValue( "FK5_TPDOC"  , aTitSe5[nI,16] )
				oSubFK5MV:SetValue( "FK5_HISTOR" , aTitSe5[nI,17] )
				oSubFK5MV:SetValue( "FK5_FILORI" , aTitSe5[nI,25] )
				oSubFK5MV:SetValue( "FK5_SEQ"    , cSequencia )

			Next nI
			//Grava os dados
			If oModelMov:VldData()
			    oModelMov:CommitData()
			Else
			    cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
			    cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
			    cLog += cValToChar(oModelMov:GetErrorMessage()[6])

			    Help( ,,"M010DELSFQ",,cLog, 1, 0 )
			Endif
		Endif
		oModelMov:DeActivate()
		oModelMov:Destroy()
		oModelMov:= Nil

		RecLock("SFQ",.F.)
		SFQ->(dbDelete())
		MsUnlock()
	Endif
Endif

Return

//-------------------------------------------------------------------
/*/{Protheus.doc} FA070EstBL
Gera estorno na FK5, referente ao cancelamento de baixas a receber realizadas em lote

@param cLoteFin, Lote financeiro da baixa
@param cHistorico, Histórico que será salvo no registro de estorno na FK5
@return Nil

@author Pedro Alencar
@since 11/09/2014
@version P12
/*/
//-------------------------------------------------------------------
Static Function FA070EstBL( cLoteFin, cHistorico, cBanco, cAgenc, cCont )
	Local oModelMov := FWLoadModel( "FINM030" )
	Local oSubFK5 := oModelMov:GetModel( "FK5DETAIL" )
	Local oSubFKA	:= oModelMov:GetModel( "FKADETAIL" )
	Local oModelAux
	Local oSubFK5aux
	Local oSubFKAaux
	Local cLog	 := ""
	Local cProcFK5 := ""
	Local nX := 0
	Local aAuxFK5	:= {}
	Local aCamposFK5 := FK5->( DbStruct() )
	Local nValorES := SE5->E5_VALOR
	Local cIDFK5 := ""
	Local aAreaFK5 := FK5->( GetArea() )
	Local aAreaSE5 := SE5->( GetArea() )
	Default cBanco	:= ""
	Default cAgenc	:= ""
	Default cCont	:= ""

	//Pega o ID do movimento BL na FK5
	FK5->( dbSetOrder( 2 ) ) //Lote + Tipo Doc

	If FK5->( msSeek( FWxFilial("FK5") + cLoteFin + "BL" ) ) .OR. FK5->( msSeek( FWxFilial("FK5") + cLoteFin + "VL" ) )
		cIDFK5 := FK5->FK5_IDMOV
		//-----------------------------------------------------------------------------------------------------------------
		// Alteracao implementada em 23/06/2016:																		  |
		// Funcional apenas para baixas via CNAB feitas ANTES da correção do chamado TVCGOK (FINA200 = 14/06/16). 		  |
		// Retirar este trecho em periodo futuro.																		  |
		//-----------------------------------------------------------------------------------------------------------------
		If AllTrim(FK5->FK5_ORIGEM) $ "FINA200|FINA740"		// Lote gerado pelo retorno CNAB
			While !FK5->(Eof()) .And. FK5->FK5_LOTE == cLoteFin		// Caso haja bancos diferentes no mesmo lote
				If FK5->FK5_FILIAL == FWxFilial("FK5") .And.;
				   AllTrim(FK5->FK5_BANCO) == AllTrim(cBanco) .And.;
				   AllTrim(FK5->FK5_AGENCI) == AllTrim(cAgenc) .And.;
				   AllTrim(FK5->FK5_CONTA) == AllTrim(cCont)
				   cIDFK5 := FK5->FK5_IDMOV
				   Exit
				EndIf
				FK5->(dbSkip())
			EndDo
		EndIf

	Endif
	FK5->( RestArea( aAreaFK5 ) )

	//Posiciona no BL da SE5 para carregar o processo no model e pegar os valores da FK5 para gravar no estorno
	If !Empty( cIDFK5 )
		SE5->( DbSetOrder( 21 ) ) //E5_FILIAL + E5_IDORIG
		If SE5->( msSeek( FWxFilial("SE5") + cIDFK5 ) )
			//Pega o número do processo do BL gerado na baixa em lote
			cProcFK5 := FINProcFKs( cIDFK5, "FK5" )

			oModelAux := FWLoadModel( "FINM030" )
			oModelAux:SetOperation( MODEL_OPERATION_UPDATE ) //Inclusao
			oModelAux:Activate()
			oSubFKAaux := oModelAux:GetModel( "FKADETAIL" )
			oSubFK5aux := oModelAux:GetModel( "FK5DETAIL" )

			If oSubFKAaux:SeekLine( { { "FKA_IDORIG", cIDFK5 } } )
				For nX := 1 To Len( aCamposFK5 )
					aAdd( aAuxFK5, oSubFK5aux:GetValue( aCamposFK5[nX][1] ) )
				Next nX
			Endif
			oModelAux:DeActivate()
			oModelAux:Destroy()
			oModelAux:= Nil
		Endif
	 	SE5->( RestArea( aAreaSE5 ) )

		//Inicializo o model
		oModelMov:SetOperation( MODEL_OPERATION_INSERT ) //Inclusao
		oModelMov:Activate()
		oModelMov:SetValue( "MASTER", "E5_GRV", .F. ) //Informa se vai gravar SE5 ou não
		oModelMov:SetValue( "MASTER", "NOVOPROC", .F. ) //Não cria um novo processo
		oModelMov:SetValue( "MASTER", "IDPROC", cProcFK5 ) //Define o número do processo para o estorno do BL

		If !oSubFKA:IsEmpty()
			oSubFKA:AddLine()
		Endif

		oSubFKA:SetValue( "FKA_IDORIG", FWUUIDV4() )
		oSubFKA:SetValue( "FKA_TABORI", "FK5" )

		If Len( aAuxFK5 ) > 0
			For nX := 1 To Len(aCamposFK5)
				oSubFK5:SetValue( aCamposFK5[nX][1], aAuxFK5[nX] )
			Next nX
		Endif

		oSubFK5:SetValue( "FK5_TPDOC", "ES" )
		oSubFK5:SetValue( "FK5_RECPAG", "P" )
		oSubFK5:SetValue( "FK5_HISTOR", cHistorico )
		oSubFK5:SetValue( "FK5_VALOR", nValorES )
		oSubFK5:SetValue( "FK5_DATA", dDataBase )
		cBanco := oSubFK5:GetValue("FK5_BANCO")
		cAgenc := oSubFK5:GetValue("FK5_AGENCI")
		cCont  := oSubFK5:GetValue("FK5_CONTA")

		If oModelMov:VldData()
			oModelMov:CommitData()
		Else
			cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
			cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
			cLog += cValToChar(oModelMov:GetErrorMessage()[6])

			Help( , , "M30F070EST", , cLog, 1, 0 )
		Endif
		oModelMov:DeActivate()
		oModelMov:Destroy()
		oModelMov:= Nil
	Endif

	SE5->( RestArea( aAreaSE5 ) )

Return Nil

Static Function ConfIRRF(nValor,oIrrf)
Local lIrrfBxPj := FIrPjBxCr(.T.)
Local lret := .T.

If nValor == 0 .and. !lIrrfBxPj
	If  !MsgYesNo( STR0267+chr(13)+chr(10) +STR0268+chr(13)+chr(10) +STR0269, STR0144) //"Ao zerar o valor do imposto gerado na emissão,"#"o título de imposto será excluído definitivamente."#"Deseja realmente zerar o valor?"
		nValor := SE1->E1_IRRF
		oIrrf:Refresh()
		lRet := .f.

	EndIf
EndIf
Return lret

//-------------------------------------------------------------------
/*/{Protheus.doc}FI070PerAut
Carrega o valor das variaveis da rotina automatica
@author Alvaro Camillo Neto
@since  08/10/2015
@version 12
/*/
//-------------------------------------------------------------------
Function FI070PerAut()
Local nX 		:= 0
Local cVarParam := ""

If Type("aParamAuto") != "U"
	For nX := 1 to Len(aParamAuto)
		cVarParam := Alltrim(Upper(aParamAuto[nX][1]))
		If "MV_PAR" $ cVarParam
			&(cVarParam) := aParamAuto[nX][2]
		EndIf
	Next nX
EndIf

Return

//-------------------------------------------------------------------
/*/{Protheus.doc}FBaseRPCC
Consiste valor base de calculo do PCC.
@author Leonardo Castro
@since  19/02/2016
@version 12
/*/
//-------------------------------------------------------------------
Static Function FBaseRPCC(nValorRec,lCalcPCC)
Local lFINA450	:= FwIsInCallStack("FA450CMP")
Local nValBase	:= 0
Local nBaseRet	:= 0
Local aBase 	:= {}
Local nX 		:= 0
Local cChaveAux := ""
Local nBase	 	:= If(SE1->E1_BASEPIS > 0, SE1->E1_BASEPIS, If(SE1->E1_BASECOF > 0, SE1->E1_BASECOF, If(SE1->E1_BASECSL > 0, SE1->E1_BASECSL, 0)))
Local nParc		:= 0

DEFAULT nValorRec	:= nBase
DEFAULT lCalcPcc	:= .T.

If __lTemMR .And. __lPccMR .And. nBase == 0
	cChaveAux := FWxFilial( "SE1", SE1->E1_FILORIG ) + "|" + SE1->E1_PREFIXO + "|" + SE1->E1_NUM + "|" + SE1->E1_PARCELA + "|" + SE1->E1_TIPO + "|" + SE1->E1_CLIENTE + "|" + SE1->E1_LOJA

	aBase := FinImpFis(cChaveAux,SE1->E1_FILORIG,"SE1")
	For nX := 1 to Len(aBase)
		nBase := aBase[nX][2]
	Next
Endif

nParc := IF(Type("nParciais") != "N", 0, nParciais)// real

If FindFunction("FxIsBxTotal")
	/*
		- Se o valor vai baixar Totalmente o título -> considerar base - Parciais (Parciais é considerado mais abaixo)
		- Ou se o valor não vai baixar totalmente -> considerar como base o valor passado (nValRec normalmente) - Valor Recebido
	*/	
	If FxIsBxTotal( nValorRec , nParc )	
		nValorRec := nBase
	EndIf
Else
	nValorRec := IIF(ReadVar() == "NVALREC" .or. ReadVar() == "NVALESTRANG", nValorRec, nBase)
EndIf

nValBase := nBase
nMoedaBco	:= IF(Type("nMoedaBco") != "N", 1, nMoedaBco)

If SE1->E1_MOEDA > 1
	nParc	:= xMoeda(nParc,nMoedaBco,SE1->E1_MOEDA,dDatabase,3,,nTxMoeda)
EndIf

If FwIsInCallStack("FA070VALREC") .and. SE1->E1_MOEDA > 1// Se for alteração o valor a ser baixado vem em dolar
	nValorRec	:= xMoeda(nValorRec,nMoedaBco,SE1->E1_MOEDA,dDatabase,3,,nTxMoeda)
EndIf


If lFINA450
	nValBase := nValorRec
ElseIf nParc < nValBase // Se o valor das baixas parciais nao atingiram o valor da base.
	nValBase := nValBase - nParc
	If nValorRec < nValBase
		nValBase := nValorRec
	EndIf
Else // Se ja alcançou a base de calculo.
	nBaseRet	:= 0
	lCalcPcc	:= .F.
EndIf

nBaseRet := nValBase

Return nBaseRet

//-------------------------------------------------------------------
/*/{Protheus.doc}getVlIss
pega o valor do ISS
@author Fernando Amorim
@since  18/08/15
@version 12
/*/
//-------------------------------------------------------------------

Static Function getVlIss(cFil,cChave)
Local aAreaAt		:= getArea()
Local cAliasQry	:= GetNextAlias()
Local cQuery		:= ""
Local nValor		:= 0
Local cTipo 		:= "IS-"
Local cNatu 		:= "ISS"

Default cFil		:= xFilial("SE1")
Default cChave		:= ""

cQuery := " SELECT SUM(E1_VALOR) VALOR "
cQuery += " FROM "+RetSQLName("SE1")+" SE1 "
cQuery += " WHERE E1_TIPO = '"+cTipo+"'  "
cQuery += " AND E1_NATUREZ = '"+cNatu+"' "
cQuery += " AND E1_FILIAL = '"+cFil+"'  "
cQuery += " AND E1_TITPAI LIKE '%"+cChave+"%' "
cQuery += " AND SE1.D_E_L_E_T_ = ' ' "
cQuery := ChangeQuery( cQuery )

If Select(cAliasQry) > 0
	( cAliasQRY )->( dbCloseArea() )
Endif

dbUseArea( .T., "TOPCONN", TcGenQry(,,cQuery), cAliasQry, .F., .T. )

DbSelectArea(cAliasQry)
DbGoTop()

While !Eof()
	TCSetField(cAliasQry, "VALOR" ,"N",16,2)
	nValor := (cAliasQry)->(VALOR)
	DbSkip()
EndDo

If Select(cAliasQry) > 0
	(cAliasQRY)->(dbCloseArea())
Endif

RestArea(aAreaAt)

Return nValor

/*/{Protheus.doc} LjBxDup
Tem o objetivo de remover os registros das baixas pagas em R$
@type		function
@param		aBaixa
@author  	michael.gabriel
@version 	P11.80
@since   	06/06/2017
@return  	aRetBaixa
@obs		Quando há uma baixa em R$ no LOJA, ele gera dois registros baixados na SE5,
			causando duplicidade na exibicao das baixas que podem ser estornadas.
/*/
Static Function LjBxDup( aBaixa )
Local cUltBaixa	:= ""		//indica a ultima baixa
Local nI		:= 0
Local aRetBaixa	:= {{},{}}	//[1]aBaixa tratado (sem duplicidade) [2] aBaixa Original
Local aAuxBaixa	:= {}		//copia do aBaixa, pois ele sera reordenado

Default aBaixa	:= {}

// copia o aBaixa original, pois ele sera ordenado
aAuxBaixa := aClone( aBaixa )

// ordena o aBaixa copiado em ordem crescente
aSort( aAuxBaixa, /*nInicio*/, /*nItens*/, {|x,y| x > y} )

For nI := 1 to Len(aAuxBaixa)
	If cUltBaixa <> aAuxBaixa[nI]
		// adiciona a baixa valida ao retorno
		Aadd( aRetBaixa[1], aAuxBaixa[nI] )
		//obtem a baixa para a comparacao com a proxima
		cUltBaixa := aAuxBaixa[nI]
	EndIf
Next

//copia o conteudo original do aBaixa, pois ele sera restaurado
aRetBaixa[2] := aClone( aBaixa )

// destroi o vetor auxiliar
aSize( aAuxBaixa, 0 )
aAuxBaixa := Nil

Return aRetBaixa

//-------------------------------------------------------------------
/*/{Protheus.doc} FA070Mark
Construção de Browse de Consulta Padrão do tipo Especifíca
Situação Cobrança Seleção
@return cRet – Relação das situações de cobrança selecionadas pelo usuário
@author Mauricio Pequim Jr
@since  06/01/2016
@version 12.1.6
/*/
//-------------------------------------------------------------------
Function FA070Mark(cBancolt,lPreMark)
Local lRet		:= .F.
Local aStru		:= SE1->(DBSTRUCT()) //Estrutura da tabela de Situações de cobrança.
Local cQuery	:= ''
Local aColumns	:= {}
Local cChave	:= ''
Local nX		:= 0
Local aSize		:= {}
Local aSeek		:= {}
Local cTmp		:= GetNextAlias()
Local cTable	:= ''
Local cInsert	:= ''
Local aChave	:= {}
Local aIndices	:= {}
Local aCposBase	:= {}
Local __cCampos	:= ""
Local aRotOld	:= aClone(aRotina)

PRIVATE aRotina	 	:= {}

aCposBase	:= {"E1_FILIAL","E1_PREFIXO","E1_NUM","E1_PARCELA","E1_TIPO","E1_NATUREZ","E1_SALDO","E1_PORTADO","E1_AGEDEP","E1_CLIENTE","E1_LOJA","E1_NOMCLI","E1_EMISSAO","E1_VENCREA","E1_VALOR","E1_BASEIRF","E1_IRRF","E1_ISS","E1_SITUACA","E1_NUMBCO","E1_FILORIG"}

If lCpoSIX
	FinCposSix("SE1",@aIndices,@aCposBase)
Endif

For nX := 1 To Len(aCposBase)
	If nX > 1
		__cCampos += ","
	Endif
	__cCampos += aCposBase[nX]
Next

aAdd(aStru, {'RECNOSE1','N',10,0})

//Seleção dos titulos
cQuery := FA070ChecF(cBancolt,__cCampos)

//Instancio o objeto que vai criar a tabela temporária no BD para poder utilizar posteriormente
oTmp := FWTemporaryTable():New( cTmp )

//Defino os campos da tabela temporária
oTmp:SetFields(aStru)

//Adiciono o índice da tabela temporária
For nX := 1 To Len(aIndices)
	Aadd(aSeek,{aIndices[nX,1],aindices[nX,2],nX})

	cTmpIdx := "Tmp_Idx_"+StrZero(nX,2)
	aChave	:= StrToKarr(Alltrim(aindices[nX,3]),"+")

	oTmp:AddIndex(cTmpIdx,aChave)
Next

//Criação da tabela temporária no BD
oTmp:Create()

//Obtenho o nome "verdadeiro" da tabela no BD (criada como temporária)
cTable := oTmp:GetRealName()

//Preparo o comando para alimentar a tabela temporária
cInsert := "INSERT INTO " + cTable + " ("+__cCampos+", RECNOSE1 ) " + cQuery

//Executo o comando para alimentar a tabela temporária
Processa({|| TcSQLExec(cInsert)})

//MarkBrowse
For nX := 1 To Len(aStru)
	If	aStru[nX][1] $ __cCampos
		AAdd(aColumns,FWBrwColumn():New())
		aColumns[Len(aColumns)]:SetData( &("{||"+aStru[nX][1]+"}") )
		aColumns[Len(aColumns)]:SetTitle(RetTitle(aStru[nX][1]))
		aColumns[Len(aColumns)]:SetSize(aStru[nX][3])
		aColumns[Len(aColumns)]:SetDecimal(aStru[nX][4])
		aColumns[Len(aColumns)]:SetPicture(PesqPict("SE1",aStru[nX][1]))
	EndIf
Next nX

cAliasLote := oTmp:GetAlias()

(cAliasLote)->(dbGoTop())
If !(cAliasLote)->(EOF())
	//Faz o calculo automatico de dimensoes de objetos
	oSize := FwDefSize():New(.T.)

	oSize:lLateral := .F.
	oSize:lProp	:= .T. // Proporcional

	oSize:AddObject( "LABEL" ,  100, 02, .T., .T. ) // Totalmente dimensionavel
	oSize:AddObject( "SELECT",  100, 98, .T., .T. ) // Totalmente dimensionavel

	oSize:Process() // Dispara os calculos

	a1stRow := {oSize:GetDimension("LABEL","LININI"),;
				oSize:GetDimension("LABEL","COLINI"),;
				oSize:GetDimension("LABEL","LINEND"),;
				oSize:GetDimension("LABEL","COLEND")}

	a2ndRow := {oSize:GetDimension("SELECT","LININI"),;
				oSize:GetDimension("SELECT","COLINI"),;
				oSize:GetDimension("SELECT","XSIZE"),;
				oSize:GetDimension("SELECT","YSIZE")}

	DEFINE MSDIALOG oDlg1 TITLE STR0064 FROM oSize:aWindSize[1],oSize:aWindSize[2] TO oSize:aWindSize[3],oSize:aWindSize[4] OF oMainWnd PIXEL  //"Baixa em Lote"

	If lPreMark
		FA070Dbeva(cAliasLote)
	Endif

	@ a1stRow[1], a1stRow[2] + 005 Say STR0065 PIXEL Of oDlg1 // "Valor Total:"
	@ a1stRow[1], a1stRow[2] + 060 Say oValor VAR nValor Picture PesqPict("SE1","E1_VALOR") PIXEL Of oDlg1
	@ a1stRow[1], a1stRow[2] + 120 Say STR0066 PIXEL Of oDlg1 // "Quantidade:"
	@ a1stRow[1], a1stRow[2] + 150 Say oQtda VAR nQtdTit Picture "@E 99999" SIZE 50,10 PIXEL of oDlg1

	oPanel := TPanel():New(a2ndRow[1],a2ndRow[2],'',oDlg1,, .T., .T.,, ,a2ndRow[3],a2ndRow[4])

	oMrkBrowse:= FWMarkBrowse():New()
	oMrkBrowse:oBrowse:SetEditCell(.T.)
	oMrkBrowse:SetFieldMark("E1_OK")
	oMrkBrowse:SetOwner(oPanel)
	oMrkBrowse:SetAlias(cAliasLote)
	oMrkBrowse:SetMenuDef("")
	oMrkBrowse:bMark	:= {|| Fa070bAval(cAliasLote,cMarca,oValor,oQtda)}
	oMrkBrowse:bAllMark	:= {|| FA070Inverte(cMarca,oValor,oQtda,,cAliasLote)}
	oMrkBrowse:SetMark( cMarca, cAliasLote, "E1_OK" )
	oMrkBrowse:SetDescription("")
	oMrkBrowse:DisableReport()
	oMrkBrowse:DisableLocate()
	oMrkBrowse:DisableConfig()
	oMrkBrowse:SetColumns(aColumns)
	oMrkBrowse:SetSeek(.T.,aSeek)
	oMrkBrowse:Activate()

	ACTIVATE MSDIALOG oDlg1 ON INIT EnchoiceBar(oDlg1,{|| lRet := .T., If(F070VlMrk(nValor) , oDlg1:End(),lRet := .F.)},{|| oDlg1:End()}) CENTERED
Else
	HELP(" ",1,"RECNO")
	lRet := .f.
Endif

aRotina := aClone(aRotOld)

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} F070NotIN
Monta a expressão do NOT IN da query da baixa por Lote

@author Mauricio Pequim Jr
@since  06/01/2016
@version 12.1.7
/*/
//-------------------------------------------------------------------
Static Function F070NotIN()
Local cTipos := MVPROVIS+"/"+MVRECANT+"/"+MV_CRNEG

//Destacar Abatimentos
If mv_par06 == 2
	cTipos += "/"+MVABATIM+"/"+MVFUABT +'")'//adicionado MVFUABT pois a variável MVABATIM não está retornando FU-
Endif

cTipos	:=	StrTran(cTipos,',','/')
cTipos	:=	StrTran(cTipos,';','/')
cTipos	:=	StrTran(cTipos,'|','/')
cTipos	:=	StrTran(cTipos,'\','/')

cTipos := Formatin(cTipos,"/")

Return cTipos


//-------------------------------------------------------------------
/*/{Protheus.doc} FA070ChecF
Construção Query - Baixa em Lote

@return cQuery - Query para seleção dos filtros
@author Mauricio Pequim Jr
@since  06/01/2016
@version 12.1.7
/*/
//-------------------------------------------------------------------
Function FA070ChecF(cBancolt,__cCampos)
Local cFiltro	:= ""
Local cLstSit 	:= F023VerBlq("2","0003")
Local lIsCaixa	:= (cBancolt="CX" .or. cBancolt $ GetMV("MV_CARTEIR"))

//------------------------------------------------------------------
// Processa um filtro proprio caso exista o Ponto de Entrada
// Necessidade adaptda ao cliente CosWay
//------------------------------------------------------------------
IF ExistBlock("F070OWN")
	cFiltro += "SELECT " + __cCampos

	cFiltro +=  ", R_E_C_N_O_ RECNOSE1 "
	cFiltro +=  " FROM "+	RetSqlName("SE1") + " SE1 "
	cFiltro +=  " WHERE "
	cFiltro += Execblock("F070OWN",.f.,.f.)
	IF !Empty(cLstSit)
       cFiltro	+= " AND E1_SITUACA NOT IN "+ FormatIn(cLstSit,"|")+" " //Diferente de Carteira, Carteira Protesto e Carteira Acordo
	Endif
	cFiltro	+= " AND D_E_L_E_T_ = ' ' "
	cFiltro += " ORDER BY "+ SqlOrder(SE1->(IndexKey()))
Else

	//--------------------------------------------------------------------------------------------
	//NOVO
	cFiltro += "SELECT " + __cCampos

	cFiltro +=  ", R_E_C_N_O_ RECNOSE1 "
	cFiltro +=  " FROM "+	RetSqlName("SE1") + " SE1 "
	cFiltro +=  " WHERE "

	//Gestao
	cFiltro += "E1_FILIAL = '" + xFilial("SE1") + "' "

	cFiltro += "AND E1_VENCREA Between '" + DTOS(dVencDe) + "' AND '" + DTOS(dVencAte) + "' "
	cFiltro += "AND E1_NATUREZ Between '" + cNatDe        + "' AND '" + cNatAte        + "' "

	If !GetMv("MV_ANTCRED")
		cFiltro += "AND E1_EMISSAO <= '"+DTOS(dDataBase)+"' "
	EndIf

	cFiltro += "AND E1_SALDO > 0 "

	If lIsCaixa
		cFiltro += "AND (E1_PORTADO = '"+ cBancolt + "' OR E1_PORTADO= ' ' ) "
	Else
		cFiltro += "AND E1_PORTADO = '" +cBancoLt +"' "
		cFiltro += "AND E1_AGEDEP  = '" +cAgenciaLt +"' "
		cFiltro += "AND E1_CONTA   = '" +cContaLt +"' "
	Endif

	cFiltro += "AND E1_TIPO NOT IN " + F070NotIN()

	// Verifica integracao com PMS e nao permite baixar titulos que tenham solicitacoes
	// de transferencias em aberto.
	cFiltro += " AND E1_NUMSOL = ' ' "

	//PCREQ-3782 - Bloqueio por situação de cobrança
	If !Empty(cLstSit)
		cFiltro	+= "AND E1_SITUACA NOT IN "+ FormatIn(cLstSit,"|")+" " //Diferente de Carteira, Carteira Protesto e Carteira Acordo

	Endif

	cFiltro	+= " AND D_E_L_E_T_ = ' ' "
	
	If FindFunction("FINTP02")
		cFiltro	+= FINTP02()
	EndIf
	
	cFiltro += " ORDER BY "+ SqlOrder(SE1->(IndexKey()))

Endif

Return cFiltro

//-------------------------------------------------------------------
/*/{Protheus.doc} F070VlMrk
Valida a confirmação da Markbrowse

@author Mauricio Pequim Jr
@since  06/01/2016
@version 12.1.7
/*/
//-------------------------------------------------------------------
Function F070VlMrk(nValor)
Local lF070BxLt := ExistBlock("F070BxLt")
Local lRet		:= .F.

If F070VlLt(nValor)
	lRet := .T.
	If lF070BxLt
		lRet := ExecBlock("F070BxLt",.f.,.f.)
	Endif
 Endif

 Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} fA070Dbeva
Trata o dbeval para marcar e desmarcar item

@author Mauricio Pequim Jr
@since  06/01/2016
@version 12.1.7
/*/
//-------------------------------------------------------------------
Function fA070Dbeva(cAlias,cMarca)
Local nRec := 0

dbSelectArea(cAlias)
nRec	:= Recno()

DbGoTop()
While (cAlias)->(!Eof())

	dbSelectArea("SE1")
	SE1->(dbGoto((cAlias)->(RECNOSE1)))

	If SE1->(MsRLock())

		IF nValor <= nTotGer .And. nValor+Moeda(E1_SALDO,1,"R") <= nTotGer .And. ;
			nQtdTit <= nNroTit .And. !E1_TIPO $ MVABATIM+"/"+MVPROVIS+"/"+MVIRABT+"/"+MVINABT+"/"+MVFUABT //adicionado MVFUABT pois a variável MVABATIM não está retornando FU-

			RecLock(cAlias,.f.)
			Replace E1_OK with cMarca
			(cAlias)->(MsUnlock())

			If E1_TIPO $ MVABATIM+"/"+MVFUABT //adicionado MVFUABT pois a variável MVABATIM não está retornando FU-
				nValor-=Moeda(E1_SALDO,1,"R")
			Else
				nValor+=Moeda(E1_SALDO,1,"R")
			Endif
			If Valtype(cMarca) != "U"
				nQtdTit++
			EndIf
		Else
			RecLock(cAlias,.f.)
			Replace E1_OK with "  "
			(cAlias)->(MsUnlock())
		EndIF
	Endif
	dbSelectArea(cAlias)
	(cAlias)->(dbSkip())
Enddo

dbSelectArea(cAlias)
(cAlias)->(dbgoto(nRec))

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} Fa070bAval
Bloco de Marcação da Markbrowse

@author Mauricio Pequim Jr
@since  06/01/2016
@version 12.1.7
/*/
//-------------------------------------------------------------------
Static Function Fa070bAval(cAliasSE1,cMarca,oValor,oQtda)
Local lRet	:= .T.

SE1->(dbGoto((cAliasSE1)->RECNOSE1))

lRet	:=	FA070Integ(.F.)

If lRet
	// Verifica se o registro nao esta sendo utilizado em outro terminal
	If SE1->(MsRLock()) .AND. (cAliasSE1)->(MsRLock())
		FA070Inverte(cMarca,oValor,oQtda,.F.,cAliasLote) // Marca o registro e trava
		lRet := .T.
	Else
		IW_MsgBox(STR0215,STR0144,"STOP")  //"Este titulo está sendo utilizado em outro terminal, não pode ser utilizado na fatura"###"Atenção"
		lRet := .F.
	Endif
Endif
Return lRet

//-------------------------------------------------------------------------
/*/{Protheus.doc} Fa070Inverte
Marca e Desmarca Titulos, invertendo a marcação existente da Markbrowse

@author Mauricio Pequim Jr
@since  06/01/2016
@version 12.1.7
/*/
//-------------------------------------------------------------------------
Function Fa070Inverte(cMarca,oValor,oQtda,lTodos,cAliasSE1)
LOCAL nReg 			:= (cAliasSe1)->(Recno())
Local lSavTTS 		:= __TTSInUse
Local nValorMarca	:= SE1->(E1_SALDO+E1_SDACRES-E1_SDDECRE)
Local cFieldMarca	:= "E1_OK"
Local lBxTitRec		:= .T.
Local nTaxaAp	  	:= 0
Local lCondic		:= .F.
Local lF110TIT := ExistBlock("F110TIT")

DEFAULT lTodos	:= .T.

dbSelectArea(cAliasSE1)

If lTodos
	dbGoTop()
Endif

While !lTodos .or. (!(cAliasSE1)->(Eof()))

	If lTodos
		SE1->(dbGoto((cAliasSE1)->RECNOSE1))
	Endif

	lCondic := SE1->(MsRLock()) .AND. (cAliasSE1)->(MsRLock())

	If (lTodos .And. lCondic) .Or. !lTodos

		IF lF110TIT .And. cFieldMarca == "E1_OK" .And. Empty(&cFieldMarca)
			// Bloqueio antes de chamar o ponto de entrada, pois no momento da chamada deste mesmo PE no
			// FINA110, funcoes Fa110Marca e Fa110Inverte o registro da SE1 jah estah bloqueado.
			lBxTitRec := ExecBlock("F110TIT",.F.,.F., { nValorMarca })
		Endif

		IIF(SE1->E1_TXMOEDA>0,nTaxaAp:=SE1->E1_TXMOEDA,NIL)

		//Inverto a marcação quando chamo direto a inversão de marcação da FWMARKBROWSE()
		//Quando marco ou desmarco um titulo, ele já chega com ou sem a marca por conta da FWMARKBROWSE()
		If lTodos
			If Empty((cAliasSE1)->E1_OK)
				(cAliasSE1)->E1_OK	:= cMarca
				(cAliasSE1)->(MsUnlock())
			Else
				(cAliasSE1)->E1_OK	:= "  "
				(cAliasSE1)->(MsUnlock())
				SE1->(MsUnlock())
			Endif
		Endif

		//Marcou o titulo
		IF (cAliasSE1)->E1_OK == cMarca

			If lBxTitRec
				If SE1->E1_TIPO $ MVABATIM+"/"+MVFUABT //adicionado MVFUABT pois a variável MVABATIM não está retornando FU-
					nValor -= xMoeda(E1_SALDO+E1_SDACRES-E1_SDDECRE,SE1->E1_MOEDA,nMoedaBco,E1_VENCREA,,nTaxaAp)
				Else
					nValor += xMoeda(E1_SALDO+E1_SDACRES-E1_SDDECRE,SE1->E1_MOEDA,nMoedaBco,E1_VENCREA,,nTaxaAp)
				Endif
			Endif
			nQtdtit++

		Else	//Desmarcou o titulo
			If SE1->E1_TIPO $ MVABATIM+"/"+MVFUABT //adicionado MVFUABT pois a variável MVABATIM não está retornando FU-
				nValor += xMoeda(E1_SALDO+E1_SDACRES-E1_SDDECRE,SE1->E1_MOEDA,nMoedaBco,E1_VENCREA,,nTaxaAp)
			Else
				nValor -= xMoeda(E1_SALDO+E1_SDACRES-E1_SDDECRE,SE1->E1_MOEDA,nMoedaBco,E1_VENCREA,,nTaxaAp)
			Endif
			nQtdtit--
			nQtdTit:= Iif(nQtdTit<0,0,nQtdTit)
		Endif
	EndIf

	If lTodos
		dbSelectArea(cAliasSE1)
		dbSkip()
	Else
		Exit
	Endif
EndDo

If nValor < 0
	nValor := 0
Endif

__TTSInUse := lSavTTS

nQtdTit:= Iif(nQtdTit<0,0,nQtdTit)
(cAliasSe1)->(dbGoto(nReg))
oValor:Refresh()
oQtda:Refresh()
oMrkBrowse:oBrowse:Refresh()

Return Nil

//-------------------------------------------------------------------------
/*/{Protheus.doc} F70CancTB
Realiza o controle da mesagem unica de atualização de parcelas se a tela de
baixa for cancela sem efetuar a baixa (Fini070a).
@author Tiago Malta
@since  17/10/2017
@version 12.1.17

@alter Wesley Alves Pereira
@since  15/05/2018
@version 12.1.17
Criação do ponto de entrada F070TREA para manipulação da TAG Process na mensagem FINI070A.

/*/
//-------------------------------------------------------------------------
Function F70CancTB() As Char
	Local cRet As Char
	Local cTpRea As Char

	cRet := ""
	cTpRea := ""

	//Se a tela de baixa foi cancelada, então envia a tag de processo do FINI070a como "0", para cancelar a atualização de valor que foi feita na abertura da tela de baixa
	If __lCancTBx
		cRet := "0"
	Else
		cRet := "1"
	EndIf

	If __lF70TREA

		cTpRea := ExecBlock( "F070TREA", .F., .F. )

		If Valtype( cTpRea ) == "C" .And. !Empty( cTpRea )
			cRet := SubStr( cTpRea, 1, 1 )
		EndIf

	EndIf

Return cRet

//-------------------------------------------------------------------------
/*/{Protheus.doc} F70VlDsc
Função de Validação do campo de desconto
@param lTpDesc, flag para verificar o campo TPDESC na tabela SE5 (<C>ondicional ou <I>ncondicional)
@param lNatApura, flag para verificar se a Natureza está configurada para apurar impostos no SPED PIS/COFINS
@return lRet – Retorna se o valor de desconto digitado é válido ou não
@author Rogerio Melonio
@since  04/04/2018
@version 12.1.17
/*/
//-------------------------------------------------------------------------
Static Function F70VlDsc( lTpDesc as Logical , lNatApura As Logical ) As Logical
	Local lRet As Logical
	Local l070Desc  As Logical
	Local l070Valor As Logical
	Local lBolsaRM  As Logical
	Local nBolsaRM  As Numeric

	Default lTpDesc   := .F.
	Default lNatApura := .F.

	lRet 		:= .T.
	l070Desc 	:= .T.
	l070Valor 	:= .T.
	lBolsaRM 	:= .T.
	nBolsaRM 	:= 0

	If ( nOldDescont <> nDescont )

		l070Desc := FA070DESC(oDescont)

		If nDescont > xMoeda(SE1->E1_SALDO+nJuros+nVA+nMulta+nAcresc-nDecresc,SE1->E1_MOEDA,nMoedaBco,dBaixa,,nTxMoeda)
			lRet	:= .F.
		EndIf
		If lRet
			l070Valor := fA070Val(nDescont,nTxMoeda)
		EndIf

		//Se houver valor de bolsa informado no título (título do RM educacional), então não deixa digitar um desconto menor do que o valor da bolsa
		nBolsaRM := SE1->E1_VLBOLSA
		If nBolsaRM > 0
			If nDescont >= nBolsaRM
				lBolsaRM := .T.
			Else
				lBolsaRM := .F.
				Help( ,, "F70VlDscBolsa",, STR0288 + cValToChar(nBolsaRM), 1, 0,,,,,, {STR0289} ) //"O título a ser baixado possuí um valor de bolsa informado. O valor de desconto não pode ser inferior ao valor de bolsa. Valor da bolsa: ", "Informe um valor de desconto igual ou superior ao valor de bolsa. Caso o valor de bolsa esteja incorreto, verifique tal informação junto ao sistema educacional integrado."
			EndIf
		Else
			lBolsaRM := .T.
		EndIf

		If lRet
			lRet := l070Desc .And. l070Valor .And. ( nDescont <= xMoeda(SE1->E1_SALDO + nJuros+nVA+nMulta+nAcresc-nDecresc,SE1->E1_MOEDA,nMoedaBco,dBaixa,,nTxMoeda) ) .And. lBolsaRM
		EndIf

		If lRet
			nOldDescont := nDescont
			If lNatApura
				Fa070DesCI(lTpDesc,lNatApura)
			EndIf
		EndIf
	EndIf

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} F070VldImp()
Realiza  a validação dos impostos a serem retidos na baixa.
@author  Rodrigo Oliveira
@since 09/11/2017
@version 12
/*/
//-------------------------------------------------------------------

Function F070VldImp(nVlReceb, dDataRef, lPccBxCr, lIrPjBxCr, lCalcIssBx,lImpMotor)

	Local nImpost 	:= 0
	Local nZ 			:= 0
	Local aMotRet 	:= {}
	Local nBaseImp	as Numeric
	Local aBaseImp	:= {}
	Local cChaveAux 	:= ""
	Local cIdTit 		:= ""
	Local nOldPis		:= 0
	Local nOldCof		:= 0
	Local nOldCsl		:= 0
	Local nOldIrf		:= 0
	Local nOldIss		:= 0
	Local lFina200 	:= FwIsInCallStack("FINA200")
	Local lRetImp := .T.

	Default lPccBxCr	:= .F.
	Default lIrPjBxCr	:= .F.
	Default lCalcIssBx 	:= .F.
	Default lImpMotor := .F.

	If lFina200
		nInss 		:= 0
		nIss 		:= 0
	Endif

	nOldPis	:= nPIS
	nOldCof	:= nCOFINS
	nOldCsl	:= nCSLL
	nOldIrf	:= nIrrf
	nOldIss	:= nIss

	nPIS	   	:= 0
	nCOFINS   	:= 0
	nCSLL    	:= 0

	nBaseImp	:= nVlReceb
	nIrrf 		:= 0
	nInss 		:= 0
	nIss 		:= 0
	nlImpMR 	:= 0

	If !Empty(SE1->E1_NUMBOR)
		lRetImp:= VLDBOR(SE1->E1_NUMBOR,"R")
	EndIf

	If lRetImp
		cChaveAux := FWxFilial( "SE1", SE1->E1_FILORIG ) + "|" + SE1->E1_PREFIXO + "|" + SE1->E1_NUM + "|" + SE1->E1_PARCELA + "|" + SE1->E1_TIPO + "|" + SE1->E1_CLIENTE + "|" + SE1->E1_LOJA
		cIdTit := FINGRVFK7( "SE1", cChaveAux )

		// Subistituição da validação do parãmetro MV_GLOSA para base diferenciada.
		If __lGlosIrf .And. (SE1->E1_VALOR == SE1->E1_SALDO)
			Aadd(aBaseImp, {"IRF",SE1->E1_VALOR})
		Endif
		If __lGlosPis .And. (SE1->E1_VALOR == SE1->E1_SALDO)
			Aadd(aBaseImp, {"PIS",SE1->E1_VALOR})
		Endif
		If __lGlosCof .And. (SE1->E1_VALOR == SE1->E1_SALDO)
			Aadd(aBaseImp, {"COF",SE1->E1_VALOR})
		Endif
		If __lGlosCsl .And. (SE1->E1_VALOR == SE1->E1_SALDO)
			Aadd(aBaseImp, {"CSL",SE1->E1_VALOR})
		Endif
		If __lGlosIss .And. (SE1->E1_VALOR == SE1->E1_SALDO)
			Aadd(aBaseImp, {"ISS",SE1->E1_VALOR})
		Endif
		If __lGlosIns .And. (SE1->E1_VALOR == SE1->E1_SALDO)
			Aadd(aBaseImp, {"INSS",SE1->E1_VALOR})
		Endif
		If __lGlosOut .And. (SE1->E1_VALOR == SE1->E1_SALDO)
			Aadd(aBaseImp, {"",SE1->E1_VALOR})
		Endif

		//Motor de retencoes.
		aMotRet := FINCalImp(  "2", SE1->E1_NATUREZ, SE1->E1_CLIENTE, SE1->E1_LOJA, cFilAnt, nBaseImp, dDataRef, .T.,aBaseImp, SE1->E1_TIPO,cChaveAux,cIdTit,{} )

		nImpost := Len(aMotRet)

		For nZ := 1 To nImpost
			Do Case
				Case AllTrim(aMotRet[nZ,8]) == "PIS" .And. aMotRet[nZ,9] == "2"
					nPis += aMotRet[nZ,5]
					__lPccMR := .T.
					lPccBxCr := .T.
				Case AllTrim(aMotRet[nZ,8]) == "COF" .And. aMotRet[nZ,9] == "2"
					nCofins += aMotRet[nZ,5]
					__lPccMR := .T.
					lPccBxCr := .T.
				Case AllTrim(aMotRet[nZ,8]) == "CSL" .And. aMotRet[nZ,9] == "2"
					nCsll += aMotRet[nZ,5]
					__lPccMR := .T.
					lPccBxCr := .T.
				Case AllTrim(aMotRet[nZ,8]) == "IRF" .And. aMotRet[nZ,9] == "2"
					nIrrf += aMotRet[nZ,5]
					__lIrfMR := .T.
					lIrPjBxCr := .T.
				Case AllTrim(aMotRet[nZ,8]) == "ISS" .And. aMotRet[nZ,9] == "2"
					nIss += aMotRet[nZ,5]
					__lIssMR := .T.
					lCalcIssBx := .T.
				OtherWise
					nlImpMR += aMotRet[nZ,5]
					__lImpMR := .T.
					lImpMotor 	:= .T.
			End Case
		Next nZ

		__nTotImp := (nPis + nCofins + nCsll + nIrrf + nInss + nIss + nlImpMR)
		nOldImp := __nTotImp

		
		If lPccBxCr .And. !__lPccMR
		 	If nPis <> nOldPis .And. nPis == 0
		 		nPis 	:= nOldPis
		 	EndIf
		 	If nCofins <> nOldCof .And. nCofins == 0
		 		nCofins := nOldCof
		 	EndIf
		 	If nCsll <> nOldCsl .And. nCsll == 0
		 		nCsll 	:= nOldCsl
		 	EndIf
		EndIf
		If lIrPjBxCr .And. !__lIrfMR
			If nIrrf <> nOldIrf .And. nIrrf == 0
				nIrrf 	:= nOldIrf
			EndIf
		EndIf
		If lCalcIssBx .And. !__lIssMR
		  	If nIss <> nOldIss .And. nIss == 0
		  		nIss	:= nOldIss
		  	EndIf
		EndIf
	EndIf

		aImpos := {}
		aImpos := aMotRet

Return aMotRet

//-------------------------------------------------------------------
/*/{Protheus.doc} F070VerImp()
Verifica quais impostos a serem calculados
(Natureza x Cliente)

@author  Rodrigo Oliveira
@since 18/12/2017
@version 12
/*/
//-------------------------------------------------------------------
Function F070VerImp(cCart As Character,cFilOrig As Character,cCliFor As Character,cLoja As Character,cTipo As Character, lBaixa As Logical,lIrPjBxCr As Logical,lPccBxCr As Logical,lCalcIssBx As Logical,;
						 	lIrfMR As Logical , lPccMR As Logical)

Local nY	:= 0
Local aImpConf		:= {}

//Parâmetros da função
Default cCart := ""
Default cFilOrig := ""
Default cCliFor := ""
Default cLoja := ""
Default cTipo	:= "" // a ser retirada
Default lIrPjBxCr	:= .F.
Default lPccBxCr	:= .F.
Default lCalcIssBx	:= .F.

If Type("__lPccMR") == "U"
	__lPccMR := .F.
EndIf
If Type("__lIrfMR") == "U"
	__lIrfMR := .F.
EndIf
If Type("__lInsMR") == "U"
	__lInsMR := .F.
EndIf
If Type("__lIssMR") == "U"
	__lIssMR := .F.
EndIf

aImpConf := FinImpConf(cCart, cFilOrig, cCliFor, cLoja, SE1->E1_NATUREZ)

For nY := 1 To Len(aImpConf)
	Do Case
		Case aImpConf[nY,1] $ "PIS|COF|CSL"
			__lPccMR := .T.
			lPccBxCr := .T.
			lPccMR   := .T.
			If aImpConf[nY,7] == "1" // Subistituição da validação do parãmetro MV_GLOSA
			 	If aImpConf[nY,1] $ "PIS"
					__lGlosPis := .T.
				ElseIf aImpConf[nY,1] $ "COF"
					__lGlosCof := .T.
				Elseif aImpConf[nY,1] $ "CSL"
					__lGlosCsl := .T.
				Endif
			Endif
		Case aImpConf[nY,1] == "IRF"
			__lIrfMR 	:= .T.
			lIrPjBxCr 	:= .T.
			lIrfMR 	:= .T.
			If aImpConf[nY,7] == "1" // Subistituição da validação do parãmetro MV_GLOSA
				__lGlosIrf := .T.
			Endif
		Case aImpConf[nY,1] == "ISS"
			__lIssMR := .T.
			lCalcIssBx := .T.
			If aImpConf[nY,7] == "1" // Subistituição da validação do parãmetro MV_GLOSA
				__lGlosIss := .T.
			Endif
		OtherWise
			__lImpMR := .T.
			If aImpConf[nY,7] == "1" // Subistituição da validação do parãmetro MV_GLOSA
				__lGlosOut := .T.
			Endif
	EndCase
Next nY

If __lGlosPis .or. __lGlosCof .or. __lGlosCsl .or. __lGlosIrf .or. __lGlosIss .or. __lGlosIns .or. __lGlosOut
	__lGlosaMr := .T.
Endif

Return aImpConf


//-------------------------------------------------------------------
/*/{Protheus.doc} faLojxRMul()
Verifica o tipo de juros para calcular a multa.
@author richard.lopes
@since 21/06/2019
@version 12
/*/
//-------------------------------------------------------------------
Function faLojxRMul(dDtBaixa)
	Local cMvJurTipo := SuperGetMv("MV_JURTIPO",,"")
	Local lMulLoj    := SuperGetMv("MV_LJINTFS", ,.F.)

	Default dDtBaixa := dDataBase

	If !(AllTrim(SE1->E1_ORIGEM) $ 'L|S|T' .Or. SE1->E1_IDLAN > 0)
		// Verifica se o tipo de calculo de juros é igual (L)loja ou Indicacao do calculo de Multa do Loja, calcula a multa
		If !(SE1->E1_TIPO $ MVRECANT + "|" + MV_CRNEG) .And. (cMvJurTipo == "L" .OR. lMulLoj)
			nMulta := LojxRMul( , , , SE1->E1_SALDO, SE1->E1_ACRESC, SE1->E1_VENCREA, dDtBaixa, , SE1->E1_MULTA, ,;
								SE1->E1_PREFIXO, SE1->E1_NUM, SE1->E1_PARCELA, SE1->E1_TIPO, SE1->E1_CLIENTE, SE1->E1_LOJA, "SE1", .T.)
		EndIf
	EndIf
Return

//-------------------------------------------------------------------
/*/{Protheus.doc} ValTxMoeda()
Validação do campo Taxa Contratada
@author rafael.ronodn
@since 09/09/2019
@version 12
/*/
//-------------------------------------------------------------------
Static Function ValTxMoeda( nTxMoeda 	As Numeric , nOldTxmoeda	As Numeric , nMulta As Numeric , nOldMulta As Numeric , ;
							nJuros 		As Numeric , nOldJuros		As Numeric ) As Logical

If nOldTxmoeda <> nTxMoeda

	If nOldJuros + nJuros
		fA070Data(nTxMoeda,.F.,,,,.T.)	
	EndIf

	If nOldMulta + nMulta > 0
		fA070Val(nMulta,nTxMoeda)
	EndIf

	F070CnvPcc(nTxMoeda, SE1->E1_MOEDA)

	nOldTxmoeda := nTxMoeda

EndIf

Return .T.
